(function(n, t) {
    typeof exports == "object" && typeof module == "object" ? module.exports = t() : typeof define == "function" && define.amd ? define([], t) : typeof exports == "object" ? exports.echarts = t() : n.echarts = t()
})(this, function() {
        return function(n) {
                function t(r) {
                    if (i[r]) return i[r].exports;
                    var u = i[r] = {
                        exports: {},
                        id: r,
                        loaded: !1
                    };
                    return n[r].call(u.exports, u, u.exports, t), u.loaded = !0, u.exports
                }
                var i = {};
                return t.m = n, t.c = i, t.p = "", t(0)
            }([function(n, t, i) {
                        n.exports = i(1);
                        i(99);
                        i(134);
                        i(139);
                        i(148);
                        i(152);
                        i(162);
                        i(183);
                        i(195);
                        i(216);
                        i(220);
                        i(224);
                        i(239);
                        i(245);
                        i(252);
                        i(258);
                        i(262);
                        i(270);
                        i(112);
                        i(274);
                        i(280);
                        i(284);
                        i(295);
                        i(225);
                        i(298);
                        i(304);
                        i(316);
                        i(317);
                        i(331);
                        i(346);
                        i(352);
                        i(355);
                        i(358);
                        i(367);
                        i(380)
                    }, function(n, t, i) {
                        function a(n) {
                            return function(t, i, r) {
                                t = t && t.toLowerCase();
                                v.prototype[n].call(this, t, i, r)
                            }
                        }

                        function y() {
                            v.call(this)
                        }

                        function d(n, t, i) {
                            function r(n, t) {
                                return n.prio - t.prio
                            }
                            i = i || {};
                            typeof t == "string" && (t = fi[t]);
                            this.id;
                            this.group;
                            this._dom = n;
                            this._zr = k.init(n, {
                                renderer: i.renderer || "canvas",
                                devicePixelRatio: i.devicePixelRatio,
                                width: i.width,
                                height: i.height
                            });
                            this._theme = u.clone(t);
                            this._chartsViews = [];
                            this._chartsMap = {};
                            this._componentsViews = [];
                            this._componentsMap = {};
                            this._api = new si(this);
                            this._coordSysMgr = new lt;
                            v.call(this);
                            this._messageCenter = new y;
                            this._initEvents();
                            this.resize = u.bind(this.resize, this);
                            this._pendingActions = [];
                            yt(p, r);
                            yt(ht, r);
                            this._zr.animation.on("frame", this._onframe, this)
                        }

                        function dt(n, t, i) {
                            var f = this._model,
                                e = this._coordSysMgr.getCoordinateSystems(),
                                o, r, u;
                            for (t = ut.parseFinder(f, t), r = 0; r < e.length; r++)
                                if (u = e[r], u[n] && (o = u[n](f, t, i)) != null) return o;
                            !0 && console.warn("No coordinate system that supports " + n + " found by the given finder.")
                        }

                        function gt(n, t) {
                            var i = this._model;
                            i && i.eachComponent({
                                mainType: "series",
                                query: t
                            }, function(r) {
                                var u = this._chartsMap[r.__viewId];
                                u && u.__alive && u[n](r, i, this._api, t)
                            }, this)
                        }

                        function et(n, t, i) {
                            var r = this._api;
                            e(this._componentsViews, function(u) {
                                var f = u.__model;
                                u[n](f, t, r, i);
                                g(f, u)
                            }, this);
                            t.eachSeries(function(u) {
                                var f = this._chartsMap[u.__viewId];
                                f[n](u, t, r, i);
                                g(u, f);
                                ri(u, f)
                            }, this);
                            ii(this._zr, t)
                        }

                        function ni(n, t) {
                            for (var f, u = n === "component", r = u ? this._componentsViews : this._chartsViews, e = u ? this._componentsMap : this._chartsMap, o = this._zr, i = 0; i < r.length; i++) r[i].__alive = !1;
                            for (t[u ? "eachComponent" : "eachSeries"](function(n, i) {
                                    var s, f, h, c;
                                    if (u) {
                                        if (n === "series") return
                                    } else i = n;
                                    if (s = i.id + "_" + i.type, f = e[s], !f)
                                        if (h = b.parseClassType(i.type), c = u ? it.getClass(h.main, h.sub) : rt.getClass(h.sub), c) f = new c, f.init(t, this._api), e[s] = f, r.push(f), o.add(f.group);
                                        else return;
                                    i.__viewId = s;
                                    f.__alive = !0;
                                    f.__id = s;
                                    f.__model = i
                                }, this), i = 0; i < r.length;) f = r[i], f.__alive ? i++ : (o.remove(f.group), f.dispose(t, this._api), r.splice(i, 1), delete e[f.__id])
                        }

                        function li(n, t) {
                            e(ht, function(i) {
                                i.func(n, t)
                            })
                        }

                        function ai(n) {
                            var t = {};
                            n.eachSeries(function(n) {
                                var i = n.get("stack"),
                                    r = n.getData(),
                                    u;
                                i && r.type === "list" && (u = t[i], u && (r.stackedOn = u), t[i] = r)
                            })
                        }

                        function vi(n, t) {
                            var i = this._api;
                            e(p, function(r) {
                                r.isLayout && r.func(n, i, t)
                            })
                        }

                        function ot(n, t) {
                            var i = this._api;
                            n.clearColorPalette();
                            n.eachSeries(function(n) {
                                n.clearColorPalette()
                            });
                            e(p, function(r) {
                                r.func(n, i, t)
                            })
                        }

                        function yi(n, t) {
                            var i = this._api;
                            e(this._componentsViews, function(r) {
                                var u = r.__model;
                                r.render(u, n, i, t);
                                g(u, r)
                            }, this);
                            e(this._chartsViews, function(n) {
                                n.__alive = !1
                            }, this);
                            n.eachSeries(function(r) {
                                var u = this._chartsMap[r.__viewId];
                                u.__alive = !0;
                                u.render(r, n, i, t);
                                u.group.silent = !!r.get("silent");
                                g(r, u);
                                ri(r, u)
                            }, this);
                            ii(this._zr, n);
                            e(this._chartsViews, function(t) {
                                t.__alive || t.remove(n, i)
                            }, this)
                        }

                        function ii(n, t) {
                            var i = n.storage,
                                r = 0;
                            i.traverse(function(n) {
                                n.isGroup || r++
                            });
                            r > t.get("hoverLayerThreshold") && !c.node && i.traverse(function(n) {
                                n.isGroup || (n.useHoverLayer = !0)
                            })
                        }

                        function ri(n, t) {
                            var u = 0,
                                f, i, r;
                            t.group.traverse(function(n) {
                                n.type === "group" || n.ignore || u++
                            });
                            f = +n.get("progressive");
                            i = u > n.get("progressiveThreshold") && f && !c.node;
                            i && t.group.traverse(function(n) {
                                    n.isGroup || (n.progressive = i ? Math.floor(u++/f):-1,i&&n.stopAnimation(!0))});r=n.get("blendMode")||null;!0&&!c.canvasSupported&&r&&r!=="source-over"&&console.warn("Only canvas support blendMode");t.group.traverse(function(n){n.isGroup||n.setStyle("blend",r)})}function g(n,t){var i=n.get("z"),r=n.get("zlevel");t.group.traverse(function(n){n.type!=="group"&&(i!=null&&(n.z=i),r!=null&&(n.zlevel=r))})}function bi(n){function r(n,i){for(var u,r=0;r<n.length;r++)u=n[r],u[t]=i}var i=0,f=1,o=2,t="__connectUpdateStatus";u.each(nt,function(s,c){n._messageCenter.on(c,function(s){if(tt[n.group]&&n[t]!==i){var l=n.makeActionFromEvent(s),c=[];u.each(h,function(t){t!==n&&t.group===n.group&&c.push(t)});r(c,i);e(c,function(n){n[t]!==f&&n.dispatchAction(l)});r(c,o)}})})}var f,s,ti,w;!1&&(typeof window!="undefined"?window.__DEV__=!0:typeof global!="undefined"&&(global.__DEV__=!0));
                                        /*!
                                         * ECharts, a javascript interactive chart library.
                                         *
                                         * Copyright (c) 2015, Baidu Inc.
                                         * All rights reserved.
                                         *
                                         * LICENSE
                                         * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt
                                         */
                                        var c = i(2), oi = i(3), si = i(25), lt = i(26), hi = i(27), b = i(19), at = i(28), it = i(29), rt = i(42), ci = i(43), ut = i(5), k = i(81), u = i(4), vt = i(39), v = i(33), yt = i(85), e = u.each, pt = 1e3, wt = 1e3, bt = 2e3, kt = 3e3, o = "__flag_in_main_process", ft = "_hasGradientOrPatternBg", l = "_optionUpdated"; y.prototype.on = a("on"); y.prototype.off = a("off"); y.prototype.one = a("one"); u.mixin(y, v); f = d.prototype; f._onframe = function() {
                                            this[l] && (this[o] = !0, s.prepareAndUpdate.call(this), this[o] = !1, this[l] = !1)
                                        }; f.getDom = function() {
                                            return this._dom
                                        }; f.getZr = function() {
                                            return this._zr
                                        }; f.setOption = function(n, t, i) {
                                            if (!0 && u.assert(!this[o], "`setOption` should not be called during main process."), this[o] = !0, !this._model || t) {
                                                var r = new hi(this._api),
                                                    f = this._theme,
                                                    e = this._model = new oi(null, null, f, r);
                                                e.init(null, null, f, r)
                                            }
                                            this._model.setOption(n, ui);
                                            i ? this[l] = !0 : (s.prepareAndUpdate.call(this), this._zr.refreshImmediately(), this[l] = !1);
                                            this[o] = !1;
                                            this._flushPendingActions()
                                        }; f.setTheme = function() {
                                            console.log("ECharts#setTheme() is DEPRECATED in ECharts 3.0")
                                        }; f.getModel = function() {
                                            return this._model
                                        }; f.getOption = function() {
                                            return this._model && this._model.getOption()
                                        }; f.getWidth = function() {
                                            return this._zr.getWidth()
                                        }; f.getHeight = function() {
                                            return this._zr.getHeight()
                                        }; f.getRenderedCanvas = function(n) {
                                            if (c.canvasSupported) {
                                                n = n || {};
                                                n.pixelRatio = n.pixelRatio || 1;
                                                n.backgroundColor = n.backgroundColor || this._model.get("backgroundColor");
                                                var t = this._zr,
                                                    i = t.storage.getDisplayList();
                                                return u.each(i, function(n) {
                                                    n.stopAnimation(!0)
                                                }), t.painter.getRenderedCanvas(n)
                                            }
                                        }; f.getDataURL = function(n) {
                                            var i;
                                            n = n || {};
                                            var r = n.excludeComponents,
                                                u = this._model,
                                                t = [],
                                                f = this;
                                            return e(r, function(n) {
                                                u.eachComponent({
                                                    mainType: n
                                                }, function(n) {
                                                    var i = f._componentsMap[n.__viewId];
                                                    i.group.ignore || (t.push(i), i.group.ignore = !0)
                                                })
                                            }), i = this.getRenderedCanvas(n).toDataURL("image/" + (n && n.type || "png")), e(t, function(n) {
                                                n.group.ignore = !1
                                            }), i
                                        }; f.getConnectedDataURL = function(n) {
                                            var a;
                                            if (c.canvasSupported) {
                                                var v = this.group,
                                                    y = Math.min,
                                                    p = Math.max,
                                                    f = Infinity;
                                                if (tt[v]) {
                                                    var i = f,
                                                        r = f,
                                                        o = -f,
                                                        s = -f,
                                                        w = [],
                                                        t = n && n.pixelRatio || 1;
                                                    u.each(h, function(t) {
                                                        if (t.group === v) {
                                                            var e = t.getRenderedCanvas(u.clone(n)),
                                                                f = t.getDom().getBoundingClientRect();
                                                            i = y(f.left, i);
                                                            r = y(f.top, r);
                                                            o = p(f.right, o);
                                                            s = p(f.bottom, s);
                                                            w.push({
                                                                dom: e,
                                                                left: f.left,
                                                                top: f.top
                                                            })
                                                        }
                                                    });
                                                    i *= t;
                                                    r *= t;
                                                    o *= t;
                                                    s *= t;
                                                    var b = o - i,
                                                        d = s - r,
                                                        l = u.createCanvas();
                                                    return l.width = b, l.height = d, a = k.init(l), e(w, function(n) {
                                                        var u = new ci.Image({
                                                            style: {
                                                                x: n.left * t - i,
                                                                y: n.top * t - r,
                                                                image: n.dom
                                                            }
                                                        });
                                                        a.add(u)
                                                    }), a.refreshImmediately(), l.toDataURL("image/" + (n && n.type || "png"))
                                                }
                                                return this.getDataURL(n)
                                            }
                                        }; f.convertToPixel = u.curry(dt, "convertToPixel"); f.convertFromPixel = u.curry(dt, "convertFromPixel"); f.containPixel = function(n, t) {
                                            var r = this._model,
                                                i;
                                            return n = ut.parseFinder(r, n), u.each(n, function(n, r) {
                                                r.indexOf("Models") >= 0 && u.each(n, function(n) {
                                                    var f = n.coordinateSystem,
                                                        u;
                                                    f && f.containPoint ? i |= !!f.containPoint(t) : r === "seriesModels" ? (u = this._chartsMap[n.__viewId], u && u.containPoint ? i |= u.containPoint(t, n) : !0 && console.warn(r + ": " + (u ? "The found component do not support containPoint." : "No view mapping to the found component."))) : !0 && console.warn(r + ": containPoint is not supported")
                                                }, this)
                                            }, this), !!i
                                        }; f.getVisual = function(n, t) {
                                            var f = this._model,
                                                r, i, u;
                                            return n = ut.parseFinder(f, n, {
                                                defaultMainType: "series"
                                            }), r = n.seriesModel, !0 && (r || console.warn("There is no specified seires model")), i = r.getData(), u = n.hasOwnProperty("dataIndexInside") ? n.dataIndexInside : n.hasOwnProperty("dataIndex") ? i.indexOfRawIndex(n.dataIndex) : null, u != null ? i.getItemVisual(u, t) : i.getVisual(t)
                                        }; s = {
                                            update: function(n) {
                                                var i = this._model,
                                                    e = this._api,
                                                    o = this._coordSysMgr,
                                                    r = this._zr,
                                                    t, u, f;
                                                i && (i.restoreData(), o.create(this._model, this._api), li.call(this, i, e), ai.call(this, i), o.update(i, e), ot.call(this, i, n), yi.call(this, i, n), t = i.get("backgroundColor") || "transparent", u = r.painter, u.isSingleCanvas && u.isSingleCanvas() ? r.configLayer(0, {
                                                    clearColor: t
                                                }) : (c.canvasSupported || (f = vt.parse(t), t = vt.stringify(f, "rgb"), f[3] === 0 && (t = "transparent")), t.colorStops || t.image ? (r.configLayer(0, {
                                                    clearColor: t
                                                }), this[ft] = !0, this._dom.style.background = "transparent") : (this[ft] && r.configLayer(0, {
                                                    clearColor: null
                                                }), this[ft] = !1, this._dom.style.background = t)))
                                            },
                                            updateView: function(n) {
                                                var t = this._model;
                                                t && (t.eachSeries(function(n) {
                                                    n.getData().clearAllVisual()
                                                }), ot.call(this, t, n), et.call(this, "updateView", t, n))
                                            },
                                            updateVisual: function(n) {
                                                var t = this._model;
                                                t && (t.eachSeries(function(n) {
                                                    n.getData().clearAllVisual()
                                                }), ot.call(this, t, n), et.call(this, "updateVisual", t, n))
                                            },
                                            updateLayout: function(n) {
                                                var t = this._model;
                                                t && (vi.call(this, t, n), et.call(this, "updateLayout", t, n))
                                            },
                                            highlight: function(n) {
                                                gt.call(this, "highlight", n)
                                            },
                                            downplay: function(n) {
                                                gt.call(this, "downplay", n)
                                            },
                                            prepareAndUpdate: function(n) {
                                                var t = this._model;
                                                ni.call(this, "component", t);
                                                ni.call(this, "chart", t);
                                                s.update.call(this, n)
                                            }
                                        }; f.resize = function(n) {
                                            !0 && u.assert(!this[o], "`resize` should not be called during main process.");
                                            this[o] = !0;
                                            this._zr.resize(n);
                                            var t = this._model && this._model.resetOption("media");
                                            s[t ? "prepareAndUpdate" : "update"].call(this);
                                            this._loadingFX && this._loadingFX.resize();
                                            this[o] = !1;
                                            this._flushPendingActions()
                                        }; f.showLoading = function(n, t) {
                                            if (u.isObject(n) && (t = n, n = ""), n = n || "default", this.hideLoading(), !ct[n]) {
                                                !0 && console.warn("Loading effects " + n + " not exists.");
                                                return
                                            }
                                            var i = ct[n](this._api, t),
                                                r = this._zr;
                                            this._loadingFX = i;
                                            r.add(i)
                                        }; f.hideLoading = function() {
                                            this._loadingFX && this._zr.remove(this._loadingFX);
                                            this._loadingFX = null
                                        }; f.makeActionFromEvent = function(n) {
                                            var t = u.extend({}, n);
                                            return t.type = nt[n.type], t
                                        }; f.dispatchAction = function(n, t) {
                                            var v = st[n.type],
                                                r, f, e, y, h, i, p, c, a;
                                            if (v) {
                                                if (r = v.actionInfo, f = r.update || "update", this[o]) {
                                                    this._pendingActions.push(n);
                                                    return
                                                }
                                                for (this[o] = !0, e = [n], y = !1, n.batch && (y = !0, e = u.map(n.batch, function(t) {
                                                        return t = u.defaults(u.extend({}, t), n), t.batch = null, t
                                                    })), h = [], p = n.type === "highlight" || n.type === "downplay", c = 0; c < e.length; c++) a = e[c], i = v.action(a, this._model), i = i || u.extend({}, a), i.type = r.event || i.type, h.push(i), p && s[f].call(this, a);
                                                f === "none" || p || (this[l] ? (s.prepareAndUpdate.call(this, n), this[l] = !1) : s[f].call(this, n));
                                                i = y ? {
                                                    type: r.event || n.type,
                                                    batch: h
                                                } : h[0];
                                                this[o] = !1;
                                                t || this._messageCenter.trigger(i.type, i);
                                                this._flushPendingActions()
                                            }
                                        }; f._flushPendingActions = function() {
                                            for (var n = this._pendingActions, t; n.length;) t = n.shift(), this.dispatchAction(t)
                                        }; f.on = a("on"); f.off = a("off"); f.one = a("one"); ti = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"]; f._initEvents = function() {
                                            e(ti, function(n) {
                                                this._zr.on(n, function(t) {
                                                    var e = this.getModel(),
                                                        i = t.target,
                                                        r, f;
                                                    n === "globalout" ? r = {} : i && i.dataIndex != null ? (f = i.dataModel || e.getSeriesByIndex(i.seriesIndex), r = f && f.getDataParams(i.dataIndex, i.dataType) || {}) : i && i.eventData && (r = u.extend({}, i.eventData));
                                                    r && (r.event = t, r.type = n, this.trigger(n, r))
                                                }, this)
                                            }, this);
                                            e(nt, function(n, t) {
                                                this._messageCenter.on(t, function(n) {
                                                    this.trigger(t, n)
                                                }, this)
                                            }, this)
                                        }; f.isDisposed = function() {
                                            return this._disposed
                                        }; f.clear = function() {
                                            this.setOption({
                                                series: []
                                            }, !0)
                                        }; f.dispose = function() {
                                            if (this._disposed) {
                                                !0 && console.warn("Instance " + this.id + " has been disposed");
                                                return
                                            }
                                            this._disposed = !0;
                                            var n = this._api,
                                                t = this._model;
                                            e(this._componentsViews, function(i) {
                                                i.dispose(t, n)
                                            });
                                            e(this._chartsViews, function(i) {
                                                i.dispose(t, n)
                                            });
                                            this._zr.dispose();
                                            delete h[this.id]
                                        }; u.mixin(d, v);
                                        var st = [], nt = {}, ht = [], ui = [], p = [], fi = {}, ct = {}, h = {}, tt = {}, pi = new Date - 0, wi = new Date - 0, ei = "_echarts_instance_", r = {
                                            version: "3.3.0",
                                            dependencies: {
                                                zrender: "3.2.0"
                                            }
                                        }; r.init = function(n, t, i) {
                                            if (1) {
                                                if (k.version.replace(".", "") - 0 < r.dependencies.zrender.replace(".", "") - 0) throw new Error("ZRender " + k.version + " is too old for ECharts " + r.version + ". Current version need ZRender " + r.dependencies.zrender + "+");
                                                if (!n) throw new Error("Initialize failed: invalid dom.");
                                                !u.isDom(n) || n.nodeName.toUpperCase() === "CANVAS" || n.clientWidth && n.clientHeight || console.warn("Can't get dom width or height")
                                            }
                                            var f = new d(n, t, i);
                                            return f.id = "ec_" + pi++, h[f.id] = f, n.setAttribute && n.setAttribute(ei, f.id), bi(f), f
                                        }; r.connect = function(n) {
                                            if (u.isArray(n)) {
                                                var t = n;
                                                n = null;
                                                u.each(t, function(t) {
                                                    t.group != null && (n = t.group)
                                                });
                                                n = n || "g_" + wi++;
                                                u.each(t, function(t) {
                                                    t.group = n
                                                })
                                            }
                                            return tt[n] = !0, n
                                        }; r.disConnect = function(n) {
                                            tt[n] = !1
                                        }; r.dispose = function(n) {
                                            u.isDom(n) ? n = r.getInstanceByDom(n) : typeof n == "string" && (n = h[n]);
                                            n instanceof d && !n.isDisposed() && n.dispose()
                                        }; r.getInstanceByDom = function(n) {
                                            var t = n.getAttribute(ei);
                                            return h[t]
                                        }; r.getInstanceById = function(n) {
                                            return h[n]
                                        }; r.registerTheme = function(n, t) {
                                            fi[n] = t
                                        }; r.registerPreprocessor = function(n) {
                                            ui.push(n)
                                        }; r.registerProcessor = function(n, t) {
                                            if (typeof n == "function" && (t = n, n = pt), !0 && isNaN(n)) throw new Error("Unkown processor priority");
                                            ht.push({
                                                prio: n,
                                                func: t
                                            })
                                        }; r.registerAction = function(n, t, i) {
                                            typeof t == "function" && (i = t, t = "");
                                            var r = u.isObject(n) ? n.type : [n, n = {
                                                event: t
                                            }][0];
                                            n.event = (n.event || r).toLowerCase();
                                            t = n.event;
                                            st[r] || (st[r] = {
                                                action: i,
                                                actionInfo: n
                                            });
                                            nt[t] = r
                                        }; r.registerCoordinateSystem = function(n, t) {
                                            lt.register(n, t)
                                        }; r.registerLayout = function(n, t) {
                                            if (typeof n == "function" && (t = n, n = wt), !0 && isNaN(n)) throw new Error("Unkown layout priority");
                                            p.push({
                                                prio: n,
                                                func: t,
                                                isLayout: !0
                                            })
                                        }; r.registerVisual = function(n, t) {
                                            if (typeof n == "function" && (t = n, n = kt), !0 && isNaN(n)) throw new Error("Unkown visual priority");
                                            p.push({
                                                prio: n,
                                                func: t
                                            })
                                        }; r.registerLoading = function(n, t) {
                                            ct[n] = t
                                        }; w = b.parseClassType; r.extendComponentModel = function(n, t) {
                                            var r = b,
                                                i;
                                            return t && (i = w(t), r = b.getClass(i.main, i.sub, !0)), r.extend(n)
                                        }; r.extendComponentView = function(n, t) {
                                            var r = it,
                                                i;
                                            return t && (i = w(t), r = it.getClass(i.main, i.sub, !0)), r.extend(n)
                                        }; r.extendSeriesModel = function(n, t) {
                                            var r = at,
                                                i;
                                            return t && (t = "series." + t.replace("series.", ""), i = w(t), r = at.getClass(i.main, i.sub, !0)), r.extend(n)
                                        }; r.extendChartView = function(n, t) {
                                            var i = rt,
                                                r;
                                            return t && (t.replace("series.", ""), r = w(t), i = rt.getClass(r.main, !0)), i.extend(n)
                                        }; r.setCanvasCreator = function(n) {
                                            u.createCanvas = n
                                        }; r.registerVisual(bt, i(93)); r.registerPreprocessor(i(94)); r.registerLoading("default", i(96)); r.registerAction({
                                            type: "highlight",
                                            event: "highlight",
                                            update: "highlight"
                                        }, u.noop); r.registerAction({
                                            type: "downplay",
                                            event: "downplay",
                                            update: "downplay"
                                        }, u.noop); r.List = i(97); r.Model = i(12); r.graphic = i(43); r.number = i(7); r.format = i(6); r.matrix = i(11); r.vector = i(10); r.color = i(39); r.util = {}; e(["map", "each", "filter", "indexOf", "inherits", "reduce", "filter", "bind", "curry", "isArray", "isString", "isObject", "isFunction", "extend", "defaults"], function(n) {
                                            r.util[n] = u[n]
                                        }); r.PRIORITY = {
                                            PROCESSOR: {
                                                FILTER: pt,
                                                STATISTIC: 5e3
                                            },
                                            VISUAL: {
                                                LAYOUT: wt,
                                                GLOBAL: bt,
                                                CHART: kt,
                                                COMPONENT: 4e3,
                                                BRUSH: 5e3
                                            }
                                        }; n.exports = r
                                    }, function(n) {
                                        function i(n) {
                                            var t = {},
                                                i = n.match(/Firefox\/([\d.]+)/),
                                                r = n.match(/MSIE\s([\d.]+)/) || n.match(/Trident\/.+?rv:(([\d.]+))/),
                                                u = n.match(/Edge\/([\d.]+)/);
                                            return i && (t.firefox = !0, t.version = i[1]), r && (t.ie = !0, t.version = r[1]), u && (t.edge = !0, t.version = u[1]), {
                                                browser: t,
                                                os: {},
                                                node: !1,
                                                canvasSupported: document.createElement("canvas").getContext ? !0 : !1,
                                                touchEventsSupported: "ontouchstart" in window && !t.ie && !t.edge,
                                                pointerEventsSupported: "onpointerdown" in window && (t.edge || t.ie && t.version >= 10)
                                            }
                                        }
                                        var t = {};
                                        t = typeof navigator == "undefined" ? {
                                            browser: {},
                                            os: {},
                                            node: !0,
                                            canvasSupported: !0
                                        } : i(navigator.userAgent);
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function d(n, t) {
                                            r.each(t, function(t, i) {
                                                f.hasClass(i) || (typeof t == "object" ? n[i] = n[i] ? r.merge(n[i], t, !1) : r.clone(t) : n[i] == null && (n[i] = t))
                                            })
                                        }

                                        function g(n) {
                                            n = n;
                                            this.option = {};
                                            this.option[l] = 1;
                                            this._componentsMap = {};
                                            this._seriesIndices = null;
                                            d(n, this._theme.option);
                                            r.merge(n, k, !1);
                                            this.mergeOption(n)
                                        }

                                        function nt(n, t) {
                                            r.isArray(t) || (t = t ? [t] : []);
                                            var i = {};
                                            return u(t, function(t) {
                                                i[t] = (n[t] || []).slice()
                                            }), i
                                        }

                                        function tt(n, t) {
                                            var i = {};
                                            u(t, function(n) {
                                                var t = n.exist;
                                                t && (i[t.id] = n)
                                            });
                                            u(t, function(t) {
                                                var u = t.option,
                                                    f;
                                                r.assert(!u || u.id == null || !i[u.id] || i[u.id] === t, "id duplicates: " + (u && u.id));
                                                u && u.id != null && (i[u.id] = t);
                                                s(u) && (f = it(n, u, t.exist), t.keyInfo = {
                                                    mainType: n,
                                                    subType: f
                                                })
                                            });
                                            u(t, function(n) {
                                                var u = n.exist,
                                                    r = n.option,
                                                    t = n.keyInfo,
                                                    f;
                                                if (s(r)) {
                                                    if (t.name = r.name != null ? r.name + "" : u ? u.name : '\0-', u) t.id = u.id;
                                                    else if (r.id != null) t.id = r.id + "";
                                                    else {
                                                        f = 0;
                                                        do t.id = '\0' + t.name + '\0' + f++; while (i[t.id])
                                                    }
                                                    i[t.id] = n
                                                }
                                            })
                                        }

                                        function it(n, t, i) {
                                            return t.type ? t.type : i ? i.subType : f.determineSubType(n, t)
                                        }

                                        function v(n) {
                                            return p(n, function(n) {
                                                return n.componentIndex
                                            }) || []
                                        }

                                        function b(n, t) {
                                            return t.hasOwnProperty("subType") ? e(n, function(n) {
                                                return n.subType === t.subType
                                            }) : n
                                        }

                                        function h(n) {
                                            if (!0 && !n._seriesIndices) throw new Error("Series has not been initialized yet.");
                                        }
                                        var r = i(4),
                                            o = i(5),
                                            y = i(12),
                                            u = r.each,
                                            e = r.filter,
                                            p = r.map,
                                            c = r.isArray,
                                            w = r.indexOf,
                                            s = r.isObject,
                                            f = i(19),
                                            k = i(23),
                                            l = '\0_ec_inner',
                                            a = y.extend({
                                                constructor: a,
                                                init: function(n, t, i, r) {
                                                    i = i || {};
                                                    this.option = null;
                                                    this._theme = new y(i);
                                                    this._optionManager = r
                                                },
                                                setOption: function(n, t) {
                                                    r.assert(!(l in n), "please use chart.getOption()");
                                                    this._optionManager.setOption(n, t);
                                                    this.resetOption()
                                                },
                                                resetOption: function(n) {
                                                    var t = !1,
                                                        i = this._optionManager,
                                                        r, f, e;
                                                    return n && n !== "recreate" || (r = i.mountOption(n === "recreate"), this.option && n !== "recreate" ? (this.restoreData(), this.mergeOption(r)) : g.call(this, r), t = !0), (n === "timeline" || n === "media") && this.restoreData(), n && n !== "recreate" && n !== "timeline" || (f = i.getTimelineOption(this), f && (this.mergeOption(f), t = !0)), n && n !== "recreate" && n !== "media" || (e = i.getMediaOption(this, this._api), e.length && u(e, function(n) {
                                                        this.mergeOption(n, t = !0)
                                                    }, this)), t
                                                },
                                                mergeOption: function(n) {
                                                    function h(e, h) {
                                                        var a = o.normalizeToArray(n[e]),
                                                            c = o.mappingToExists(i[e], a),
                                                            l;
                                                        tt(e, c);
                                                        l = nt(i, h);
                                                        t[e] = [];
                                                        i[e] = [];
                                                        u(c, function(n, u) {
                                                            var o = n.exist,
                                                                h = n.option,
                                                                a, c;
                                                            r.assert(s(h) || o, "Empty component definition");
                                                            h ? (a = f.getClass(e, n.keyInfo.subType, !0), o && o instanceof a ? (o.name = n.keyInfo.name, o.mergeOption(h, this), o.optionUpdated(h, !1)) : (c = r.extend({
                                                                dependentModels: l,
                                                                componentIndex: u
                                                            }, n.keyInfo), o = new a(h, this, this, c), r.extend(o, c), o.init(h, this, this, c), o.optionUpdated(null, !0))) : (o.mergeOption({}, this), o.optionUpdated({}, !1));
                                                            i[e][u] = o;
                                                            t[e][u] = o.option
                                                        }, this);
                                                        e === "series" && (this._seriesIndices = v(i.series))
                                                    }
                                                    var t = this.option,
                                                        i = this._componentsMap,
                                                        e = [];
                                                    u(n, function(n, i) {
                                                        n != null && (f.hasClass(i) ? e.push(i) : t[i] = t[i] == null ? r.clone(n) : r.merge(t[i], n, !0))
                                                    });
                                                    f.topologicalTravel(e, f.getAllClassMainTypes(), h, this);
                                                    this._seriesIndices = this._seriesIndices || []
                                                },
                                                getOption: function() {
                                                    var n = r.clone(this.option);
                                                    return u(n, function(t, i) {
                                                        var t, r;
                                                        if (f.hasClass(i)) {
                                                            for (t = o.normalizeToArray(t), r = t.length - 1; r >= 0; r--) o.isIdInner(t[r]) && t.splice(r, 1);
                                                            n[i] = t
                                                        }
                                                    }), delete n[l], n
                                                },
                                                getTheme: function() {
                                                    return this._theme
                                                },
                                                getComponent: function(n, t) {
                                                    var i = this._componentsMap[n];
                                                    if (i) return i[t || 0]
                                                },
                                                queryComponents: function(n) {
                                                    var h = n.mainType,
                                                        r, o, s;
                                                    if (!h) return [];
                                                    var i = n.index,
                                                        u = n.id,
                                                        f = n.name,
                                                        t = this._componentsMap[h];
                                                    return !t || !t.length ? [] : (i != null ? (c(i) || (i = [i]), r = e(p(i, function(n) {
                                                        return t[n]
                                                    }), function(n) {
                                                        return !!n
                                                    })) : u != null ? (o = c(u), r = e(t, function(n) {
                                                        return o && w(u, n.id) >= 0 || !o && n.id === u
                                                    })) : f != null ? (s = c(f), r = e(t, function(n) {
                                                        return s && w(f, n.name) >= 0 || !s && n.name === f
                                                    })) : r = t, b(r, n))
                                                },
                                                findComponents: function(n) {
                                                    function f(n) {
                                                        var i = t + "Index",
                                                            r = t + "Id",
                                                            u = t + "Name";
                                                        return n && (n.hasOwnProperty(i) || n.hasOwnProperty(r) || n.hasOwnProperty(u)) ? {
                                                            mainType: t,
                                                            index: n[i],
                                                            id: n[r],
                                                            name: n[u]
                                                        } : null
                                                    }

                                                    function o(t) {
                                                        return n.filter ? e(t, n.filter) : t
                                                    }
                                                    var r = n.query,
                                                        t = n.mainType,
                                                        i = f(r),
                                                        u = i ? this.queryComponents(i) : this._componentsMap[t];
                                                    return o(b(u, n))
                                                },
                                                eachComponent: function(n, t, i) {
                                                    var f = this._componentsMap,
                                                        e;
                                                    typeof n == "function" ? (i = t, t = n, u(f, function(n, r) {
                                                        u(n, function(n, u) {
                                                            t.call(i, r, n, u)
                                                        })
                                                    })) : r.isString(n) ? u(f[n], t, i) : s(n) && (e = this.findComponents(n), u(e, t, i))
                                                },
                                                getSeriesByName: function(n) {
                                                    var t = this._componentsMap.series;
                                                    return e(t, function(t) {
                                                        return t.name === n
                                                    })
                                                },
                                                getSeriesByIndex: function(n) {
                                                    return this._componentsMap.series[n]
                                                },
                                                getSeriesByType: function(n) {
                                                    var t = this._componentsMap.series;
                                                    return e(t, function(t) {
                                                        return t.subType === n
                                                    })
                                                },
                                                getSeries: function() {
                                                    return this._componentsMap.series.slice()
                                                },
                                                eachSeries: function(n, t) {
                                                    h(this);
                                                    u(this._seriesIndices, function(i) {
                                                        var r = this._componentsMap.series[i];
                                                        n.call(t, r, i)
                                                    }, this)
                                                },
                                                eachRawSeries: function(n, t) {
                                                    u(this._componentsMap.series, n, t)
                                                },
                                                eachSeriesByType: function(n, t, i) {
                                                    h(this);
                                                    u(this._seriesIndices, function(r) {
                                                        var u = this._componentsMap.series[r];
                                                        u.subType === n && t.call(i, u, r)
                                                    }, this)
                                                },
                                                eachRawSeriesByType: function(n, t, i) {
                                                    return u(this.getSeriesByType(n), t, i)
                                                },
                                                isSeriesFiltered: function(n) {
                                                    return h(this), r.indexOf(this._seriesIndices, n.componentIndex) < 0
                                                },
                                                filterSeries: function(n, t) {
                                                    h(this);
                                                    var i = e(this._componentsMap.series, n, t);
                                                    this._seriesIndices = v(i)
                                                },
                                                restoreData: function() {
                                                    var n = this._componentsMap,
                                                        t;
                                                    this._seriesIndices = v(n.series);
                                                    t = [];
                                                    u(n, function(n, i) {
                                                        t.push(i)
                                                    });
                                                    f.topologicalTravel(t, f.getAllClassMainTypes(), function(t) {
                                                        u(n[t], function(n) {
                                                            n.restoreData()
                                                        })
                                                    })
                                                }
                                            });
                                        r.mixin(a, i(24));
                                        n.exports = a
                                    }, function(n) {
                                        function r(n) {
                                            var t, i, o, u;
                                            if (typeof n == "object" && n !== null) {
                                                if (t = n, n instanceof Array)
                                                    for (t = [], i = 0, o = n.length; i < o; i++) t[i] = r(n[i]);
                                                else if (!f(n) && !e(n)) {
                                                    t = {};
                                                    for (u in n) n.hasOwnProperty(u) && (t[u] = r(n[u]))
                                                }
                                                return t
                                            }
                                            return n
                                        }

                                        function s(n, t, i) {
                                            var o, h, l;
                                            if (!u(t) || !u(n)) return i ? r(t) : n;
                                            for (o in t) t.hasOwnProperty(o) && (h = n[o], l = t[o], !u(l) || !u(h) || c(l) || c(h) || e(l) || e(h) || f(l) || f(h) ? !i && o in n || (n[o] = r(t[o], !0)) : s(h, l, i));
                                            return n
                                        }

                                        function k(n, t) {
                                            for (var i = n[0], r = 1, u = n.length; r < u; r++) i = s(i, n[r], t);
                                            return i
                                        }

                                        function d(n, t) {
                                            for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]);
                                            return n
                                        }

                                        function l(n, t, i) {
                                            for (var r in t) t.hasOwnProperty(r) && (i ? t[r] != null : n[r] == null) && (n[r] = t[r]);
                                            return n
                                        }

                                        function g() {
                                            return document.createElement("canvas")
                                        }

                                        function nt() {
                                            return h || (h = a.createCanvas().getContext("2d")), h
                                        }

                                        function tt(n, t) {
                                            if (n) {
                                                if (n.indexOf) return n.indexOf(t);
                                                for (var i = 0, r = n.length; i < r; i++)
                                                    if (n[i] === t) return i
                                            }
                                            return -1
                                        }

                                        function it(n, t) {
                                            function u() {}
                                            var r = n.prototype,
                                                i;
                                            u.prototype = t.prototype;
                                            n.prototype = new u;
                                            for (i in r) n.prototype[i] = r[i];
                                            n.prototype.constructor = n;
                                            n.superClass = t
                                        }

                                        function rt(n, t, i) {
                                            n = "prototype" in n ? n.prototype : n;
                                            t = "prototype" in t ? t.prototype : t;
                                            l(n, t, i)
                                        }

                                        function ut(n) {
                                            if (n) return typeof n == "string" ? !1 : typeof n.length == "number"
                                        }

                                        function ft(n, t, i) {
                                            var r, f, u;
                                            if (n && t)
                                                if (n.forEach && n.forEach === y) n.forEach(t, i);
                                                else if (n.length === +n.length)
                                                for (r = 0, f = n.length; r < f; r++) t.call(i, n[r], r, n);
                                            else
                                                for (u in n) n.hasOwnProperty(u) && t.call(i, n[u], u, n)
                                        }

                                        function et(n, t, i) {
                                            var u, r, f;
                                            if (n && t) {
                                                if (n.map && n.map === w) return n.map(t, i);
                                                for (u = [], r = 0, f = n.length; r < f; r++) u.push(t.call(i, n[r], r, n));
                                                return u
                                            }
                                        }

                                        function ot(n, t, i, r) {
                                            if (n && t) {
                                                if (n.reduce && n.reduce === b) return n.reduce(t, i, r);
                                                for (var u = 0, f = n.length; u < f; u++) i = t.call(r, i, n[u], u, n);
                                                return i
                                            }
                                        }

                                        function st(n, t, i) {
                                            var u, r, f;
                                            if (n && t) {
                                                if (n.filter && n.filter === p) return n.filter(t, i);
                                                for (u = [], r = 0, f = n.length; r < f; r++) t.call(i, n[r], r, n) && u.push(n[r]);
                                                return u
                                            }
                                        }

                                        function ht(n, t, i) {
                                            if (n && t)
                                                for (var r = 0, u = n.length; r < u; r++)
                                                    if (t.call(i, n[r], r, n)) return n[r]
                                        }

                                        function ct(n, t) {
                                            var r = i.call(arguments, 2);
                                            return function() {
                                                return n.apply(t, r.concat(i.call(arguments)))
                                            }
                                        }

                                        function lt(n) {
                                            var t = i.call(arguments, 1);
                                            return function() {
                                                return n.apply(this, t.concat(i.call(arguments)))
                                            }
                                        }

                                        function c(n) {
                                            return o.call(n) === "[object Array]"
                                        }

                                        function at(n) {
                                            return typeof n == "function"
                                        }

                                        function vt(n) {
                                            return o.call(n) === "[object String]"
                                        }

                                        function u(n) {
                                            var t = typeof n;
                                            return t === "function" || !!n && t == "object"
                                        }

                                        function f(n) {
                                            return !!v[o.call(n)]
                                        }

                                        function e(n) {
                                            return n && n.nodeType === 1 && typeof n.nodeName == "string"
                                        }

                                        function yt() {
                                            for (var n = 0, t = arguments.length; n < t; n++)
                                                if (arguments[n] != null) return arguments[n]
                                        }

                                        function pt() {
                                            return Function.call.apply(i, arguments)
                                        }

                                        function wt(n, t) {
                                            if (!n) throw new Error(t);
                                        }
                                        var v = {
                                                "[object Function]": 1,
                                                "[object RegExp]": 1,
                                                "[object Date]": 1,
                                                "[object Error]": 1,
                                                "[object CanvasGradient]": 1,
                                                "[object CanvasPattern]": 1,
                                                "[object Image]": 1
                                            },
                                            o = Object.prototype.toString,
                                            t = Array.prototype,
                                            y = t.forEach,
                                            p = t.filter,
                                            i = t.slice,
                                            w = t.map,
                                            b = t.reduce,
                                            h, a = {
                                                inherits: it,
                                                mixin: rt,
                                                clone: r,
                                                merge: s,
                                                mergeAll: k,
                                                extend: d,
                                                defaults: l,
                                                getContext: nt,
                                                createCanvas: g,
                                                indexOf: tt,
                                                slice: pt,
                                                find: ht,
                                                isArrayLike: ut,
                                                each: ft,
                                                map: et,
                                                reduce: ot,
                                                filter: st,
                                                bind: ct,
                                                curry: lt,
                                                isArray: c,
                                                isString: vt,
                                                isObject: u,
                                                isFunction: at,
                                                isBuildInObject: f,
                                                isDom: e,
                                                retrieve: yt,
                                                assert: wt,
                                                noop: function() {}
                                            };
                                        n.exports = a
                                    }, function(n, t, i) {
                                        function f(n, t) {
                                            return n && n.hasOwnProperty(t)
                                        }
                                        var e = i(6),
                                            o = i(7),
                                            s = i(12),
                                            u = i(4),
                                            r = {};
                                        r.normalizeToArray = function(n) {
                                            return n instanceof Array ? n : n == null ? [] : [n]
                                        };
                                        r.defaultEmphasis = function(n, t) {
                                            if (n) {
                                                var i = n.emphasis = n.emphasis || {},
                                                    r = n.normal = n.normal || {};
                                                u.each(t, function(n) {
                                                    var t = u.retrieve(i[n], r[n]);
                                                    t != null && (i[n] = t)
                                                })
                                            }
                                        };
                                        r.LABEL_OPTIONS = ["position", "show", "textStyle", "distance", "formatter"];
                                        r.getDataItemValue = function(n) {
                                            return n && (n.value == null ? n : n.value)
                                        };
                                        r.isDataItemOption = function(n) {
                                            return u.isObject(n) && !(n instanceof Array)
                                        };
                                        r.converDataValue = function(n, t) {
                                            var i = t && t.type;
                                            return i === "ordinal" ? n : (i !== "time" || isFinite(n) || n == null || n === "-" || (n = +o.parseDate(n)), n == null || n === "" ? NaN : +n)
                                        };
                                        r.createDataFormatModel = function(n, t) {
                                            var i = new s;
                                            return u.mixin(i, r.dataFormatMixin), i.seriesIndex = t.seriesIndex, i.name = t.name || "", i.mainType = t.mainType, i.subType = t.subType, i.getData = function() {
                                                return n
                                            }, i
                                        };
                                        r.dataFormatMixin = {
                                            getDataParams: function(n, t) {
                                                var i = this.getData(t),
                                                    r = this.seriesIndex,
                                                    u = this.name,
                                                    f = this.getRawValue(n, t),
                                                    e = i.getRawIndex(n),
                                                    o = i.getName(n, !0),
                                                    s = i.getRawDataItem(n);
                                                return {
                                                    componentType: this.mainType,
                                                    componentSubType: this.subType,
                                                    seriesType: this.mainType === "series" ? this.subType : null,
                                                    seriesIndex: r,
                                                    seriesName: u,
                                                    name: o,
                                                    dataIndex: e,
                                                    data: s,
                                                    dataType: t,
                                                    value: f,
                                                    color: i.getItemVisual(n, "color"),
                                                    $vars: ["seriesName", "name", "value"]
                                                }
                                            },
                                            getFormattedLabel: function(n, t, i, r) {
                                                var f;
                                                t = t || "normal";
                                                var o = this.getData(i),
                                                    s = o.getItemModel(n),
                                                    u = this.getDataParams(n, i);
                                                return (r != null && u.value instanceof Array && (u.value = u.value[r]), f = s.get(["label", t, "formatter"]), typeof f == "function") ? (u.status = t, f(u)) : typeof f == "string" ? e.formatTpl(f, u) : void 0
                                            },
                                            getRawValue: function(n, t) {
                                                var r = this.getData(t),
                                                    i = r.getRawDataItem(n);
                                                if (i != null) return u.isObject(i) && !(i instanceof Array) ? i.value : i
                                            },
                                            formatTooltip: u.noop
                                        };
                                        r.mappingToExists = function(n, t) {
                                            t = (t || []).slice();
                                            var i = u.map(n || [], function(n) {
                                                return {
                                                    exist: n
                                                }
                                            });
                                            return u.each(t, function(n, f) {
                                                var e, o;
                                                if (u.isObject(n)) {
                                                    for (e = 0; e < i.length; e++)
                                                        if (!i[e].option && n.id != null && i[e].exist.id === n.id + "") {
                                                            i[e].option = n;
                                                            t[f] = null;
                                                            return
                                                        }
                                                    for (e = 0; e < i.length; e++)
                                                        if (o = i[e].exist, !i[e].option && (o.id == null || n.id == null) && n.name != null && !r.isIdInner(n) && !r.isIdInner(o) && o.name === n.name + "") {
                                                            i[e].option = n;
                                                            t[f] = null;
                                                            return
                                                        }
                                                }
                                            }), u.each(t, function(n) {
                                                var t, f;
                                                if (u.isObject(n)) {
                                                    for (t = 0; t < i.length; t++)
                                                        if (f = i[t].exist, !i[t].option && !r.isIdInner(f) && n.id == null) {
                                                            i[t].option = n;
                                                            break
                                                        }
                                                    t >= i.length && i.push({
                                                        option: n
                                                    })
                                                }
                                            }), i
                                        };
                                        r.isIdInner = function(n) {
                                            return u.isObject(n) && n.id && (n.id + "").indexOf('\0_ec_\0') === 0
                                        };
                                        r.compressBatches = function(n, t) {
                                            function e(n, t, i) {
                                                for (var f, l, e, u = 0, h = n.length; u < h; u++) {
                                                    var o = n[u].seriesId,
                                                        c = r.normalizeToArray(n[u].dataIndex),
                                                        s = i && i[o];
                                                    for (f = 0, l = c.length; f < l; f++) e = c[f], s && s[e] ? s[e] = null : (t[o] || (t[o] = {}))[e] = 1
                                                }
                                            }

                                            function u(n, t) {
                                                var r = [],
                                                    i, f;
                                                for (i in n) n.hasOwnProperty(i) && n[i] != null && (t ? r.push(+i) : (f = u(n[i], !0), f.length && r.push({
                                                    seriesId: i,
                                                    dataIndex: f
                                                })));
                                                return r
                                            }
                                            var i = {},
                                                f = {};
                                            return e(n || [], i), e(t || [], f, i), [u(i), u(f)]
                                        };
                                        r.queryDataIndex = function(n, t) {
                                            return t.dataIndexInside != null ? t.dataIndexInside : t.dataIndex != null ? u.isArray(t.dataIndex) ? u.map(t.dataIndex, function(t) {
                                                return n.indexOfRawIndex(t)
                                            }) : n.indexOfRawIndex(t.dataIndex) : t.name != null ? u.isArray(t.name) ? u.map(t.name, function(t) {
                                                return n.indexOfName(t)
                                            }) : n.indexOfName(t.name) : void 0
                                        };
                                        r.parseFinder = function(n, t, i) {
                                            var o, r, e;
                                            return u.isString(t) && (o = {}, o[t + "Index"] = 0, t = o), r = i && i.defaultMainType, !r || f(t, r + "Index") || f(t, r + "Id") || f(t, r + "Name") || (t[r + "Index"] = 0), e = {}, u.each(t, function(i, r) {
                                                var i = t[r],
                                                    f, o;
                                                if (r === "dataIndex" || r === "dataIndexInside") {
                                                    e[r] = i;
                                                    return
                                                }
                                                var s = r.match(/^(\w+)(Index|Id|Name)$/) || [],
                                                    u = s[1],
                                                    h = s[2];
                                                u && h && (f = {
                                                    mainType: u
                                                }, f[h.toLowerCase()] = i, o = n.queryComponents(f), e[u + "Models"] = o, e[u + "Model"] = o[0])
                                            }), e
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var o = i(4),
                                            s = i(7),
                                            h = i(8),
                                            r = {},
                                            e, f, u;
                                        r.addCommas = function(n) {
                                            return isNaN(n) ? "-" : (n = (n + "").split("."), n[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (n.length > 1 ? "." + n[1] : ""))
                                        };
                                        r.toCamelCase = function(n) {
                                            return n.toLowerCase().replace(/-(.)/g, function(n, t) {
                                                return t.toUpperCase()
                                            })
                                        };
                                        r.normalizeCssArray = function(n) {
                                            var t = n.length;
                                            return typeof n == "number" ? [n, n, n, n] : t === 2 ? [n[0], n[1], n[0], n[1]] : t === 3 ? [n[0], n[1], n[2], n[1]] : n
                                        };
                                        r.encodeHTML = function(n) {
                                            return String(n).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;")
                                        };
                                        e = ["a", "b", "c", "d", "e", "f", "g"];
                                        f = function(n, t) {
                                            return "{" + n + (t == null ? "" : t) + "}"
                                        };
                                        r.formatTpl = function(n, t) {
                                            var h, u, s, c, i, r;
                                            if (o.isArray(t) || (t = [t]), h = t.length, !h) return "";
                                            for (u = t[0].$vars || [], s = 0; s < u.length; s++) c = e[s], n = n.replace(f(c), f(c, 0));
                                            for (i = 0; i < h; i++)
                                                for (r = 0; r < u.length; r++) n = n.replace(f(e[r], i), t[i][u[r]]);
                                            return n
                                        };
                                        u = function(n) {
                                            return n < 10 ? "0" + n : n
                                        };
                                        r.formatTime = function(n, t) {
                                            (n === "week" || n === "month" || n === "quarter" || n === "half-year" || n === "year") && (n = "MM-dd\nyyyy");
                                            var i = s.parseDate(t),
                                                r = i.getFullYear(),
                                                c = i.getMonth() + 1,
                                                f = i.getDate(),
                                                e = i.getHours(),
                                                o = i.getMinutes(),
                                                h = i.getSeconds();
                                            return n.replace("MM", u(c)).toLowerCase().replace("yyyy", r).replace("yy", r % 100).replace("dd", u(f)).replace("d", f).replace("hh", u(e)).replace("h", e).replace("mm", u(o)).replace("m", o).replace("ss", u(h)).replace("s", h)
                                        };
                                        r.capitalFirst = function(n) {
                                            return n ? n.charAt(0).toUpperCase() + n.substr(1) : n
                                        };
                                        r.truncateText = h.truncateText;
                                        n.exports = r
                                    }, function(n) {
                                        function r(n) {
                                            return n.replace(/^\s+/, "").replace(/\s+$/, "")
                                        }
                                        var t = {},
                                            i = .0001;
                                        t.linearMap = function(n, t, i, r) {
                                            var u = t[1] - t[0],
                                                f = i[1] - i[0];
                                            if (u === 0) return f === 0 ? i[0] : (i[0] + i[1]) / 2;
                                            if (r)
                                                if (u > 0) {
                                                    if (n <= t[0]) return i[0];
                                                    if (n >= t[1]) return i[1]
                                                } else {
                                                    if (n >= t[0]) return i[0];
                                                    if (n <= t[1]) return i[1]
                                                }
                                            else {
                                                if (n === t[0]) return i[0];
                                                if (n === t[1]) return i[1]
                                            }
                                            return (n - t[0]) / u * f + i[0]
                                        };
                                        t.parsePercent = function(n, t) {
                                            switch (n) {
                                                case "center":
                                                case "middle":
                                                    n = "50%";
                                                    break;
                                                case "left":
                                                case "top":
                                                    n = "0%";
                                                    break;
                                                case "right":
                                                case "bottom":
                                                    n = "100%"
                                            }
                                            return typeof n == "string" ? r(n).match(/%$/) ? parseFloat(n) / 100 * t : parseFloat(n) : n == null ? NaN : +n
                                        };
                                        t.round = function(n, t) {
                                            return t == null && (t = 10), t = Math.min(Math.max(0, t), 20), +(+n).toFixed(t)
                                        };
                                        t.asc = function(n) {
                                            return n.sort(function(n, t) {
                                                return n - t
                                            }), n
                                        };
                                        t.getPrecision = function(n) {
                                            if (n = +n, isNaN(n)) return 0;
                                            for (var t = 1, i = 0; Math.round(n * t) / t !== n;) t *= 10, i++;
                                            return i
                                        };
                                        t.getPrecisionSafe = function(n) {
                                            var t = n.toString(),
                                                i = t.indexOf(".");
                                            return i < 0 ? 0 : t.length - 1 - i
                                        };
                                        t.getPixelPrecision = function(n, t) {
                                            var i = Math.log,
                                                r = Math.LN10,
                                                u = Math.floor(i(n[1] - n[0]) / r),
                                                f = Math.round(i(Math.abs(t[1] - t[0])) / r);
                                            return Math.max(-u + f, 0)
                                        };
                                        t.MAX_SAFE_INTEGER = 9007199254740991;
                                        t.remRadian = function(n) {
                                            var t = Math.PI * 2;
                                            return (n % t + t) % t
                                        };
                                        t.isRadianAroundZero = function(n) {
                                            return n > -i && n < i
                                        };
                                        t.parseDate = function(n) {
                                            if (n instanceof Date) return n;
                                            if (typeof n == "string") {
                                                var t = new Date(n);
                                                return isNaN(+t) && (t = new Date(new Date(n.replace(/-/g, "/")) - new Date("1970/01/01"))), t
                                            }
                                            return new Date(Math.round(n))
                                        };
                                        t.quantity = function(n) {
                                            return Math.pow(10, Math.floor(Math.log(n) / Math.LN10))
                                        };
                                        t.nice = function(n, i) {
                                            var u = t.quantity(n),
                                                r = n / u,
                                                f;
                                            return f = i ? r < 1.5 ? 1 : r < 2.5 ? 2 : r < 4 ? 3 : r < 7 ? 5 : 10 : r < 1 ? 1 : r < 2 ? 2 : r < 3 ? 3 : r < 5 ? 5 : 10, f * u
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function r(n, t) {
                                            var f = n + ":" + t,
                                                o, i, r, c;
                                            if (u[f]) return u[f];
                                            for (o = (n + "").split("\n"), i = 0, r = 0, c = o.length; r < c; r++) i = Math.max(s.measureText(o[r], t).width, i);
                                            return e > h && (e = 0, u = {}), e++, u[f] = i, i
                                        }

                                        function l(n, t, i, u) {
                                            var o = ((n || "") + "").split("\n").length,
                                                s = r(n, t),
                                                e = r("国", t),
                                                h = o * e,
                                                f = new c(0, 0, s, h);
                                            f.lineHeight = e;
                                            switch (u) {
                                                case "bottom":
                                                case "alphabetic":
                                                    f.y -= e;
                                                    break;
                                                case "middle":
                                                    f.y -= e / 2
                                            }
                                            switch (i) {
                                                case "end":
                                                case "right":
                                                    f.x -= f.width;
                                                    break;
                                                case "center":
                                                    f.x -= f.width / 2
                                            }
                                            return f
                                        }

                                        function a(n, t, i, r) {
                                            var u = t.x,
                                                f = t.y,
                                                s = t.height,
                                                o = t.width,
                                                h = i.height,
                                                c = s / 2 - h / 2,
                                                e = "left";
                                            switch (n) {
                                                case "left":
                                                    u -= r;
                                                    f += c;
                                                    e = "right";
                                                    break;
                                                case "right":
                                                    u += r + o;
                                                    f += c;
                                                    e = "left";
                                                    break;
                                                case "top":
                                                    u += o / 2;
                                                    f -= r + h;
                                                    e = "center";
                                                    break;
                                                case "bottom":
                                                    u += o / 2;
                                                    f += s + r;
                                                    e = "center";
                                                    break;
                                                case "inside":
                                                    u += o / 2;
                                                    f += c;
                                                    e = "center";
                                                    break;
                                                case "insideLeft":
                                                    u += r;
                                                    f += c;
                                                    e = "left";
                                                    break;
                                                case "insideRight":
                                                    u += o - r;
                                                    f += c;
                                                    e = "right";
                                                    break;
                                                case "insideTop":
                                                    u += o / 2;
                                                    f += r;
                                                    e = "center";
                                                    break;
                                                case "insideBottom":
                                                    u += o / 2;
                                                    f += s - h - r;
                                                    e = "center";
                                                    break;
                                                case "insideTopLeft":
                                                    u += r;
                                                    f += r;
                                                    e = "left";
                                                    break;
                                                case "insideTopRight":
                                                    u += o - r;
                                                    f += r;
                                                    e = "right";
                                                    break;
                                                case "insideBottomLeft":
                                                    u += r;
                                                    f += s - h - r;
                                                    break;
                                                case "insideBottomRight":
                                                    u += o - r;
                                                    f += s - h - r;
                                                    e = "right"
                                            }
                                            return {
                                                x: u,
                                                y: f,
                                                textAlign: e,
                                                textBaseline: "top"
                                            }
                                        }

                                        function v(n, t, i, u, e) {
                                            var a, l, s, w, o, c, v, b;
                                            if (!t) return "";
                                            e = e || {};
                                            u = f(u, "...");
                                            var k = f(e.maxIterations, 2),
                                                d = f(e.minChar, 0),
                                                g = r("国", i),
                                                p = r("a", i),
                                                nt = f(e.placeholder, ""),
                                                h = t = Math.max(0, t - 1);
                                            for (s = 0; s < d && h >= p; s++) h -= p;
                                            for (a = r(u), a > h && (u = "", a = 0), h = t - a, l = (n + "").split("\n"), s = 0, w = l.length; s < w; s++)
                                                if (o = l[s], c = r(o, i), !(c <= t)) {
                                                    for (v = 0;; v++) {
                                                        if (c <= h || v >= k) {
                                                            o += u;
                                                            break
                                                        }
                                                        b = v === 0 ? y(o, h, p, g) : c > 0 ? Math.floor(o.length * h / c) : 0;
                                                        o = o.substr(0, b);
                                                        c = r(o, i)
                                                    }
                                                    o === "" && (o = nt);
                                                    l[s] = o
                                                }
                                            return l.join("\n")
                                        }

                                        function y(n, t, i, r) {
                                            for (var f, e = 0, u = 0, o = n.length; u < o && e < t; u++) f = n.charCodeAt(u), e += 0 <= f && f <= 127 ? i : r;
                                            return u
                                        }
                                        var u = {},
                                            e = 0,
                                            h = 5e3,
                                            o = i(4),
                                            c = i(9),
                                            f = o.retrieve,
                                            s = {
                                                getWidth: r,
                                                getBoundingRect: l,
                                                adjustTextPositionOnRect: a,
                                                truncateText: v,
                                                measureText: function(n, t) {
                                                    var i = o.getContext();
                                                    return i.font = t || "12px sans-serif", i.measureText(n)
                                                }
                                            };
                                        n.exports = s
                                    }, function(n, t, i) {
                                        "use strict";

                                        function r(n, t, i, r) {
                                            i < 0 && (n = n + i, i = -i);
                                            r < 0 && (t = t + r, r = -r);
                                            this.x = n;
                                            this.y = t;
                                            this.width = i;
                                            this.height = r
                                        }
                                        var h = i(10),
                                            u = i(11),
                                            e = h.applyTransform,
                                            f = Math.min,
                                            o = Math.abs,
                                            s = Math.max;
                                        r.prototype = {
                                            constructor: r,
                                            union: function(n) {
                                                var t = f(n.x, this.x),
                                                    i = f(n.y, this.y);
                                                this.width = s(n.x + n.width, this.x + this.width) - t;
                                                this.height = s(n.y + n.height, this.y + this.height) - i;
                                                this.x = t;
                                                this.y = i
                                            },
                                            applyTransform: function() {
                                                var n = [],
                                                    t = [];
                                                return function(i) {
                                                    i && (n[0] = this.x, n[1] = this.y, t[0] = this.x + this.width, t[1] = this.y + this.height, e(n, n, i), e(t, t, i), this.x = f(n[0], t[0]), this.y = f(n[1], t[1]), this.width = o(t[0] - n[0]), this.height = o(t[1] - n[1]))
                                                }
                                            }(),
                                            calculateTransform: function(n) {
                                                var i = this,
                                                    r = n.width / i.width,
                                                    f = n.height / i.height,
                                                    t = u.create();
                                                return u.translate(t, t, [-i.x, -i.y]), u.scale(t, t, [r, f]), u.translate(t, t, [n.x, n.y]), t
                                            },
                                            intersect: function(n) {
                                                n instanceof r || (n = r.create(n));
                                                var t = this,
                                                    i = t.x,
                                                    u = t.x + t.width,
                                                    f = t.y,
                                                    e = t.y + t.height,
                                                    o = n.x,
                                                    s = n.x + n.width,
                                                    h = n.y,
                                                    c = n.y + n.height;
                                                return !(u < o || s < i || e < h || c < f)
                                            },
                                            contain: function(n, t) {
                                                var i = this;
                                                return n >= i.x && n <= i.x + i.width && t >= i.y && t <= i.y + i.height
                                            },
                                            clone: function() {
                                                return new r(this.x, this.y, this.width, this.height)
                                            },
                                            copy: function(n) {
                                                this.x = n.x;
                                                this.y = n.y;
                                                this.width = n.width;
                                                this.height = n.height
                                            },
                                            plain: function() {
                                                return {
                                                    x: this.x,
                                                    y: this.y,
                                                    width: this.width,
                                                    height: this.height
                                                }
                                            }
                                        };
                                        r.create = function(n) {
                                            return new r(n.x, n.y, n.width, n.height)
                                        };
                                        n.exports = r
                                    }, function(n) {
                                        var i = typeof Float32Array == "undefined" ? Array : Float32Array,
                                            t = {
                                                create: function(n, t) {
                                                    var r = new i(2);
                                                    return n == null && (n = 0), t == null && (t = 0), r[0] = n, r[1] = t, r
                                                },
                                                copy: function(n, t) {
                                                    return n[0] = t[0], n[1] = t[1], n
                                                },
                                                clone: function(n) {
                                                    var t = new i(2);
                                                    return t[0] = n[0], t[1] = n[1], t
                                                },
                                                set: function(n, t, i) {
                                                    return n[0] = t, n[1] = i, n
                                                },
                                                add: function(n, t, i) {
                                                    return n[0] = t[0] + i[0], n[1] = t[1] + i[1], n
                                                },
                                                scaleAndAdd: function(n, t, i, r) {
                                                    return n[0] = t[0] + i[0] * r, n[1] = t[1] + i[1] * r, n
                                                },
                                                sub: function(n, t, i) {
                                                    return n[0] = t[0] - i[0], n[1] = t[1] - i[1], n
                                                },
                                                len: function(n) {
                                                    return Math.sqrt(this.lenSquare(n))
                                                },
                                                lenSquare: function(n) {
                                                    return n[0] * n[0] + n[1] * n[1]
                                                },
                                                mul: function(n, t, i) {
                                                    return n[0] = t[0] * i[0], n[1] = t[1] * i[1], n
                                                },
                                                div: function(n, t, i) {
                                                    return n[0] = t[0] / i[0], n[1] = t[1] / i[1], n
                                                },
                                                dot: function(n, t) {
                                                    return n[0] * t[0] + n[1] * t[1]
                                                },
                                                scale: function(n, t, i) {
                                                    return n[0] = t[0] * i, n[1] = t[1] * i, n
                                                },
                                                normalize: function(n, i) {
                                                    var r = t.len(i);
                                                    return r === 0 ? (n[0] = 0, n[1] = 0) : (n[0] = i[0] / r, n[1] = i[1] / r), n
                                                },
                                                distance: function(n, t) {
                                                    return Math.sqrt((n[0] - t[0]) * (n[0] - t[0]) + (n[1] - t[1]) * (n[1] - t[1]))
                                                },
                                                distanceSquare: function(n, t) {
                                                    return (n[0] - t[0]) * (n[0] - t[0]) + (n[1] - t[1]) * (n[1] - t[1])
                                                },
                                                negate: function(n, t) {
                                                    return n[0] = -t[0], n[1] = -t[1], n
                                                },
                                                lerp: function(n, t, i, r) {
                                                    return n[0] = t[0] + r * (i[0] - t[0]), n[1] = t[1] + r * (i[1] - t[1]), n
                                                },
                                                applyTransform: function(n, t, i) {
                                                    var r = t[0],
                                                        u = t[1];
                                                    return n[0] = i[0] * r + i[2] * u + i[4], n[1] = i[1] * r + i[3] * u + i[5], n
                                                },
                                                min: function(n, t, i) {
                                                    return n[0] = Math.min(t[0], i[0]), n[1] = Math.min(t[1], i[1]), n
                                                },
                                                max: function(n, t, i) {
                                                    return n[0] = Math.max(t[0], i[0]), n[1] = Math.max(t[1], i[1]), n
                                                }
                                            };
                                        t.length = t.len;
                                        t.lengthSquare = t.lenSquare;
                                        t.dist = t.distance;
                                        t.distSquare = t.distanceSquare;
                                        n.exports = t
                                    }, function(n) {
                                        var i = typeof Float32Array == "undefined" ? Array : Float32Array,
                                            t = {
                                                create: function() {
                                                    var n = new i(6);
                                                    return t.identity(n), n
                                                },
                                                identity: function(n) {
                                                    return n[0] = 1, n[1] = 0, n[2] = 0, n[3] = 1, n[4] = 0, n[5] = 0, n
                                                },
                                                copy: function(n, t) {
                                                    return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n[4] = t[4], n[5] = t[5], n
                                                },
                                                mul: function(n, t, i) {
                                                    var r = t[0] * i[0] + t[2] * i[1],
                                                        u = t[1] * i[0] + t[3] * i[1],
                                                        f = t[0] * i[2] + t[2] * i[3],
                                                        e = t[1] * i[2] + t[3] * i[3],
                                                        o = t[0] * i[4] + t[2] * i[5] + t[4],
                                                        s = t[1] * i[4] + t[3] * i[5] + t[5];
                                                    return n[0] = r, n[1] = u, n[2] = f, n[3] = e, n[4] = o, n[5] = s, n
                                                },
                                                translate: function(n, t, i) {
                                                    return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n[4] = t[4] + i[0], n[5] = t[5] + i[1], n
                                                },
                                                rotate: function(n, t, i) {
                                                    var f = t[0],
                                                        e = t[2],
                                                        o = t[4],
                                                        s = t[1],
                                                        h = t[3],
                                                        c = t[5],
                                                        r = Math.sin(i),
                                                        u = Math.cos(i);
                                                    return n[0] = f * u + s * r, n[1] = -f * r + s * u, n[2] = e * u + h * r, n[3] = -e * r + u * h, n[4] = u * o + r * c, n[5] = u * c - r * o, n
                                                },
                                                scale: function(n, t, i) {
                                                    var r = i[0],
                                                        u = i[1];
                                                    return n[0] = t[0] * r, n[1] = t[1] * u, n[2] = t[2] * r, n[3] = t[3] * u, n[4] = t[4] * r, n[5] = t[5] * u, n
                                                },
                                                invert: function(n, t) {
                                                    var r = t[0],
                                                        u = t[2],
                                                        o = t[4],
                                                        f = t[1],
                                                        e = t[3],
                                                        s = t[5],
                                                        i = r * e - f * u;
                                                    return i ? (i = 1 / i, n[0] = e * i, n[1] = -f * i, n[2] = -u * i, n[3] = r * i, n[4] = (u * s - e * o) * i, n[5] = (f * o - r * s) * i, n) : null
                                                }
                                            };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function r(n, t, i) {
                                            this.parentModel = t;
                                            this.ecModel = i;
                                            this.option = n
                                        }
                                        var f = i(4),
                                            e = i(13),
                                            u;
                                        r.prototype = {
                                            constructor: r,
                                            init: null,
                                            mergeOption: function(n) {
                                                f.merge(this.option, n, !0)
                                            },
                                            get: function(n, t) {
                                                var i, u, r;
                                                if (!n) return this.option;
                                                for (typeof n == "string" && (n = n.split(".")), i = this.option, u = this.parentModel, r = 0; r < n.length; r++)
                                                    if (n[r] && (i = i && typeof i == "object" ? i[n[r]] : null, i == null)) break;
                                                return i == null && u && !t && (i = u.get(n)), i
                                            },
                                            getShallow: function(n, t) {
                                                var i = this.option,
                                                    r = i == null ? i : i[n],
                                                    u = this.parentModel;
                                                return r == null && u && !t && (r = u.getShallow(n)), r
                                            },
                                            getModel: function(n, t) {
                                                var u = this.get(n, !0),
                                                    i = this.parentModel;
                                                return new r(u, t || i && i.getModel(n), this.ecModel)
                                            },
                                            isEmpty: function() {
                                                return this.option == null
                                            },
                                            restoreData: function() {},
                                            clone: function() {
                                                var n = this.constructor;
                                                return new n(f.clone(this.option))
                                            },
                                            setReadOnly: function(n) {
                                                e.setReadOnly(this, n)
                                            }
                                        };
                                        e.enableClassExtend(r);
                                        u = f.mixin;
                                        u(r, i(14));
                                        u(r, i(16));
                                        u(r, i(17));
                                        u(r, i(18));
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function s(n, t) {
                                            var i = u.slice(arguments, 2);
                                            return this.superClass.prototype[t].apply(n, i)
                                        }

                                        function h(n, t, i) {
                                            return this.superClass.prototype[t].apply(n, i)
                                        }
                                        var u = i(4),
                                            f = {},
                                            o = ".",
                                            r = "___EC__COMPONENT__CONTAINER___",
                                            e = f.parseClassType = function(n) {
                                                var t = {
                                                    main: "",
                                                    sub: ""
                                                };
                                                return n && (n = n.split(o), t.main = n[0] || "", t.sub = n[1] || ""), t
                                            };
                                        f.enableClassExtend = function(n, t) {
                                            n.$constructor = n;
                                            n.extend = function(n) {
                                                !0 && u.each(t, function(t) {
                                                    n[t] || console.warn("Method `" + t + "` should be implemented" + (n.type ? " in " + n.type : "") + ".")
                                                });
                                                var r = this,
                                                    i = function() {
                                                        n.$constructor ? n.$constructor.apply(this, arguments) : r.apply(this, arguments)
                                                    };
                                                return u.extend(i.prototype, n), i.extend = this.extend, i.superCall = s, i.superApply = h, u.inherits(i, this), i.superClass = r, i
                                            }
                                        };
                                        f.enableClassManagement = function(n, t) {
                                            function o(n) {
                                                var t = i[n.main];
                                                return t && t[r] || (t = i[n.main] = {}, t[r] = !0), t
                                            }
                                            var i, f;
                                            return t = t || {}, i = {}, n.registerClass = function(n, t) {
                                                if (t)
                                                    if (t = e(t), t.sub) {
                                                        if (t.sub !== r) {
                                                            var u = o(t);
                                                            u[t.sub] = n
                                                        }
                                                    } else !0 && i[t.main] && console.warn(t.main + " exists."), i[t.main] = n;
                                                return n
                                            }, n.getClass = function(n, t, u) {
                                                var f = i[n];
                                                if (f && f[r] && (f = t ? f[t] : null), u && !f) throw new Error("Component " + n + "." + (t || "") + " not exists. Load it first.");
                                                return f
                                            }, n.getClassesByMainType = function(n) {
                                                n = e(n);
                                                var f = [],
                                                    t = i[n.main];
                                                return t && t[r] ? u.each(t, function(n, t) {
                                                    t !== r && f.push(n)
                                                }) : f.push(t), f
                                            }, n.hasClass = function(n) {
                                                return n = e(n), !!i[n.main]
                                            }, n.getAllClassMainTypes = function() {
                                                var n = [];
                                                return u.each(i, function(t, i) {
                                                    n.push(i)
                                                }), n
                                            }, n.hasSubTypes = function(n) {
                                                n = e(n);
                                                var t = i[n.main];
                                                return t && t[r]
                                            }, n.parseClassType = e, t.registerWhenExtend && (f = n.extend, f && (n.extend = function(t) {
                                                var i = f.call(this, t);
                                                return n.registerClass(i, t.type)
                                            })), n
                                        };
                                        f.setReadOnly = function() {};
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var r = i(15)([
                                            ["lineWidth", "width"],
                                            ["stroke", "color"],
                                            ["opacity"],
                                            ["shadowBlur"],
                                            ["shadowOffsetX"],
                                            ["shadowOffsetY"],
                                            ["shadowColor"]
                                        ]);
                                        n.exports = {
                                            getLineStyle: function(n) {
                                                var t = r.call(this, n),
                                                    i = this.getLineDash(t.lineWidth);
                                                return i && (t.lineDash = i), t
                                            },
                                            getLineDash: function(n) {
                                                n == null && (n = 1);
                                                var t = this.get("type"),
                                                    i = Math.max(n, 2),
                                                    r = n * 4;
                                                return t === "solid" || t == null ? null : t === "dashed" ? [r, r] : [i, i]
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = function(n) {
                                            for (var t = 0; t < n.length; t++) n[t][1] || (n[t][1] = n[t][0]);
                                            return function(t) {
                                                for (var u, f, e = {}, i = 0; i < n.length; i++)(u = n[i][1], t && r.indexOf(t, u) >= 0) || (f = this.getShallow(u), f != null && (e[n[i][0]] = f));
                                                return e
                                            }
                                        }
                                    }, function(n, t, i) {
                                        n.exports = {
                                            getAreaStyle: i(15)([
                                                ["fill", "color"],
                                                ["shadowBlur"],
                                                ["shadowOffsetX"],
                                                ["shadowOffsetY"],
                                                ["opacity"],
                                                ["shadowColor"]
                                            ])
                                        }
                                    }, function(n, t, i) {
                                        function r(n, t) {
                                            return n && n.getShallow(t)
                                        }
                                        var u = i(8);
                                        n.exports = {
                                            getTextColor: function() {
                                                var n = this.ecModel;
                                                return this.getShallow("color") || n && n.get("textStyle.color")
                                            },
                                            getFont: function() {
                                                var t = this.ecModel,
                                                    n = t && t.getModel("textStyle");
                                                return [this.getShallow("fontStyle") || r(n, "fontStyle"), this.getShallow("fontWeight") || r(n, "fontWeight"), (this.getShallow("fontSize") || r(n, "fontSize") || 12) + "px", this.getShallow("fontFamily") || r(n, "fontFamily") || "sans-serif"].join(" ")
                                            },
                                            getTextRect: function(n) {
                                                var t = this.get("textStyle") || {};
                                                return u.getBoundingRect(n, this.getFont(), t.align, t.baseline)
                                            },
                                            truncateText: function(n, t, i, r) {
                                                return u.truncateText(n, t, this.getFont(), i, r)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var r = i(15)([
                                            ["fill", "color"],
                                            ["stroke", "borderColor"],
                                            ["lineWidth", "borderWidth"],
                                            ["opacity"],
                                            ["shadowBlur"],
                                            ["shadowOffsetX"],
                                            ["shadowOffsetY"],
                                            ["shadowColor"],
                                            ["textPosition"],
                                            ["textAlign"]
                                        ]);
                                        n.exports = {
                                            getItemStyle: function(n) {
                                                var t = r.call(this, n),
                                                    i = this.getBorderLineDash();
                                                return i && (t.lineDash = i), t
                                            },
                                            getBorderLineDash: function() {
                                                var n = this.get("borderType");
                                                return n === "solid" || n == null ? null : n === "dashed" ? [5, 5] : [1, 1]
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function c(n) {
                                            var t = [];
                                            return r.each(u.getClassesByMainType(n), function(n) {
                                                h.apply(t, n.prototype.dependencies || [])
                                            }), r.map(t, function(n) {
                                                return s.parseClassType(n).main
                                            })
                                        }
                                        var o = i(12),
                                            r = i(4),
                                            h = Array.prototype.push,
                                            f = i(20),
                                            s = i(13),
                                            e = i(21),
                                            u = o.extend({
                                                type: "component",
                                                id: "",
                                                name: "",
                                                mainType: "",
                                                subType: "",
                                                componentIndex: 0,
                                                defaultOption: null,
                                                ecModel: null,
                                                dependentModels: [],
                                                uid: null,
                                                layoutMode: null,
                                                $constructor: function(n, t, i, r) {
                                                    o.call(this, n, t, i, r);
                                                    this.uid = f.getUID("componentModel")
                                                },
                                                init: function(n, t, i) {
                                                    this.mergeDefaultAndTheme(n, i)
                                                },
                                                mergeDefaultAndTheme: function(n, t) {
                                                    var i = this.layoutMode,
                                                        u = i ? e.getLayoutParams(n) : {},
                                                        f = t.getTheme();
                                                    r.merge(n, f.get(this.mainType));
                                                    r.merge(n, this.getDefaultOption());
                                                    i && e.mergeLayoutParam(n, u, i)
                                                },
                                                mergeOption: function(n) {
                                                    r.merge(this.option, n, !0);
                                                    var t = this.layoutMode;
                                                    t && e.mergeLayoutParam(this.option, n, t)
                                                },
                                                optionUpdated: function() {},
                                                getDefaultOption: function() {
                                                    var t, n, f, i, u;
                                                    if (!this.hasOwnProperty("__defaultOption")) {
                                                        for (t = [], n = this.constructor; n;) f = n.prototype.defaultOption, f && t.push(f), n = n.superClass;
                                                        for (i = {}, u = t.length - 1; u >= 0; u--) i = r.merge(i, t[u], !0);
                                                        this.__defaultOption = i
                                                    }
                                                    return this.__defaultOption
                                                },
                                                getReferringComponents: function(n) {
                                                    return this.ecModel.queryComponents({
                                                        mainType: n,
                                                        index: this.get(n + "Index", !0),
                                                        id: this.get(n + "Id", !0)
                                                    })
                                                }
                                            });
                                        s.enableClassManagement(u, {
                                            registerWhenExtend: !0
                                        });
                                        f.enableSubTypeDefaulter(u);
                                        f.enableTopologicalTravel(u, c);
                                        r.mixin(u, i(22));
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            e = i(13),
                                            f = e.parseClassType,
                                            o = 0,
                                            u = {},
                                            s = "_";
                                        u.getUID = function(n) {
                                            return [n || "", o++, Math.random()].join(s)
                                        };
                                        u.enableSubTypeDefaulter = function(n) {
                                            var t = {};
                                            return n.registerSubTypeDefaulter = function(n, i) {
                                                n = f(n);
                                                t[n.main] = i
                                            }, n.determineSubType = function(i, r) {
                                                var u = r.type,
                                                    e;
                                                return u || (e = f(i).main, n.hasSubTypes(i) && t[e] && (u = t[e](r))), u
                                            }, n
                                        };
                                        u.enableTopologicalTravel = function(n, t) {
                                            function u(n) {
                                                var u = {},
                                                    e = [];
                                                return r.each(n, function(o) {
                                                    var s = i(u, o),
                                                        c = s.originalDeps = t(o),
                                                        h = f(c, n);
                                                    s.entryCount = h.length;
                                                    s.entryCount === 0 && e.push(o);
                                                    r.each(h, function(n) {
                                                        r.indexOf(s.predecessor, n) < 0 && s.predecessor.push(n);
                                                        var t = i(u, n);
                                                        r.indexOf(t.successor, n) < 0 && t.successor.push(o)
                                                    })
                                                }), {
                                                    graph: u,
                                                    noEntryList: e
                                                }
                                            }

                                            function i(n, t) {
                                                return n[t] || (n[t] = {
                                                    predecessor: [],
                                                    successor: []
                                                }), n[t]
                                            }

                                            function f(n, t) {
                                                var i = [];
                                                return r.each(n, function(n) {
                                                    r.indexOf(t, n) >= 0 && i.push(n)
                                                }), i
                                            }
                                            n.topologicalTravel = function(n, t, i, f) {
                                                function v(n) {
                                                    s[n].entryCount--;
                                                    s[n].entryCount === 0 && h.push(n)
                                                }

                                                function y(n) {
                                                    e[n] = !0;
                                                    v(n)
                                                }
                                                if (n.length) {
                                                    var c = u(t),
                                                        s = c.graph,
                                                        h = c.noEntryList,
                                                        e = {};
                                                    for (r.each(n, function(n) {
                                                            e[n] = !0
                                                        }); h.length;) {
                                                        var o = h.pop(),
                                                            l = s[o],
                                                            a = !!e[o];
                                                        a && (i.call(f, o, l.originalDeps.slice()), delete e[o]);
                                                        r.each(l.successor, a ? y : v)
                                                    }
                                                    r.each(e, function() {
                                                        throw new Error("Circle dependency may exists");
                                                    })
                                                }
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";

                                        function o(n, t, i, r, u) {
                                            var e = 0,
                                                o = 0,
                                                f;
                                            r == null && (r = Infinity);
                                            u == null && (u = Infinity);
                                            f = 0;
                                            t.eachChild(function(s, h) {
                                                var w = s.position,
                                                    c = s.getBoundingRect(),
                                                    b = t.childAt(h + 1),
                                                    l = b && b.getBoundingRect(),
                                                    a, v, y, p;
                                                (n === "horizontal" ? (y = c.width + (l ? -l.x + c.x : 0), a = e + y, a > r || s.newline ? (e = 0, a = y, o += f + i, f = c.height) : f = Math.max(f, c.height)) : (p = c.height + (l ? -l.y + c.y : 0), v = o + p, v > u || s.newline ? (e += f + i, o = 0, v = p, f = c.width) : f = Math.max(f, c.width)), s.newline) || (w[0] = e, w[1] = o, n === "horizontal" ? e = a + i : o = v + i)
                                            })
                                        }
                                        var f = i(4),
                                            h = i(9),
                                            c = i(7),
                                            s = i(6),
                                            u = c.parsePercent,
                                            e = f.each,
                                            r = {},
                                            l = ["left", "right", "top", "bottom", "width", "height"];
                                        r.box = o;
                                        r.vbox = f.curry(o, "vertical");
                                        r.hbox = f.curry(o, "horizontal");
                                        r.getAvailableSize = function(n, t, i) {
                                            var r = t.width,
                                                f = t.height,
                                                e = u(n.x, r),
                                                o = u(n.y, f),
                                                h = u(n.x2, r),
                                                c = u(n.y2, f);
                                            return (isNaN(e) || isNaN(parseFloat(n.x))) && (e = 0), (isNaN(h) || isNaN(parseFloat(n.x2))) && (h = r), (isNaN(o) || isNaN(parseFloat(n.y))) && (o = 0), (isNaN(c) || isNaN(parseFloat(n.y2))) && (c = f), i = s.normalizeCssArray(i || 0), {
                                                width: Math.max(h - e - i[1] - i[3], 0),
                                                height: Math.max(c - o - i[0] - i[2], 0)
                                            }
                                        };
                                        r.getLayoutRect = function(n, t, i) {
                                            var b;
                                            i = s.normalizeCssArray(i || 0);
                                            var e = t.width,
                                                o = t.height,
                                                c = u(n.left, e),
                                                l = u(n.top, o),
                                                v = u(n.right, e),
                                                y = u(n.bottom, o),
                                                r = u(n.width, e),
                                                f = u(n.height, o),
                                                p = i[2] + i[0],
                                                w = i[1] + i[3],
                                                a = n.aspect;
                                            isNaN(r) && (r = e - v - w - c);
                                            isNaN(f) && (f = o - y - p - l);
                                            isNaN(r) && isNaN(f) && (a > e / o ? r = e * .8 : f = o * .8);
                                            a != null && (isNaN(r) && (r = a * f), isNaN(f) && (f = r / a));
                                            isNaN(c) && (c = e - v - r - w);
                                            isNaN(l) && (l = o - y - f - p);
                                            switch (n.left || n.right) {
                                                case "center":
                                                    c = e / 2 - r / 2 - i[3];
                                                    break;
                                                case "right":
                                                    c = e - r - w
                                            }
                                            switch (n.top || n.bottom) {
                                                case "middle":
                                                case "center":
                                                    l = o / 2 - f / 2 - i[0];
                                                    break;
                                                case "bottom":
                                                    l = o - f - p
                                            }
                                            return c = c || 0, l = l || 0, isNaN(r) && (r = e - c - (v || 0)), isNaN(f) && (f = o - l - (y || 0)), b = new h(c + i[3], l + i[0], r, f), b.margin = i, b
                                        };
                                        r.positionGroup = function(n, t, i, u) {
                                            var e = n.getBoundingRect();
                                            t = f.extend(f.clone(t), {
                                                width: e.width,
                                                height: e.height
                                            });
                                            t = r.getLayoutRect(t, i, u);
                                            n.attr("position", [t.x - e.x, t.y - e.y])
                                        };
                                        r.mergeLayoutParam = function(n, t, i) {
                                            function s(u) {
                                                var f = {},
                                                    l = 0,
                                                    s = {},
                                                    a = 0,
                                                    v = i.ignoreSize ? 1 : 2,
                                                    c, o;
                                                if (e(u, function(t) {
                                                        s[t] = n[t]
                                                    }), e(u, function(n) {
                                                        r(t, n) && (f[n] = s[n] = t[n]);
                                                        h(f, n) && l++;
                                                        h(s, n) && a++
                                                    }), a !== v && l) {
                                                    if (l >= v) return f;
                                                    for (c = 0; c < u.length; c++)
                                                        if (o = u[c], !r(f, o) && r(n, o)) {
                                                            f[o] = n[o];
                                                            break
                                                        }
                                                    return f
                                                }
                                                return s
                                            }

                                            function r(n, t) {
                                                return n.hasOwnProperty(t)
                                            }

                                            function h(n, t) {
                                                return n[t] != null && n[t] !== "auto"
                                            }

                                            function c(n, t, i) {
                                                e(n, function(n) {
                                                    t[n] = i[n]
                                                })
                                            }
                                            f.isObject(i) || (i = {});
                                            var u = ["width", "left", "right"],
                                                o = ["height", "top", "bottom"],
                                                l = s(u),
                                                a = s(o);
                                            c(u, n, l);
                                            c(o, n, a)
                                        };
                                        r.getLayoutParams = function(n) {
                                            return r.copyLayoutParams({}, n)
                                        };
                                        r.copyLayoutParams = function(n, t) {
                                            return t && n && e(l, function(i) {
                                                t.hasOwnProperty(i) && (n[i] = t[i])
                                            }), n
                                        };
                                        n.exports = r
                                    }, function(n) {
                                        n.exports = {
                                            getBoxLayoutParams: function() {
                                                return {
                                                    left: this.get("left"),
                                                    top: this.get("top"),
                                                    right: this.get("right"),
                                                    bottom: this.get("bottom"),
                                                    width: this.get("width"),
                                                    height: this.get("height")
                                                }
                                            }
                                        }
                                    }, function(n) {
                                        var t = "";
                                        typeof navigator != "undefined" && (t = navigator.platform || "");
                                        n.exports = {
                                            color: ["#c23531", "#2f4554", "#61a0a8", "#d48265", "#91c7ae", "#749f83", "#ca8622", "#bda29a", "#6e7074", "#546570", "#c4ccd3"],
                                            textStyle: {
                                                fontFamily: t.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
                                                fontSize: 12,
                                                fontStyle: "normal",
                                                fontWeight: "normal"
                                            },
                                            blendMode: null,
                                            animation: !0,
                                            animationDuration: 1e3,
                                            animationDurationUpdate: 300,
                                            animationEasing: "exponentialOut",
                                            animationEasingUpdate: "cubicOut",
                                            animationThreshold: 2e3,
                                            progressiveThreshold: 3e3,
                                            progressive: 400,
                                            hoverLayerThreshold: 3e3
                                        }
                                    }, function(n) {
                                        n.exports = {
                                            clearColorPalette: function() {
                                                this._colorIdx = 0;
                                                this._colorNameMap = {}
                                            },
                                            getColorFromPalette: function(n, t) {
                                                var u, i, r, f;
                                                return (t = t || this, u = t._colorIdx || 0, i = t._colorNameMap || (t._colorNameMap = {}), i[n]) ? i[n] : (r = this.get("color", !0) || [], !r.length) ? void 0 : (f = r[u], n && (i[n] = f), t._colorIdx = (u + 1) % r.length, f)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n) {
                                            r.each(u, function(t) {
                                                this[t] = r.bind(n[t], n)
                                            }, this)
                                        }
                                        var r = i(4),
                                            u = ["getDom", "getZr", "getWidth", "getHeight", "dispatchAction", "isDisposed", "on", "off", "getDataURL", "getConnectedDataURL", "getModel", "getOption"];
                                        n.exports = f
                                    }, function(n, t, i) {
                                        "use strict";

                                        function r() {
                                            this._coordinateSystems = []
                                        }
                                        var f = i(4),
                                            u = {};
                                        r.prototype = {
                                            constructor: r,
                                            create: function(n, t) {
                                                var i = [];
                                                f.each(u, function(r) {
                                                    var u = r.create(n, t);
                                                    i = i.concat(u || [])
                                                });
                                                this._coordinateSystems = i
                                            },
                                            update: function(n, t) {
                                                f.each(this._coordinateSystems, function(i) {
                                                    i.update && i.update(n, t)
                                                })
                                            },
                                            getCoordinateSystems: function() {
                                                return this._coordinateSystems.slice()
                                            }
                                        };
                                        r.register = function(n, t) {
                                            u[n] = t
                                        };
                                        r.get = function(n) {
                                            return u[n]
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function s(n) {
                                            this._api = n;
                                            this._timelineOptions = [];
                                            this._mediaList = [];
                                            this._mediaDefault;
                                            this._currentMediaIndices = [];
                                            this._optionBackup;
                                            this._newBaseOption
                                        }

                                        function a(n, t, i) {
                                            var e = [],
                                                o = [],
                                                s, r, h = n.timeline,
                                                c;
                                            return n.baseOption && (r = n.baseOption), (h || n.options) && (r = r || {}, e = (n.options || []).slice()), n.media && (r = r || {}, c = n.media, f(c, function(n) {
                                                n && n.option && (n.query ? o.push(n) : s || (s = n))
                                            })), r || (r = n), r.timeline || (r.timeline = h), f([r].concat(e).concat(u.map(o, function(n) {
                                                return n.option
                                            })), function(n) {
                                                f(t, function(t) {
                                                    t(n, i)
                                                })
                                            }), {
                                                baseOption: r,
                                                timelineOptions: e,
                                                mediaDefault: s,
                                                mediaList: o
                                            }
                                        }

                                        function v(n, t, i) {
                                            var f = {
                                                    width: t,
                                                    height: i,
                                                    aspectratio: t / i
                                                },
                                                r = !0;
                                            return u.each(n, function(n, t) {
                                                var i = t.match(l),
                                                    u, e;
                                                i && i[1] && i[2] && (u = i[1], e = i[2].toLowerCase(), y(f[e], n, u) || (r = !1))
                                            }), r
                                        }

                                        function y(n, t, i) {
                                            return i === "min" ? n >= t : i === "max" ? n <= t : n === t
                                        }

                                        function p(n, t) {
                                            return n.join(",") === t.join(",")
                                        }

                                        function w(n, t) {
                                            t = t || {};
                                            f(t, function(t, i) {
                                                var r, u;
                                                t != null && (r = n[i], c.hasClass(i) ? (t = o.normalizeToArray(t), r = o.normalizeToArray(r), u = o.mappingToExists(r, t), n[i] = e(u, function(n) {
                                                    return n.option && n.exist ? h(n.exist, n.option, !0) : n.exist || n.option
                                                })) : n[i] = h(r, t, !0))
                                            })
                                        }
                                        var u = i(4),
                                            o = i(5),
                                            c = i(19),
                                            f = u.each,
                                            r = u.clone,
                                            e = u.map,
                                            h = u.merge,
                                            l = /^(min|max)?(.+)$/;
                                        s.prototype = {
                                            constructor: s,
                                            setOption: function(n, t) {
                                                n = r(n, !0);
                                                var u = this._optionBackup,
                                                    i = a.call(this, n, t, !u);
                                                this._newBaseOption = i.baseOption;
                                                u ? (w(u.baseOption, i.baseOption), i.timelineOptions.length && (u.timelineOptions = i.timelineOptions), i.mediaList.length && (u.mediaList = i.mediaList), i.mediaDefault && (u.mediaDefault = i.mediaDefault)) : this._optionBackup = i
                                            },
                                            mountOption: function(n) {
                                                var t = this._optionBackup;
                                                return this._timelineOptions = e(t.timelineOptions, r), this._mediaList = e(t.mediaList, r), this._mediaDefault = r(t.mediaDefault), this._currentMediaIndices = [], r(n ? t.baseOption : this._newBaseOption)
                                            },
                                            getTimelineOption: function(n) {
                                                var i, u = this._timelineOptions,
                                                    t;
                                                return u.length && (t = n.getComponent("timeline"), t && (i = r(u[t.getCurrentIndex()], !0))), i
                                            },
                                            getMediaOption: function() {
                                                var s = this._api.getWidth(),
                                                    h = this._api.getHeight(),
                                                    i = this._mediaList,
                                                    u = this._mediaDefault,
                                                    n = [],
                                                    f = [],
                                                    t, o;
                                                if (!i.length && !u) return f;
                                                for (t = 0, o = i.length; t < o; t++) v(i[t].query, s, h) && n.push(t);
                                                return !n.length && u && (n = [-1]), n.length && !p(n, this._currentMediaIndices) && (f = e(n, function(n) {
                                                    return r(n === -1 ? u.option : i[n].option)
                                                })), this._currentMediaIndices = n, f
                                            }
                                        };
                                        n.exports = s
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(4),
                                            f = i(6),
                                            u = i(5),
                                            c = i(19),
                                            s = i(24),
                                            l = i(2),
                                            e = f.encodeHTML,
                                            h = f.addCommas,
                                            o = c.extend({
                                                type: "series.__base__",
                                                seriesIndex: 0,
                                                coordinateSystem: null,
                                                defaultOption: null,
                                                legendDataProvider: null,
                                                visualColorAccessPath: "itemStyle.normal.color",
                                                init: function(n, t, i) {
                                                    this.seriesIndex = this.componentIndex;
                                                    this.mergeDefaultAndTheme(n, i);
                                                    this._dataBeforeProcessed = this.getInitialData(n, i);
                                                    this._data = this._dataBeforeProcessed.cloneShallow()
                                                },
                                                mergeDefaultAndTheme: function(n, t) {
                                                    r.merge(n, t.getTheme().get(this.subType));
                                                    r.merge(n, this.getDefaultOption());
                                                    u.defaultEmphasis(n.label, u.LABEL_OPTIONS);
                                                    this.fillDataTextStyle(n.data)
                                                },
                                                mergeOption: function(n, t) {
                                                    n = r.merge(this.option, n, !0);
                                                    this.fillDataTextStyle(n.data);
                                                    var i = this.getInitialData(n, t);
                                                    i && (this._data = i, this._dataBeforeProcessed = i.cloneShallow())
                                                },
                                                fillDataTextStyle: function(n) {
                                                    if (n)
                                                        for (var t = 0; t < n.length; t++) n[t] && n[t].label && u.defaultEmphasis(n[t].label, u.LABEL_OPTIONS)
                                                },
                                                getInitialData: function() {},
                                                getData: function(n) {
                                                    return n == null ? this._data : this._data.getLinkedData(n)
                                                },
                                                setData: function(n) {
                                                    this._data = n
                                                },
                                                getRawData: function() {
                                                    return this._dataBeforeProcessed
                                                },
                                                coordDimToDataDim: function(n) {
                                                    return [n]
                                                },
                                                dataDimToCoordDim: function(n) {
                                                    return n
                                                },
                                                getBaseAxis: function() {
                                                    var n = this.coordinateSystem;
                                                    return n && n.getBaseAxis && n.getBaseAxis()
                                                },
                                                formatTooltip: function(n, t) {
                                                    function a(n) {
                                                        var i = [];
                                                        return r.each(n, function(n, r) {
                                                            var o = u.getDimensionInfo(r),
                                                                s = o && o.type,
                                                                e;
                                                            e = s === "ordinal" ? n + "" : s === "time" ? t ? "" : f.formatTime("yyyy/mm/dd hh:mm:ss", n) : h(n);
                                                            e && i.push(e)
                                                        }), i.join(", ")
                                                    }
                                                    var u = this._data,
                                                        o = this.getRawValue(n),
                                                        s = r.isArray(o) ? a(o) : h(o),
                                                        c = u.getName(n),
                                                        v = u.getItemVisual(n, "color"),
                                                        l = '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + v + '"><\/span>',
                                                        i = this.name;
                                                    return i === '\0-' && (i = ""), t ? l + e(this.name) + " : " + s : (i && e(i) + "<br />") + l + (c ? e(c) + " : " + s : s)
                                                },
                                                ifEnableAnimation: function() {
                                                    if (l.node) return !1;
                                                    var n = this.getShallow("animation");
                                                    return n && this.getData().count() > this.getShallow("animationThreshold") && (n = !1), n
                                                },
                                                restoreData: function() {
                                                    this._data = this._dataBeforeProcessed.cloneShallow()
                                                },
                                                getColorFromPalette: function(n, t) {
                                                    var r = this.ecModel,
                                                        i = s.getColorFromPalette.call(this, n, t);
                                                    return i || (i = r.getColorFromPalette(n, t)), i
                                                },
                                                getAxisTooltipDataIndex: null,
                                                getTooltipPosition: null
                                            });
                                        r.mixin(o, u.dataFormatMixin);
                                        r.mixin(o, s);
                                        n.exports = o
                                    }, function(n, t, i) {
                                        var e = i(30),
                                            o = i(20),
                                            f = i(13),
                                            r = function() {
                                                this.group = new e;
                                                this.uid = o.getUID("viewComponent")
                                            },
                                            u;
                                        r.prototype = {
                                            constructor: r,
                                            init: function() {},
                                            render: function() {},
                                            dispose: function() {}
                                        };
                                        u = r.prototype;
                                        u.updateView = u.updateLayout = u.updateVisual = function() {};
                                        f.enableClassExtend(r);
                                        f.enableClassManagement(r, {
                                            registerWhenExtend: !0
                                        });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            f = i(31),
                                            e = i(9),
                                            r = function(n) {
                                                n = n || {};
                                                f.call(this, n);
                                                for (var t in n) n.hasOwnProperty(t) && (this[t] = n[t]);
                                                this._children = [];
                                                this.__storage = null;
                                                this.__dirty = !0
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            isGroup: !0,
                                            type: "group",
                                            silent: !1,
                                            children: function() {
                                                return this._children.slice()
                                            },
                                            childAt: function(n) {
                                                return this._children[n]
                                            },
                                            childOfName: function(n) {
                                                for (var i = this._children, t = 0; t < i.length; t++)
                                                    if (i[t].name === n) return i[t]
                                            },
                                            childCount: function() {
                                                return this._children.length
                                            },
                                            add: function(n) {
                                                return n && n !== this && n.parent !== this && (this._children.push(n), this._doAdd(n)), this
                                            },
                                            addBefore: function(n, t) {
                                                if (n && n !== this && n.parent !== this && t && t.parent === this) {
                                                    var i = this._children,
                                                        r = i.indexOf(t);
                                                    r >= 0 && (i.splice(r, 0, n), this._doAdd(n))
                                                }
                                                return this
                                            },
                                            _doAdd: function(n) {
                                                n.parent && n.parent.remove(n);
                                                n.parent = this;
                                                var t = this.__storage,
                                                    i = this.__zr;
                                                t && t !== n.__storage && (t.addToMap(n), n instanceof r && n.addChildrenToStorage(t));
                                                i && i.refresh()
                                            },
                                            remove: function(n) {
                                                var i = this.__zr,
                                                    t = this.__storage,
                                                    f = this._children,
                                                    e = u.indexOf(f, n);
                                                return e < 0 ? this : (f.splice(e, 1), n.parent = null, t && (t.delFromMap(n.id), n instanceof r && n.delChildrenFromStorage(t)), i && i.refresh(), this)
                                            },
                                            removeAll: function() {
                                                for (var i = this._children, u = this.__storage, n, t = 0; t < i.length; t++) n = i[t], u && (u.delFromMap(n.id), n instanceof r && n.delChildrenFromStorage(u)), n.parent = null;
                                                return i.length = 0, this
                                            },
                                            eachChild: function(n, t) {
                                                for (var u, r = this._children, i = 0; i < r.length; i++) u = r[i], n.call(t, u, i);
                                                return this
                                            },
                                            traverse: function(n, t) {
                                                for (var r, i = 0; i < this._children.length; i++) r = this._children[i], n.call(t, r), r.type === "group" && r.traverse(n, t);
                                                return this
                                            },
                                            addChildrenToStorage: function(n) {
                                                for (var i, t = 0; t < this._children.length; t++) i = this._children[t], n.addToMap(i), i instanceof r && i.addChildrenToStorage(n)
                                            },
                                            delChildrenFromStorage: function(n) {
                                                for (var i, t = 0; t < this._children.length; t++) i = this._children[t], n.delFromMap(i.id), i instanceof r && i.delChildrenFromStorage(n)
                                            },
                                            dirty: function() {
                                                return this.__dirty = !0, this.__zr && this.__zr.refresh(), this
                                            },
                                            getBoundingRect: function(n) {
                                                for (var r, u, o, t = null, i = new e(0, 0, 0, 0), s = n || this._children, h = [], f = 0; f < s.length; f++)(r = s[f], r.ignore || r.invisible) || (u = r.getBoundingRect(), o = r.getLocalTransform(h), o ? (i.copy(u), i.applyTransform(o), t = t || i.clone(), t.union(i)) : (t = t || u.clone(), t.union(u)));
                                                return t || i
                                            }
                                        };
                                        u.inherits(r, f);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";
                                        var s = i(32),
                                            f = i(33),
                                            e = i(34),
                                            o = i(35),
                                            u = i(4),
                                            r = function(n) {
                                                e.call(this, n);
                                                f.call(this, n);
                                                o.call(this, n);
                                                this.id = n.id || s()
                                            };
                                        r.prototype = {
                                            type: "element",
                                            name: "",
                                            __zr: null,
                                            ignore: !1,
                                            clipPath: null,
                                            drift: function(n, t) {
                                                switch (this.draggable) {
                                                    case "horizontal":
                                                        t = 0;
                                                        break;
                                                    case "vertical":
                                                        n = 0
                                                }
                                                var i = this.transform;
                                                i || (i = this.transform = [1, 0, 0, 1, 0, 0]);
                                                i[4] += n;
                                                i[5] += t;
                                                this.decomposeTransform();
                                                this.dirty(!1)
                                            },
                                            beforeUpdate: function() {},
                                            afterUpdate: function() {},
                                            update: function() {
                                                this.updateTransform()
                                            },
                                            traverse: function() {},
                                            attrKV: function(n, t) {
                                                if (n === "position" || n === "scale" || n === "origin") {
                                                    if (t) {
                                                        var i = this[n];
                                                        i || (i = this[n] = []);
                                                        i[0] = t[0];
                                                        i[1] = t[1]
                                                    }
                                                } else this[n] = t
                                            },
                                            hide: function() {
                                                this.ignore = !0;
                                                this.__zr && this.__zr.refresh()
                                            },
                                            show: function() {
                                                this.ignore = !1;
                                                this.__zr && this.__zr.refresh()
                                            },
                                            attr: function(n, t) {
                                                if (typeof n == "string") this.attrKV(n, t);
                                                else if (u.isObject(n))
                                                    for (var i in n) n.hasOwnProperty(i) && this.attrKV(i, n[i]);
                                                return this.dirty(!1), this
                                            },
                                            setClipPath: function(n) {
                                                var t = this.__zr;
                                                t && n.addSelfToZr(t);
                                                this.clipPath && this.clipPath !== n && this.removeClipPath();
                                                this.clipPath = n;
                                                n.__zr = t;
                                                n.__clipTarget = this;
                                                this.dirty(!1)
                                            },
                                            removeClipPath: function() {
                                                var n = this.clipPath;
                                                n && (n.__zr && n.removeSelfFromZr(n.__zr), n.__zr = null, n.__clipTarget = null, this.clipPath = null, this.dirty(!1))
                                            },
                                            addSelfToZr: function(n) {
                                                var t, i;
                                                if (this.__zr = n, t = this.animators, t)
                                                    for (i = 0; i < t.length; i++) n.animation.addAnimator(t[i]);
                                                this.clipPath && this.clipPath.addSelfToZr(n)
                                            },
                                            removeSelfFromZr: function(n) {
                                                var t, i;
                                                if (this.__zr = null, t = this.animators, t)
                                                    for (i = 0; i < t.length; i++) n.animation.removeAnimator(t[i]);
                                                this.clipPath && this.clipPath.removeSelfFromZr(n)
                                            }
                                        };
                                        u.mixin(r, o);
                                        u.mixin(r, e);
                                        u.mixin(r, f);
                                        n.exports = r
                                    }, function(n) {
                                        var t = 2311;
                                        n.exports = function() {
                                            return t++
                                        }
                                    }, function(n) {
                                        var i = Array.prototype.slice,
                                            t = function() {
                                                this._$handlers = {}
                                            };
                                        t.prototype = {
                                            constructor: t,
                                            one: function(n, t, i) {
                                                var r = this._$handlers,
                                                    u;
                                                if (!t || !n) return this;
                                                for (r[n] || (r[n] = []), u = 0; u < r[n].length; u++)
                                                    if (r[n][u].h === t) return this;
                                                return r[n].push({
                                                    h: t,
                                                    one: !0,
                                                    ctx: i || this
                                                }), this
                                            },
                                            on: function(n, t, i) {
                                                var r = this._$handlers,
                                                    u;
                                                if (!t || !n) return this;
                                                for (r[n] || (r[n] = []), u = 0; u < r[n].length; u++)
                                                    if (r[n][u].h === t) return this;
                                                return r[n].push({
                                                    h: t,
                                                    one: !1,
                                                    ctx: i || this
                                                }), this
                                            },
                                            isSilent: function(n) {
                                                var t = this._$handlers;
                                                return t[n] && t[n].length
                                            },
                                            off: function(n, t) {
                                                var i = this._$handlers,
                                                    u, r, f;
                                                if (!n) return this._$handlers = {}, this;
                                                if (t) {
                                                    if (i[n]) {
                                                        for (u = [], r = 0, f = i[n].length; r < f; r++) i[n][r].h != t && u.push(i[n][r]);
                                                        i[n] = u
                                                    }
                                                    i[n] && i[n].length === 0 && delete i[n]
                                                } else delete i[n];
                                                return this
                                            },
                                            trigger: function(n) {
                                                var u, f, r, e, t;
                                                if (this._$handlers[n])
                                                    for (u = arguments, f = u.length, f > 3 && (u = i.call(u, 1)), r = this._$handlers[n], e = r.length, t = 0; t < e;) {
                                                        switch (f) {
                                                            case 1:
                                                                r[t].h.call(r[t].ctx);
                                                                break;
                                                            case 2:
                                                                r[t].h.call(r[t].ctx, u[1]);
                                                                break;
                                                            case 3:
                                                                r[t].h.call(r[t].ctx, u[1], u[2]);
                                                                break;
                                                            default:
                                                                r[t].h.apply(r[t].ctx, u)
                                                        }
                                                        r[t].one ? (r.splice(t, 1), e--) : t++
                                                    }
                                                return this
                                            },
                                            triggerWithContext: function(n) {
                                                var t, e, r;
                                                if (this._$handlers[n]) {
                                                    t = arguments;
                                                    e = t.length;
                                                    e > 4 && (t = i.call(t, 1, t.length - 1));
                                                    var f = t[t.length - 1],
                                                        u = this._$handlers[n],
                                                        o = u.length;
                                                    for (r = 0; r < o;) {
                                                        switch (e) {
                                                            case 1:
                                                                u[r].h.call(f);
                                                                break;
                                                            case 2:
                                                                u[r].h.call(f, t[1]);
                                                                break;
                                                            case 3:
                                                                u[r].h.call(f, t[1], t[2]);
                                                                break;
                                                            default:
                                                                u[r].h.apply(f, t)
                                                        }
                                                        u[r].one ? (u.splice(r, 1), o--) : r++
                                                    }
                                                }
                                                return this
                                            }
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n) {
                                            return n > h || n < -h
                                        }
                                        var u = i(11),
                                            s = i(10),
                                            e = u.identity,
                                            h = 5e-5,
                                            c = function(n) {
                                                n = n || {};
                                                n.position || (this.position = [0, 0]);
                                                n.rotation == null && (this.rotation = 0);
                                                n.scale || (this.scale = [1, 1]);
                                                this.origin = this.origin || null
                                            },
                                            r = c.prototype,
                                            o;
                                        r.transform = null;
                                        r.needLocalTransform = function() {
                                            return f(this.rotation) || f(this.position[0]) || f(this.position[1]) || f(this.scale[0] - 1) || f(this.scale[1] - 1)
                                        };
                                        r.updateTransform = function() {
                                            var t = this.parent,
                                                r = t && t.transform,
                                                i = this.needLocalTransform(),
                                                n = this.transform;
                                            if (!(i || r)) {
                                                n && e(n);
                                                return
                                            }
                                            n = n || u.create();
                                            i ? this.getLocalTransform(n) : e(n);
                                            r && (i ? u.mul(n, t.transform, n) : u.copy(n, t.transform));
                                            this.transform = n;
                                            this.invTransform = this.invTransform || u.create();
                                            u.invert(this.invTransform, n)
                                        };
                                        r.getLocalTransform = function(n) {
                                            n = n || [];
                                            e(n);
                                            var t = this.origin,
                                                f = this.scale,
                                                i = this.rotation,
                                                r = this.position;
                                            return t && (n[4] -= t[0], n[5] -= t[1]), u.scale(n, n, f), i && u.rotate(n, n, i), t && (n[4] += t[0], n[5] += t[1]), n[4] += r[0], n[5] += r[1], n
                                        };
                                        r.setTransform = function(n) {
                                            var i = this.transform,
                                                t = n.dpr || 1;
                                            i ? n.setTransform(t * i[0], t * i[1], t * i[2], t * i[3], t * i[4], t * i[5]) : n.setTransform(t, 0, 0, t, 0, 0)
                                        };
                                        r.restoreTransform = function(n) {
                                            var i = this.transform,
                                                t = n.dpr || 1;
                                            n.setTransform(t, 0, 0, t, 0, 0)
                                        };
                                        o = [];
                                        r.decomposeTransform = function() {
                                            var r, n;
                                            if (this.transform) {
                                                r = this.parent;
                                                n = this.transform;
                                                r && r.transform && (u.mul(o, r.invTransform, n), n = o);
                                                var t = n[0] * n[0] + n[1] * n[1],
                                                    i = n[2] * n[2] + n[3] * n[3],
                                                    e = this.position,
                                                    s = this.scale;
                                                f(t - 1) && (t = Math.sqrt(t));
                                                f(i - 1) && (i = Math.sqrt(i));
                                                n[0] < 0 && (t = -t);
                                                n[3] < 0 && (i = -i);
                                                e[0] = n[4];
                                                e[1] = n[5];
                                                s[0] = t;
                                                s[1] = i;
                                                this.rotation = Math.atan2(-n[1] / i, n[0] / t)
                                            }
                                        };
                                        r.getGlobalScale = function() {
                                            var n = this.transform,
                                                t, i;
                                            return n ? (t = Math.sqrt(n[0] * n[0] + n[1] * n[1]), i = Math.sqrt(n[2] * n[2] + n[3] * n[3]), n[0] < 0 && (t = -t), n[3] < 0 && (i = -i), [t, i]) : [1, 1]
                                        };
                                        r.transformCoordToLocal = function(n, t) {
                                            var i = [n, t],
                                                r = this.invTransform;
                                            return r && s.applyTransform(i, i, r), i
                                        };
                                        r.transformCoordToGlobal = function(n, t) {
                                            var i = [n, t],
                                                r = this.transform;
                                            return r && s.applyTransform(i, i, r), i
                                        };
                                        n.exports = c
                                    }, function(n, t, i) {
                                        "use strict";
                                        var e = i(36),
                                            r = i(4),
                                            o = r.isString,
                                            u = r.isFunction,
                                            s = r.isObject,
                                            h = i(40),
                                            f = function() {
                                                this.animators = []
                                            };
                                        f.prototype = {
                                            constructor: f,
                                            animate: function(n, t) {
                                                var o, a = !1,
                                                    f = this,
                                                    v = this.__zr,
                                                    s, i, c, y, l, u;
                                                if (n) {
                                                    for (s = n.split("."), i = f, a = s[0] === "shape", c = 0, y = s.length; c < y; c++) i && (i = i[s[c]]);
                                                    i && (o = i)
                                                } else o = f;
                                                if (!o) {
                                                    h('Property "' + n + '" is not existed in element ' + f.id);
                                                    return
                                                }
                                                return l = f.animators, u = new e(o, t), u.during(function() {
                                                    f.dirty(a)
                                                }).done(function() {
                                                    l.splice(r.indexOf(l, u), 1)
                                                }), l.push(u), v && v.animation.addAnimator(u), u
                                            },
                                            stopAnimation: function(n) {
                                                for (var t = this.animators, r = t.length, i = 0; i < r; i++) t[i].stop(n);
                                                return t.length = 0, this
                                            },
                                            animateTo: function(n, t, i, r, f) {
                                                function c() {
                                                    s--;
                                                    s || f && f()
                                                }
                                                var e, s, h;
                                                for (o(i) ? (f = r, r = i, i = 0) : u(r) ? (f = r, r = "linear", i = 0) : u(i) ? (f = i, i = 0) : u(t) ? (f = t, t = 500) : t || (t = 500), this.stopAnimation(), this._animateToShallow("", this, n, t, i, r, f), e = this.animators.slice(), s = e.length, s || f && f(), h = 0; h < e.length; h++) e[h].done(c).start(r)
                                            },
                                            _animateToShallow: function(n, t, i, u, f) {
                                                var h = {},
                                                    c = 0,
                                                    e, o;
                                                for (e in i) i.hasOwnProperty(e) && (t[e] != null ? s(i[e]) && !r.isArrayLike(i[e]) ? this._animateToShallow(n ? n + "." + e : e, t[e], i[e], u, f) : (h[e] = i[e], c++) : i[e] != null && (n ? (o = {}, o[n] = {}, o[n][e] = i[e], this.attr(o)) : this.attr(e, i[e])));
                                                return c > 0 && this.animate(n, !1).when(u == null ? 500 : u, h).delay(f || 0), this
                                            }
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function w(n, t) {
                                            return n[t]
                                        }

                                        function b(n, t, i) {
                                            n[t] = i
                                        }

                                        function f(n, t, i) {
                                            return (t - n) * i + n
                                        }

                                        function o(n, t, i) {
                                            return i > .5 ? t : n
                                        }

                                        function s(n, t, i, r, u) {
                                            var s = n.length,
                                                h, e, o;
                                            if (u == 1)
                                                for (e = 0; e < s; e++) r[e] = f(n[e], t[e], i);
                                            else
                                                for (h = n[0].length, e = 0; e < s; e++)
                                                    for (o = 0; o < h; o++) r[e][o] = f(n[e][o], t[e][o], i)
                                        }

                                        function h(n, t, i) {
                                            var o = n.length,
                                                e = t.length,
                                                s, h, r, f;
                                            if (o !== e)
                                                if (s = o > e, s) n.length = e;
                                                else
                                                    for (r = o; r < e; r++) n.push(i === 1 ? t[r] : u.call(t[r]));
                                            for (h = n[0] && n[0].length, r = 0; r < n.length; r++)
                                                if (i === 1) isNaN(n[r]) && (n[r] = t[r]);
                                                else
                                                    for (f = 0; f < h; f++) isNaN(n[r][f]) && (n[r][f] = t[r][f])
                                        }

                                        function k(n, t, i) {
                                            var f, e, r, u;
                                            if (n === t) return !0;
                                            if (f = n.length, f !== t.length) return !1;
                                            if (i === 1) {
                                                for (r = 0; r < f; r++)
                                                    if (n[r] !== t[r]) return !1
                                            } else
                                                for (e = n[0].length, r = 0; r < f; r++)
                                                    for (u = 0; u < e; u++)
                                                        if (n[r][u] !== t[r][u]) return !1;
                                            return !0
                                        }

                                        function c(n, t, i, r, u, f, o, s, h) {
                                            var a = n.length,
                                                v, c, l;
                                            if (h == 1)
                                                for (c = 0; c < a; c++) s[c] = e(n[c], t[c], i[c], r[c], u, f, o);
                                            else
                                                for (v = n[0].length, c = 0; c < a; c++)
                                                    for (l = 0; l < v; l++) s[c][l] = e(n[c][l], t[c][l], i[c][l], r[c][l], u, f, o)
                                        }

                                        function e(n, t, i, r, u, f, e) {
                                            var o = (i - n) * .5,
                                                s = (r - t) * .5;
                                            return (2 * (t - i) + o + s) * e + (-3 * (t - i) - 2 * o - s) * f + o * u + t
                                        }

                                        function d(n) {
                                            var f, i, t;
                                            if (r(n)) {
                                                if (f = n.length, r(n[0])) {
                                                    for (i = [], t = 0; t < f; t++) i.push(u.call(n[t]));
                                                    return i
                                                }
                                                return u.call(n)
                                            }
                                            return n
                                        }

                                        function l(n) {
                                            return n[0] = Math.floor(n[0]), n[1] = Math.floor(n[1]), n[2] = Math.floor(n[2]), "rgba(" + n.join(",") + ")"
                                        }

                                        function g(n, t, i, u, a) {
                                            var at = n._getter,
                                                kt = n._setter,
                                                ii = t === "spline",
                                                b = u.length,
                                                g, pt, ut, d, ht, wt, ni, p, ct, ft, et, lt, ot, ti, bt;
                                            if (b) {
                                                var dt = u[0].value,
                                                    nt = r(dt),
                                                    it = !1,
                                                    st = !1,
                                                    rt = nt && r(dt[0]) ? 2 : 1,
                                                    vt;
                                                u.sort(function(n, t) {
                                                    return n.time - t.time
                                                });
                                                vt = u[b - 1].time;
                                                var tt = [],
                                                    w = [],
                                                    yt = u[0].value,
                                                    gt = !0;
                                                for (d = 0; d < b; d++) tt.push(u[d].time / vt), g = u[d].value, nt && k(g, yt, rt) || !nt && g === yt || (gt = !1), yt = g, typeof g == "string" && (pt = y.parse(g), pt ? (g = pt, it = !0) : st = !0), w.push(g);
                                                if (!gt) {
                                                    for (ut = w[b - 1], d = 0; d < b - 1; d++) nt ? h(w[d], ut, rt) : !isNaN(w[d]) || isNaN(ut) || st || it || (w[d] = ut);
                                                    return nt && h(at(n._target, a), ut, rt), ht = 0, wt = 0, it && (ot = [0, 0, 0, 0]), ti = function(n, t) {
                                                        var i, u, r;
                                                        if (t < 0) i = 0;
                                                        else if (t < wt) {
                                                            for (ni = Math.min(ht + 1, b - 1), i = ni; i >= 0; i--)
                                                                if (tt[i] <= t) break;
                                                            i = Math.min(i, b - 2)
                                                        } else {
                                                            for (i = ht; i < b; i++)
                                                                if (tt[i] > t) break;
                                                            i = Math.min(i - 1, b - 2)
                                                        }
                                                        if (ht = i, wt = t, u = tt[i + 1] - tt[i], u !== 0)
                                                            if (p = (t - tt[i]) / u, ii)
                                                                if (ft = w[i], ct = w[i === 0 ? i : i - 1], et = w[i > b - 2 ? b - 1 : i + 1], lt = w[i > b - 3 ? b - 1 : i + 2], nt) c(ct, ft, et, lt, p, p * p, p * p * p, at(n, a), rt);
                                                                else {
                                                                    if (it) r = c(ct, ft, et, lt, p, p * p, p * p * p, ot, 1), r = l(ot);
                                                                    else {
                                                                        if (st) return o(ft, et, p);
                                                                        r = e(ct, ft, et, lt, p, p * p, p * p * p)
                                                                    }
                                                                    kt(n, a, r)
                                                                }
                                                        else if (nt) s(w[i], w[i + 1], p, at(n, a), rt);
                                                        else {
                                                            if (it) s(w[i], w[i + 1], p, ot, 1), r = l(ot);
                                                            else {
                                                                if (st) return o(w[i], w[i + 1], p);
                                                                r = f(w[i], w[i + 1], p)
                                                            }
                                                            kt(n, a, r)
                                                        }
                                                    }, bt = new v({
                                                        target: n._target,
                                                        life: vt,
                                                        loop: n._loop,
                                                        delay: n._delay,
                                                        onframe: ti,
                                                        ondestroy: i
                                                    }), t && t !== "spline" && (bt.easing = t), bt
                                                }
                                            }
                                        }
                                        var v = i(37),
                                            y = i(39),
                                            p = i(4),
                                            r = p.isArrayLike,
                                            u = Array.prototype.slice,
                                            a = function(n, t, i, r) {
                                                this._tracks = {};
                                                this._target = n;
                                                this._loop = t || !1;
                                                this._getter = i || w;
                                                this._setter = r || b;
                                                this._clipCount = 0;
                                                this._delay = 0;
                                                this._doneList = [];
                                                this._onframeList = [];
                                                this._clipList = []
                                            };
                                        a.prototype = {
                                            when: function(n, t) {
                                                var r = this._tracks,
                                                    i, u;
                                                for (i in t)
                                                    if (t.hasOwnProperty(i)) {
                                                        if (!r[i]) {
                                                            if (r[i] = [], u = this._getter(this._target, i), u == null) continue;
                                                            n !== 0 && r[i].push({
                                                                time: 0,
                                                                value: d(u)
                                                            })
                                                        }
                                                        r[i].push({
                                                            time: n,
                                                            value: t[i]
                                                        })
                                                    }
                                                return this
                                            },
                                            during: function(n) {
                                                return this._onframeList.push(n), this
                                            },
                                            _doneCallback: function() {
                                                var t, i, n;
                                                for (this._tracks = {}, this._clipList.length = 0, t = this._doneList, i = t.length, n = 0; n < i; n++) t[n].call(this)
                                            },
                                            start: function(n) {
                                                var f = this,
                                                    i = 0,
                                                    o = function() {
                                                        i--;
                                                        i || f._doneCallback()
                                                    },
                                                    r, u, t, e;
                                                for (u in this._tracks) this._tracks.hasOwnProperty(u) && (t = g(this, n, o, this._tracks[u], u), t && (this._clipList.push(t), i++, this.animation && this.animation.addClip(t), r = t));
                                                return r && (e = r.onframe, r.onframe = function(n, t) {
                                                    e(n, t);
                                                    for (var i = 0; i < f._onframeList.length; i++) f._onframeList[i](n, t)
                                                }), i || this._doneCallback(), this
                                            },
                                            stop: function(n) {
                                                for (var r, t = this._clipList, u = this.animation, i = 0; i < t.length; i++) {
                                                    if (r = t[i], n) r.onframe(this._target, 1);
                                                    u && u.removeClip(r)
                                                }
                                                t.length = 0
                                            },
                                            delay: function(n) {
                                                return this._delay = n, this
                                            },
                                            done: function(n) {
                                                return n && this._doneList.push(n), this
                                            },
                                            getClips: function() {
                                                return this._clipList
                                            }
                                        };
                                        n.exports = a
                                    }, function(n, t, i) {
                                        function r(n) {
                                            this._target = n.target;
                                            this._life = n.life || 1e3;
                                            this._delay = n.delay || 0;
                                            this._initialized = !1;
                                            this.loop = n.loop == null ? !1 : n.loop;
                                            this.gap = n.gap || 0;
                                            this.easing = n.easing || "Linear";
                                            this.onframe = n.onframe;
                                            this.ondestroy = n.ondestroy;
                                            this.onrestart = n.onrestart
                                        }
                                        var u = i(38);
                                        r.prototype = {
                                            constructor: r,
                                            step: function(n) {
                                                var t;
                                                if (this._initialized || (this._startTime = n + this._delay, this._initialized = !0), t = (n - this._startTime) / this._life, !(t < 0)) {
                                                    t = Math.min(t, 1);
                                                    var i = this.easing,
                                                        r = typeof i == "string" ? u[i] : i,
                                                        f = typeof r == "function" ? r(t) : t;
                                                    return (this.fire("frame", f), t == 1) ? this.loop ? (this.restart(n), "restart") : (this._needsRemove = !0, "destroy") : null
                                                }
                                            },
                                            restart: function(n) {
                                                var t = (n - this._startTime) % this._life;
                                                this._startTime = n - t + this.gap;
                                                this._needsRemove = !1
                                            },
                                            fire: function(n, t) {
                                                n = "on" + n;
                                                this[n] && this[n](this._target, t)
                                            }
                                        };
                                        n.exports = r
                                    }, function(n) {
                                        var t = {
                                            linear: function(n) {
                                                return n
                                            },
                                            quadraticIn: function(n) {
                                                return n * n
                                            },
                                            quadraticOut: function(n) {
                                                return n * (2 - n)
                                            },
                                            quadraticInOut: function(n) {
                                                return (n *= 2) < 1 ? .5 * n * n : -.5 * (--n * (n - 2) - 1)
                                            },
                                            cubicIn: function(n) {
                                                return n * n * n
                                            },
                                            cubicOut: function(n) {
                                                return --n * n * n + 1
                                            },
                                            cubicInOut: function(n) {
                                                return (n *= 2) < 1 ? .5 * n * n * n : .5 * ((n -= 2) * n * n + 2)
                                            },
                                            quarticIn: function(n) {
                                                return n * n * n * n
                                            },
                                            quarticOut: function(n) {
                                                return 1 - --n * n * n * n
                                            },
                                            quarticInOut: function(n) {
                                                return (n *= 2) < 1 ? .5 * n * n * n * n : -.5 * ((n -= 2) * n * n * n - 2)
                                            },
                                            quinticIn: function(n) {
                                                return n * n * n * n * n
                                            },
                                            quinticOut: function(n) {
                                                return --n * n * n * n * n + 1
                                            },
                                            quinticInOut: function(n) {
                                                return (n *= 2) < 1 ? .5 * n * n * n * n * n : .5 * ((n -= 2) * n * n * n * n + 2)
                                            },
                                            sinusoidalIn: function(n) {
                                                return 1 - Math.cos(n * Math.PI / 2)
                                            },
                                            sinusoidalOut: function(n) {
                                                return Math.sin(n * Math.PI / 2)
                                            },
                                            sinusoidalInOut: function(n) {
                                                return .5 * (1 - Math.cos(Math.PI * n))
                                            },
                                            exponentialIn: function(n) {
                                                return n === 0 ? 0 : Math.pow(1024, n - 1)
                                            },
                                            exponentialOut: function(n) {
                                                return n === 1 ? 1 : 1 - Math.pow(2, -10 * n)
                                            },
                                            exponentialInOut: function(n) {
                                                return n === 0 ? 0 : n === 1 ? 1 : (n *= 2) < 1 ? .5 * Math.pow(1024, n - 1) : .5 * (-Math.pow(2, -10 * (n - 1)) + 2)
                                            },
                                            circularIn: function(n) {
                                                return 1 - Math.sqrt(1 - n * n)
                                            },
                                            circularOut: function(n) {
                                                return Math.sqrt(1 - --n * n)
                                            },
                                            circularInOut: function(n) {
                                                return (n *= 2) < 1 ? -.5 * (Math.sqrt(1 - n * n) - 1) : .5 * (Math.sqrt(1 - (n -= 2) * n) + 1)
                                            },
                                            elasticIn: function(n) {
                                                var i, t = .1,
                                                    r = .4;
                                                return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, i = r / 4) : i = r * Math.asin(1 / t) / (2 * Math.PI), -(t * Math.pow(2, 10 * (n -= 1)) * Math.sin((n - i) * 2 * Math.PI / r)))
                                            },
                                            elasticOut: function(n) {
                                                var i, t = .1,
                                                    r = .4;
                                                return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, i = r / 4) : i = r * Math.asin(1 / t) / (2 * Math.PI), t * Math.pow(2, -10 * n) * Math.sin((n - i) * 2 * Math.PI / r) + 1)
                                            },
                                            elasticInOut: function(n) {
                                                var i, t = .1,
                                                    r = .4;
                                                return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, i = r / 4) : i = r * Math.asin(1 / t) / (2 * Math.PI), (n *= 2) < 1) ? -.5 * t * Math.pow(2, 10 * (n -= 1)) * Math.sin((n - i) * 2 * Math.PI / r) : t * Math.pow(2, -10 * (n -= 1)) * Math.sin((n - i) * 2 * Math.PI / r) * .5 + 1
                                            },
                                            backIn: function(n) {
                                                var t = 1.70158;
                                                return n * n * ((t + 1) * n - t)
                                            },
                                            backOut: function(n) {
                                                var t = 1.70158;
                                                return --n * n * ((t + 1) * n + t) + 1
                                            },
                                            backInOut: function(n) {
                                                var t = 1.70158 * 1.525;
                                                return (n *= 2) < 1 ? .5 * n * n * ((t + 1) * n - t) : .5 * ((n -= 2) * n * ((t + 1) * n + t) + 2)
                                            },
                                            bounceIn: function(n) {
                                                return 1 - t.bounceOut(1 - n)
                                            },
                                            bounceOut: function(n) {
                                                return n < 1 / 2.75 ? 7.5625 * n * n : n < 2 / 2.75 ? 7.5625 * (n -= 1.5 / 2.75) * n + .75 : n < 2.5 / 2.75 ? 7.5625 * (n -= 2.25 / 2.75) * n + .9375 : 7.5625 * (n -= 2.625 / 2.75) * n + .984375
                                            },
                                            bounceInOut: function(n) {
                                                return n < .5 ? t.bounceIn(n * 2) * .5 : t.bounceOut(n * 2 - 1) * .5 + .5
                                            }
                                        };
                                        n.exports = t
                                    }, function(n) {
                                        function t(n) {
                                            return n = Math.round(n), n < 0 ? 0 : n > 255 ? 255 : n
                                        }

                                        function l(n) {
                                            return n = Math.round(n), n < 0 ? 0 : n > 360 ? 360 : n
                                        }

                                        function e(n) {
                                            return n < 0 ? 0 : n > 1 ? 1 : n
                                        }

                                        function o(n) {
                                            return n.length && n.charAt(n.length - 1) === "%" ? t(parseFloat(n) / 100 * 255) : t(parseInt(n, 10))
                                        }

                                        function u(n) {
                                            return n.length && n.charAt(n.length - 1) === "%" ? e(parseFloat(n) / 100) : e(parseFloat(n))
                                        }

                                        function s(n, t, i) {
                                            return (i < 0 ? i += 1 : i > 1 && (i -= 1), i * 6 < 1) ? n + (t - n) * i * 6 : i * 2 < 1 ? t : i * 3 < 2 ? n + (t - n) * (2 / 3 - i) * 6 : n
                                        }

                                        function i(n, t, i) {
                                            return n + (t - n) * i
                                        }

                                        function r(n) {
                                            var i, t, f, e;
                                            if (n) {
                                                if (n = n + "", i = n.replace(/ /g, "").toLowerCase(), i in c) return c[i].slice();
                                                if (i.charAt(0) === "#") return i.length === 4 ? (t = parseInt(i.substr(1), 16), !(t >= 0 && t <= 4095)) ? void 0 : [(t & 3840) >> 4 | (t & 3840) >> 8, t & 240 | (t & 240) >> 4, t & 15 | (t & 15) << 4, 1] : i.length === 7 ? (t = parseInt(i.substr(1), 16), !(t >= 0 && t <= 16777215)) ? void 0 : [(t & 16711680) >> 16, (t & 65280) >> 8, t & 255, 1] : void 0;
                                                if (f = i.indexOf("("), e = i.indexOf(")"), f !== -1 && e + 1 === i.length) {
                                                    var l = i.substr(0, f),
                                                        r = i.substr(f + 1, e - (f + 1)).split(","),
                                                        s = 1;
                                                    switch (l) {
                                                        case "rgba":
                                                            if (r.length !== 4) return;
                                                            s = u(r.pop());
                                                        case "rgb":
                                                            return r.length !== 3 ? void 0 : [o(r[0]), o(r[1]), o(r[2]), s];
                                                        case "hsla":
                                                            return r.length !== 4 ? void 0 : (r[3] = u(r[3]), h(r));
                                                        case "hsl":
                                                            return r.length !== 3 ? void 0 : h(r);
                                                        default:
                                                            return
                                                    }
                                                }
                                                return
                                            }
                                        }

                                        function h(n) {
                                            var f = (parseFloat(n[0]) % 360 + 360) % 360 / 360,
                                                e = u(n[1]),
                                                i = u(n[2]),
                                                r = i <= .5 ? i * (e + 1) : i + e - i * e,
                                                o = i * 2 - r,
                                                h = [t(s(o, r, f + 1 / 3) * 255), t(s(o, r, f) * 255), t(s(o, r, f - 1 / 3) * 255)];
                                            return n.length === 4 && (h[3] = n[3]), h
                                        }

                                        function a(n) {
                                            var h;
                                            if (n) {
                                                var u = n[0] / 255,
                                                    f = n[1] / 255,
                                                    e = n[2] / 255,
                                                    o = Math.min(u, f, e),
                                                    t = Math.max(u, f, e),
                                                    i = t - o,
                                                    c = (t + o) / 2,
                                                    r, s;
                                                if (i === 0) r = 0, s = 0;
                                                else {
                                                    s = c < .5 ? i / (t + o) : i / (2 - t - o);
                                                    var l = ((t - u) / 6 + i / 2) / i,
                                                        a = ((t - f) / 6 + i / 2) / i,
                                                        v = ((t - e) / 6 + i / 2) / i;
                                                    u === t ? r = v - a : f === t ? r = 1 / 3 + l - v : e === t && (r = 2 / 3 + a - l);
                                                    r < 0 && (r += 1);
                                                    r > 1 && (r -= 1)
                                                }
                                                return h = [r * 360, s, c], n[3] != null && h.push(n[3]), h
                                            }
                                        }

                                        function v(n, t) {
                                            var i = r(n),
                                                u;
                                            if (i) {
                                                for (u = 0; u < 3; u++) i[u] = t < 0 ? i[u] * (1 - t) | 0 : (255 - i[u]) * t + i[u] | 0;
                                                return f(i, i.length === 4 ? "rgba" : "rgb")
                                            }
                                        }

                                        function y(n) {
                                            var t = r(n);
                                            if (t) return (16777216 + (t[0] << 16) + (t[1] << 8) + +t[2]).toString(16).slice(1)
                                        }

                                        function p(n, r, u) {
                                            if (r && r.length && n >= 0 && n <= 1) {
                                                u = u || [0, 0, 0, 0];
                                                var s = n * (r.length - 1),
                                                    h = Math.floor(s),
                                                    c = Math.ceil(s),
                                                    f = r[h],
                                                    e = r[c],
                                                    o = s - h;
                                                return u[0] = t(i(f[0], e[0], o)), u[1] = t(i(f[1], e[1], o)), u[2] = t(i(f[2], e[2], o)), u[3] = t(i(f[3], e[3], o)), u
                                            }
                                        }

                                        function w(n, u, o) {
                                            if (u && u.length && n >= 0 && n <= 1) {
                                                var s = n * (u.length - 1),
                                                    a = Math.floor(s),
                                                    v = Math.ceil(s),
                                                    h = r(u[a]),
                                                    c = r(u[v]),
                                                    l = s - a,
                                                    y = f([t(i(h[0], c[0], l)), t(i(h[1], c[1], l)), t(i(h[2], c[2], l)), e(i(h[3], c[3], l))], "rgba");
                                                return o ? {
                                                    color: y,
                                                    leftIndex: a,
                                                    rightIndex: v,
                                                    value: s
                                                } : y
                                            }
                                        }

                                        function b(n, t, i, e) {
                                            return n = r(n), n ? (n = a(n), t != null && (n[0] = l(t)), i != null && (n[1] = u(i)), e != null && (n[2] = u(e)), f(h(n), "rgba")) : void 0
                                        }

                                        function k(n, t) {
                                            return n = r(n), n && t != null ? (n[3] = e(t), f(n, "rgba")) : void 0
                                        }

                                        function f(n, t) {
                                            var i = n[0] + "," + n[1] + "," + n[2];
                                            return (t === "rgba" || t === "hsva" || t === "hsla") && (i += "," + n[3]), t + "(" + i + ")"
                                        }
                                        var c = {
                                            transparent: [0, 0, 0, 0],
                                            aliceblue: [240, 248, 255, 1],
                                            antiquewhite: [250, 235, 215, 1],
                                            aqua: [0, 255, 255, 1],
                                            aquamarine: [127, 255, 212, 1],
                                            azure: [240, 255, 255, 1],
                                            beige: [245, 245, 220, 1],
                                            bisque: [255, 228, 196, 1],
                                            black: [0, 0, 0, 1],
                                            blanchedalmond: [255, 235, 205, 1],
                                            blue: [0, 0, 255, 1],
                                            blueviolet: [138, 43, 226, 1],
                                            brown: [165, 42, 42, 1],
                                            burlywood: [222, 184, 135, 1],
                                            cadetblue: [95, 158, 160, 1],
                                            chartreuse: [127, 255, 0, 1],
                                            chocolate: [210, 105, 30, 1],
                                            coral: [255, 127, 80, 1],
                                            cornflowerblue: [100, 149, 237, 1],
                                            cornsilk: [255, 248, 220, 1],
                                            crimson: [220, 20, 60, 1],
                                            cyan: [0, 255, 255, 1],
                                            darkblue: [0, 0, 139, 1],
                                            darkcyan: [0, 139, 139, 1],
                                            darkgoldenrod: [184, 134, 11, 1],
                                            darkgray: [169, 169, 169, 1],
                                            darkgreen: [0, 100, 0, 1],
                                            darkgrey: [169, 169, 169, 1],
                                            darkkhaki: [189, 183, 107, 1],
                                            darkmagenta: [139, 0, 139, 1],
                                            darkolivegreen: [85, 107, 47, 1],
                                            darkorange: [255, 140, 0, 1],
                                            darkorchid: [153, 50, 204, 1],
                                            darkred: [139, 0, 0, 1],
                                            darksalmon: [233, 150, 122, 1],
                                            darkseagreen: [143, 188, 143, 1],
                                            darkslateblue: [72, 61, 139, 1],
                                            darkslategray: [47, 79, 79, 1],
                                            darkslategrey: [47, 79, 79, 1],
                                            darkturquoise: [0, 206, 209, 1],
                                            darkviolet: [148, 0, 211, 1],
                                            deeppink: [255, 20, 147, 1],
                                            deepskyblue: [0, 191, 255, 1],
                                            dimgray: [105, 105, 105, 1],
                                            dimgrey: [105, 105, 105, 1],
                                            dodgerblue: [30, 144, 255, 1],
                                            firebrick: [178, 34, 34, 1],
                                            floralwhite: [255, 250, 240, 1],
                                            forestgreen: [34, 139, 34, 1],
                                            fuchsia: [255, 0, 255, 1],
                                            gainsboro: [220, 220, 220, 1],
                                            ghostwhite: [248, 248, 255, 1],
                                            gold: [255, 215, 0, 1],
                                            goldenrod: [218, 165, 32, 1],
                                            gray: [128, 128, 128, 1],
                                            green: [0, 128, 0, 1],
                                            greenyellow: [173, 255, 47, 1],
                                            grey: [128, 128, 128, 1],
                                            honeydew: [240, 255, 240, 1],
                                            hotpink: [255, 105, 180, 1],
                                            indianred: [205, 92, 92, 1],
                                            indigo: [75, 0, 130, 1],
                                            ivory: [255, 255, 240, 1],
                                            khaki: [240, 230, 140, 1],
                                            lavender: [230, 230, 250, 1],
                                            lavenderblush: [255, 240, 245, 1],
                                            lawngreen: [124, 252, 0, 1],
                                            lemonchiffon: [255, 250, 205, 1],
                                            lightblue: [173, 216, 230, 1],
                                            lightcoral: [240, 128, 128, 1],
                                            lightcyan: [224, 255, 255, 1],
                                            lightgoldenrodyellow: [250, 250, 210, 1],
                                            lightgray: [211, 211, 211, 1],
                                            lightgreen: [144, 238, 144, 1],
                                            lightgrey: [211, 211, 211, 1],
                                            lightpink: [255, 182, 193, 1],
                                            lightsalmon: [255, 160, 122, 1],
                                            lightseagreen: [32, 178, 170, 1],
                                            lightskyblue: [135, 206, 250, 1],
                                            lightslategray: [119, 136, 153, 1],
                                            lightslategrey: [119, 136, 153, 1],
                                            lightsteelblue: [176, 196, 222, 1],
                                            lightyellow: [255, 255, 224, 1],
                                            lime: [0, 255, 0, 1],
                                            limegreen: [50, 205, 50, 1],
                                            linen: [250, 240, 230, 1],
                                            magenta: [255, 0, 255, 1],
                                            maroon: [128, 0, 0, 1],
                                            mediumaquamarine: [102, 205, 170, 1],
                                            mediumblue: [0, 0, 205, 1],
                                            mediumorchid: [186, 85, 211, 1],
                                            mediumpurple: [147, 112, 219, 1],
                                            mediumseagreen: [60, 179, 113, 1],
                                            mediumslateblue: [123, 104, 238, 1],
                                            mediumspringgreen: [0, 250, 154, 1],
                                            mediumturquoise: [72, 209, 204, 1],
                                            mediumvioletred: [199, 21, 133, 1],
                                            midnightblue: [25, 25, 112, 1],
                                            mintcream: [245, 255, 250, 1],
                                            mistyrose: [255, 228, 225, 1],
                                            moccasin: [255, 228, 181, 1],
                                            navajowhite: [255, 222, 173, 1],
                                            navy: [0, 0, 128, 1],
                                            oldlace: [253, 245, 230, 1],
                                            olive: [128, 128, 0, 1],
                                            olivedrab: [107, 142, 35, 1],
                                            orange: [255, 165, 0, 1],
                                            orangered: [255, 69, 0, 1],
                                            orchid: [218, 112, 214, 1],
                                            palegoldenrod: [238, 232, 170, 1],
                                            palegreen: [152, 251, 152, 1],
                                            paleturquoise: [175, 238, 238, 1],
                                            palevioletred: [219, 112, 147, 1],
                                            papayawhip: [255, 239, 213, 1],
                                            peachpuff: [255, 218, 185, 1],
                                            peru: [205, 133, 63, 1],
                                            pink: [255, 192, 203, 1],
                                            plum: [221, 160, 221, 1],
                                            powderblue: [176, 224, 230, 1],
                                            purple: [128, 0, 128, 1],
                                            red: [255, 0, 0, 1],
                                            rosybrown: [188, 143, 143, 1],
                                            royalblue: [65, 105, 225, 1],
                                            saddlebrown: [139, 69, 19, 1],
                                            salmon: [250, 128, 114, 1],
                                            sandybrown: [244, 164, 96, 1],
                                            seagreen: [46, 139, 87, 1],
                                            seashell: [255, 245, 238, 1],
                                            sienna: [160, 82, 45, 1],
                                            silver: [192, 192, 192, 1],
                                            skyblue: [135, 206, 235, 1],
                                            slateblue: [106, 90, 205, 1],
                                            slategray: [112, 128, 144, 1],
                                            slategrey: [112, 128, 144, 1],
                                            snow: [255, 250, 250, 1],
                                            springgreen: [0, 255, 127, 1],
                                            steelblue: [70, 130, 180, 1],
                                            tan: [210, 180, 140, 1],
                                            teal: [0, 128, 128, 1],
                                            thistle: [216, 191, 216, 1],
                                            tomato: [255, 99, 71, 1],
                                            turquoise: [64, 224, 208, 1],
                                            violet: [238, 130, 238, 1],
                                            wheat: [245, 222, 179, 1],
                                            white: [255, 255, 255, 1],
                                            whitesmoke: [245, 245, 245, 1],
                                            yellow: [255, 255, 0, 1],
                                            yellowgreen: [154, 205, 50, 1]
                                        };
                                        n.exports = {
                                            parse: r,
                                            lift: v,
                                            toHex: y,
                                            fastMapToColor: p,
                                            mapToColor: w,
                                            modifyHSL: b,
                                            modifyAlpha: k,
                                            stringify: f
                                        }
                                    }, function(n, t, i) {
                                        var r = i(41);
                                        n.exports = function() {
                                            var n;
                                            if (r.debugMode !== 0)
                                                if (r.debugMode == 1)
                                                    for (n in arguments) throw new Error(arguments[n]);
                                                else if (r.debugMode > 1)
                                                for (n in arguments) console.log(arguments[n])
                                        }
                                    }, function(n) {
                                        var t = 1,
                                            i;
                                        typeof window != "undefined" && (t = Math.max(window.devicePixelRatio || 1, 1));
                                        i = {
                                            debugMode: 0,
                                            devicePixelRatio: t
                                        };
                                        n.exports = i
                                    }, function(n, t, i) {
                                        function r() {
                                            this.group = new h;
                                            this.uid = c.getUID("viewChart")
                                        }

                                        function f(n, t) {
                                            if (n && (n.trigger(t), n.type === "group"))
                                                for (var i = 0; i < n.childCount(); i++) f(n.childAt(i), t)
                                        }

                                        function s(n, t, i) {
                                            var r = o.queryDataIndex(n, t);
                                            r != null ? l.each(o.normalizeToArray(r), function(t) {
                                                f(n.getItemGraphicEl(t), i)
                                            }) : n.eachItemGraphicEl(function(n) {
                                                f(n, i)
                                            })
                                        }
                                        var h = i(30),
                                            c = i(20),
                                            e = i(13),
                                            o = i(5),
                                            l = i(4),
                                            u;
                                        r.prototype = {
                                            type: "chart",
                                            init: function() {},
                                            render: function() {},
                                            highlight: function(n, t, i, r) {
                                                s(n.getData(), r, "emphasis")
                                            },
                                            downplay: function(n, t, i, r) {
                                                s(n.getData(), r, "normal")
                                            },
                                            remove: function() {
                                                this.group.removeAll()
                                            },
                                            dispose: function() {}
                                        };
                                        u = r.prototype;
                                        u.updateView = u.updateLayout = u.updateVisual = function(n, t, i, r) {
                                            this.render(n, t, i, r)
                                        };
                                        e.enableClassExtend(r, ["dispose"]);
                                        e.enableClassManagement(r, {
                                            registerWhenExtend: !0
                                        });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function h(n) {
                                            return n != null && n != "none"
                                        }

                                        function c(n) {
                                            return typeof n == "string" ? d.lift(n, -.1) : n
                                        }

                                        function l(n) {
                                            var r, i;
                                            if (n.__hoverStlDirty) {
                                                var u = n.style.stroke,
                                                    f = n.style.fill,
                                                    t = n.__hoverStl;
                                                t.fill = t.fill || (h(f) ? c(f) : null);
                                                t.stroke = t.stroke || (h(u) ? c(u) : null);
                                                r = {};
                                                for (i in t) t.hasOwnProperty(i) && (r[i] = n.style[i]);
                                                n.__normalStl = r;
                                                n.__hoverStlDirty = !1
                                            }
                                        }

                                        function a(n) {
                                            n.__isHover || (l(n), n.useHoverLayer ? n.__zr && n.__zr.addHover(n, n.__hoverStl) : (n.setStyle(n.__hoverStl), n.z2 += 1), n.__isHover = !0)
                                        }

                                        function v(n) {
                                            if (n.__isHover) {
                                                var t = n.__normalStl;
                                                n.useHoverLayer ? n.__zr && n.__zr.removeHover(n) : (t && n.setStyle(t), n.z2 -= 1);
                                                n.__isHover = !1
                                            }
                                        }

                                        function y(n) {
                                            n.type === "group" ? n.traverse(function(n) {
                                                n.type !== "group" && a(n)
                                            }) : a(n)
                                        }

                                        function p(n) {
                                            n.type === "group" ? n.traverse(function(n) {
                                                n.type !== "group" && v(n)
                                            }) : v(n)
                                        }

                                        function w(n, t) {
                                            n.__hoverStl = n.hoverStyle || t || {};
                                            n.__hoverStlDirty = !0;
                                            n.__isHover && l(n)
                                        }

                                        function g() {
                                            this.__isEmphasis || y(this)
                                        }

                                        function nt() {
                                            this.__isEmphasis || p(this)
                                        }

                                        function tt() {
                                            this.__isEmphasis = !0;
                                            y(this)
                                        }

                                        function it() {
                                            this.__isEmphasis = !1;
                                            p(this)
                                        }

                                        function b(n, t, i, r, u, f) {
                                            var s;
                                            if (typeof u == "function" && (f = u, u = null), s = r && (r.ifEnableAnimation ? r.ifEnableAnimation() : r.getShallow("animation")), s) {
                                                var o = n ? "Update" : "",
                                                    h = r && r.getShallow("animationDuration" + o),
                                                    c = r && r.getShallow("animationEasing" + o),
                                                    e = r && r.getShallow("animationDelay" + o);
                                                typeof e == "function" && (e = e(u));
                                                h > 0 ? t.animateTo(i, h, e || 0, c, f) : (t.attr(i), f && f())
                                            } else t.attr(i), f && f()
                                        }
                                        var o = i(4),
                                            f = i(44),
                                            u = Math.round,
                                            k = i(45),
                                            d = i(39),
                                            e = i(11),
                                            s = i(10),
                                            rt = i(61),
                                            r = {};
                                        r.Group = i(30);
                                        r.Image = i(62);
                                        r.Text = i(64);
                                        r.Circle = i(65);
                                        r.Sector = i(66);
                                        r.Ring = i(67);
                                        r.Polygon = i(68);
                                        r.Polyline = i(72);
                                        r.Rect = i(73);
                                        r.Line = i(75);
                                        r.BezierCurve = i(76);
                                        r.Arc = i(77);
                                        r.CompoundPath = i(78);
                                        r.LinearGradient = i(79);
                                        r.RadialGradient = i(80);
                                        r.BoundingRect = i(9);
                                        r.extendShape = function(n) {
                                            return k.extend(n)
                                        };
                                        r.extendPath = function(n, t) {
                                            return f.extendFromString(n, t)
                                        };
                                        r.makePath = function(n, t, i, r) {
                                            var o = f.createFromString(n, t),
                                                h = o.getBoundingRect(),
                                                s, u, e, c, l;
                                            return i && (s = h.width / h.height, r === "center" && (u = i.height * s, u <= i.width ? e = i.height : (u = i.width, e = u / s), c = i.x + i.width / 2, l = i.y + i.height / 2, i.x = c - u / 2, i.y = l - e / 2, i.width = u, i.height = e), this.resizePath(o, i)), o
                                        };
                                        r.mergePath = f.mergePath;
                                        r.resizePath = function(n, t) {
                                            if (n.applyTransform) {
                                                var i = n.getBoundingRect(),
                                                    r = i.calculateTransform(t);
                                                n.applyTransform(r)
                                            }
                                        };
                                        r.subPixelOptimizeLine = function(n) {
                                            var i = r.subPixelOptimize,
                                                t = n.shape,
                                                f = n.style.lineWidth;
                                            return u(t.x1 * 2) === u(t.x2 * 2) && (t.x1 = t.x2 = i(t.x1, f, !0)), u(t.y1 * 2) === u(t.y2 * 2) && (t.y1 = t.y2 = i(t.y1, f, !0)), n
                                        };
                                        r.subPixelOptimizeRect = function(n) {
                                            var i = r.subPixelOptimize,
                                                t = n.shape,
                                                u = n.style.lineWidth,
                                                o = t.x,
                                                s = t.y,
                                                f = t.width,
                                                e = t.height;
                                            return t.x = i(t.x, u, !0), t.y = i(t.y, u, !0), t.width = Math.max(i(o + f, u, !1) - t.x, f === 0 ? 0 : 1), t.height = Math.max(i(s + e, u, !1) - t.y, e === 0 ? 0 : 1), n
                                        };
                                        r.subPixelOptimize = function(n, t, i) {
                                            var r = u(n * 2);
                                            return (r + u(t)) % 2 == 0 ? r / 2 : (r + (i ? 1 : -1)) / 2
                                        };
                                        r.setHoverStyle = function(n, t) {
                                            n.type === "group" ? n.traverse(function(n) {
                                                n.type !== "group" && w(n, t)
                                            }) : w(n, t);
                                            n.on("mouseover", g).on("mouseout", nt);
                                            n.on("emphasis", tt).on("normal", it)
                                        };
                                        r.setText = function(n, t, i) {
                                            var r = t.getShallow("position") || "inside",
                                                f = r.indexOf("inside") >= 0 ? "white" : i,
                                                u = t.getModel("textStyle");
                                            o.extend(n, {
                                                textDistance: t.getShallow("distance") || 5,
                                                textFont: u.getFont(),
                                                textPosition: r,
                                                textFill: u.getTextColor() || f
                                            })
                                        };
                                        r.updateProps = function(n, t, i, r, u) {
                                            b(!0, n, t, i, r, u)
                                        };
                                        r.initProps = function(n, t, i, r, u) {
                                            b(!1, n, t, i, r, u)
                                        };
                                        r.getTransform = function(n, t) {
                                            for (var i = e.identity([]); n && n !== t;) e.mul(i, n.getLocalTransform(), i), n = n.parent;
                                            return i
                                        };
                                        r.applyTransform = function(n, t, i) {
                                            return i && (t = e.invert([], t)), s.applyTransform([], n, t)
                                        };
                                        r.transformDirection = function(n, t, i) {
                                            var f = t[4] === 0 || t[5] === 0 || t[0] === 0 ? 1 : Math.abs(2 * t[4] / t[0]),
                                                e = t[4] === 0 || t[5] === 0 || t[2] === 0 ? 1 : Math.abs(2 * t[4] / t[2]),
                                                u = [n === "left" ? -f : n === "right" ? f : 0, n === "top" ? -e : n === "bottom" ? e : 0];
                                            return u = r.applyTransform(u, t, i), Math.abs(u[0]) > Math.abs(u[1]) ? u[0] > 0 ? "right" : "left" : u[1] > 0 ? "bottom" : "top"
                                        };
                                        r.groupTransition = function(n, t, i) {
                                            function f(n) {
                                                var t = {};
                                                return n.traverse(function(n) {
                                                    !n.isGroup && n.anid && (t[n.anid] = n)
                                                }), t
                                            }

                                            function u(n) {
                                                var t = {
                                                    position: s.clone(n.position),
                                                    rotation: n.rotation
                                                };
                                                return n.shape && (t.shape = o.extend({}, n.shape)), t
                                            }
                                            if (n && t) {
                                                var e = f(n);
                                                t.traverse(function(n) {
                                                    var t, f;
                                                    !n.isGroup && n.anid && (t = e[n.anid], t && (f = u(n), n.attr(u(t)), r.updateProps(n, f, i, n.dataIndex)))
                                                })
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function y(n, t, i, e, o, c, l, a, y, p, w) {
                                            var d = y * (f / 180),
                                                b = u(d) * (n - i) / 2 + r(d) * (t - e) / 2,
                                                k = -1 * r(d) * (n - i) / 2 + u(d) * (t - e) / 2,
                                                it = b * b / (l * l) + k * k / (a * a);
                                            it > 1 && (l *= s(it), a *= s(it));
                                            var ft = (o === c ? -1 : 1) * s((l * l * a * a - l * l * k * k - a * a * b * b) / (l * l * k * k + a * a * b * b)) || 0,
                                                nt = ft * l * k / a,
                                                tt = ft * -a * b / l,
                                                et = (n + i) / 2 + u(d) * nt - r(d) * tt,
                                                ot = (t + e) / 2 + r(d) * nt + u(d) * tt,
                                                st = v([1, 0], [(b - nt) / l, (k - tt) / a]),
                                                rt = [(b - nt) / l, (k - tt) / a],
                                                ut = [(-1 * b - nt) / l, (-1 * k - tt) / a],
                                                g = v(rt, ut);
                                            h(rt, ut) <= -1 && (g = f);
                                            h(rt, ut) >= 1 && (g = 0);
                                            c === 0 && g > 0 && (g = g - 2 * f);
                                            c === 1 && g < 0 && (g = g + 2 * f);
                                            w.addData(p, et, ot, l, a, st, g, d, c)
                                        }

                                        function b(n) {
                                            var nt, b, g, a, v, tt, it, rt, ut, ft, h, l, p, w;
                                            if (!n) return [];
                                            for (nt = n.replace(/-/g, " -").replace(/  /g, " ").replace(/ /g, ",").replace(/,,/g, ","), b = 0; b < o.length; b++) nt = nt.replace(new RegExp(o[b], "g"), "|" + o[b]);
                                            var et = nt.split("|"),
                                                r = 0,
                                                u = 0,
                                                e = new c,
                                                s = c.CMD,
                                                k;
                                            for (b = 1; b < et.length; b++) {
                                                var ot = et[b],
                                                    d = ot.charAt(0),
                                                    i = 0,
                                                    t = ot.slice(1).replace(/e,-/g, "e-").split(","),
                                                    f;
                                                for (t.length > 0 && t[0] === "" && t.shift(), g = 0; g < t.length; g++) t[g] = parseFloat(t[g]);
                                                while (i < t.length && !isNaN(t[i])) {
                                                    if (isNaN(t[0])) break;
                                                    h = r;
                                                    l = u;
                                                    switch (d) {
                                                        case "l":
                                                            r += t[i++];
                                                            u += t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "L":
                                                            r = t[i++];
                                                            u = t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "m":
                                                            r += t[i++];
                                                            u += t[i++];
                                                            f = s.M;
                                                            e.addData(f, r, u);
                                                            d = "l";
                                                            break;
                                                        case "M":
                                                            r = t[i++];
                                                            u = t[i++];
                                                            f = s.M;
                                                            e.addData(f, r, u);
                                                            d = "L";
                                                            break;
                                                        case "h":
                                                            r += t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "H":
                                                            r = t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "v":
                                                            u += t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "V":
                                                            u = t[i++];
                                                            f = s.L;
                                                            e.addData(f, r, u);
                                                            break;
                                                        case "C":
                                                            f = s.C;
                                                            e.addData(f, t[i++], t[i++], t[i++], t[i++], t[i++], t[i++]);
                                                            r = t[i - 2];
                                                            u = t[i - 1];
                                                            break;
                                                        case "c":
                                                            f = s.C;
                                                            e.addData(f, t[i++] + r, t[i++] + u, t[i++] + r, t[i++] + u, t[i++] + r, t[i++] + u);
                                                            r += t[i - 2];
                                                            u += t[i - 1];
                                                            break;
                                                        case "S":
                                                            a = r;
                                                            v = u;
                                                            p = e.len();
                                                            w = e.data;
                                                            k === s.C && (a += r - w[p - 4], v += u - w[p - 3]);
                                                            f = s.C;
                                                            h = t[i++];
                                                            l = t[i++];
                                                            r = t[i++];
                                                            u = t[i++];
                                                            e.addData(f, a, v, h, l, r, u);
                                                            break;
                                                        case "s":
                                                            a = r;
                                                            v = u;
                                                            p = e.len();
                                                            w = e.data;
                                                            k === s.C && (a += r - w[p - 4], v += u - w[p - 3]);
                                                            f = s.C;
                                                            h = r + t[i++];
                                                            l = u + t[i++];
                                                            r += t[i++];
                                                            u += t[i++];
                                                            e.addData(f, a, v, h, l, r, u);
                                                            break;
                                                        case "Q":
                                                            h = t[i++];
                                                            l = t[i++];
                                                            r = t[i++];
                                                            u = t[i++];
                                                            f = s.Q;
                                                            e.addData(f, h, l, r, u);
                                                            break;
                                                        case "q":
                                                            h = t[i++] + r;
                                                            l = t[i++] + u;
                                                            r += t[i++];
                                                            u += t[i++];
                                                            f = s.Q;
                                                            e.addData(f, h, l, r, u);
                                                            break;
                                                        case "T":
                                                            a = r;
                                                            v = u;
                                                            p = e.len();
                                                            w = e.data;
                                                            k === s.Q && (a += r - w[p - 4], v += u - w[p - 3]);
                                                            r = t[i++];
                                                            u = t[i++];
                                                            f = s.Q;
                                                            e.addData(f, a, v, r, u);
                                                            break;
                                                        case "t":
                                                            a = r;
                                                            v = u;
                                                            p = e.len();
                                                            w = e.data;
                                                            k === s.Q && (a += r - w[p - 4], v += u - w[p - 3]);
                                                            r += t[i++];
                                                            u += t[i++];
                                                            f = s.Q;
                                                            e.addData(f, a, v, r, u);
                                                            break;
                                                        case "A":
                                                            tt = t[i++];
                                                            it = t[i++];
                                                            rt = t[i++];
                                                            ut = t[i++];
                                                            ft = t[i++];
                                                            h = r;
                                                            l = u;
                                                            r = t[i++];
                                                            u = t[i++];
                                                            f = s.A;
                                                            y(h, l, r, u, ut, ft, tt, it, rt, f, e);
                                                            break;
                                                        case "a":
                                                            tt = t[i++];
                                                            it = t[i++];
                                                            rt = t[i++];
                                                            ut = t[i++];
                                                            ft = t[i++];
                                                            h = r;
                                                            l = u;
                                                            r += t[i++];
                                                            u += t[i++];
                                                            f = s.A;
                                                            y(h, l, r, u, ut, ft, tt, it, rt, f, e)
                                                    }
                                                }(d === "z" || d === "Z") && (f = s.Z, e.addData(f));
                                                k = f
                                            }
                                            return e.toStatic(), e
                                        }

                                        function p(n, t) {
                                            var r = b(n),
                                                i;
                                            return t = t || {}, t.buildPath = function(n) {
                                                n.setData(r.data);
                                                i && w(n, i);
                                                var t = n.getContext();
                                                t && n.rebuildPath(t)
                                            }, t.applyTransform = function(n) {
                                                i || (i = l.create());
                                                l.mul(i, n, i);
                                                this.dirty(!0)
                                            }, t
                                        }
                                        var e = i(45),
                                            c = i(49),
                                            w = i(60),
                                            l = i(11),
                                            o = ["m", "M", "l", "L", "v", "V", "h", "H", "z", "Z", "c", "C", "q", "Q", "t", "T", "s", "S", "a", "A"],
                                            s = Math.sqrt,
                                            r = Math.sin,
                                            u = Math.cos,
                                            f = Math.PI,
                                            a = function(n) {
                                                return Math.sqrt(n[0] * n[0] + n[1] * n[1])
                                            },
                                            h = function(n, t) {
                                                return (n[0] * t[0] + n[1] * t[1]) / (a(n) * a(t))
                                            },
                                            v = function(n, t) {
                                                return (n[0] * t[1] < n[1] * t[0] ? -1 : 1) * Math.acos(h(n, t))
                                            };
                                        n.exports = {
                                            createFromString: function(n, t) {
                                                return new e(p(n, t))
                                            },
                                            extendFromString: function(n, t) {
                                                return e.extend(p(n, t))
                                            },
                                            mergePath: function(n, t) {
                                                for (var i, u, f = [], o = n.length, r = 0; r < o; r++) i = n[r], i.__dirty && i.buildPath(i.path, i.shape, !0), f.push(i.path);
                                                return u = new e(t), u.buildPath = function(n) {
                                                    n.appendPath(f);
                                                    var t = n.getContext();
                                                    t && n.rebuildPath(t)
                                                }, u
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function r(n) {
                                            u.call(this, n);
                                            this.path = new h
                                        }
                                        var u = i(46),
                                            f = i(4),
                                            h = i(49),
                                            o = i(52),
                                            c = i(59),
                                            s = c.prototype.getCanvasPattern,
                                            e = Math.abs;
                                        r.prototype = {
                                            constructor: r,
                                            type: "path",
                                            __dirtyPath: !0,
                                            strokeContainThreshold: 5,
                                            brush: function(n, t) {
                                                var i = this.style,
                                                    r = this.path,
                                                    f = i.hasStroke(),
                                                    c = i.hasFill(),
                                                    e = i.fill,
                                                    o = i.stroke,
                                                    a = c && !!e.colorStops,
                                                    v = f && !!o.colorStops,
                                                    w = c && !!e.image,
                                                    b = f && !!o.image,
                                                    l;
                                                i.bind(n, this, t);
                                                this.setTransform(n);
                                                this.__dirty && (l = this.getBoundingRect(), a && (this._fillGradient = i.getGradient(n, e, l)), v && (this._strokeGradient = i.getGradient(n, o, l)));
                                                a ? n.fillStyle = this._fillGradient : w && (n.fillStyle = s.call(e, n));
                                                v ? n.strokeStyle = this._strokeGradient : b && (n.strokeStyle = s.call(o, n));
                                                var u = i.lineDash,
                                                    y = i.lineDashOffset,
                                                    h = !!n.setLineDash,
                                                    p = this.getGlobalScale();
                                                r.setScale(p[0], p[1]);
                                                this.__dirtyPath || u && !h && f ? (r = this.path.beginPath(n), u && !h && (r.setLineDash(u), r.setLineDashOffset(y)), this.buildPath(r, this.shape, !1), this.__dirtyPath = !1) : (n.beginPath(), this.path.rebuildPath(n));
                                                c && r.fill(n);
                                                u && h && (n.setLineDash(u), n.lineDashOffset = y);
                                                f && r.stroke(n);
                                                u && h && n.setLineDash([]);
                                                this.restoreTransform(n);
                                                (i.text || i.text === 0) && this.drawRectText(n, this.getBoundingRect())
                                            },
                                            buildPath: function() {},
                                            getBoundingRect: function() {
                                                var i = this._rect,
                                                    u = this.style,
                                                    e = !i,
                                                    f, n, t, r;
                                                return (e && (f = this.path, this.__dirtyPath && (f.beginPath(), this.buildPath(f, this.shape, !1)), i = f.getBoundingRect()), this._rect = i, u.hasStroke()) ? (n = this._rectWithStroke || (this._rectWithStroke = i.clone()), (this.__dirty || e) && (n.copy(i), t = u.lineWidth, r = u.strokeNoScale ? this.getLineScale() : 1, u.hasFill() || (t = Math.max(t, this.strokeContainThreshold || 4)), r > 1e-10 && (n.width += t / r, n.height += t / r, n.x -= t / r / 2, n.y -= t / r / 2)), n) : i
                                            },
                                            contain: function(n, t) {
                                                var e = this.transformCoordToLocal(n, t),
                                                    s = this.getBoundingRect(),
                                                    i = this.style,
                                                    u, r, f;
                                                if (n = e[0], t = e[1], s.contain(n, t)) {
                                                    if (u = this.path.data, i.hasStroke() && (r = i.lineWidth, f = i.strokeNoScale ? this.getLineScale() : 1, f > 1e-10 && (i.hasFill() || (r = Math.max(r, this.strokeContainThreshold)), o.containStroke(u, r / f, n, t)))) return !0;
                                                    if (i.hasFill()) return o.contain(u, n, t)
                                                }
                                                return !1
                                            },
                                            dirty: function(n) {
                                                n == null && (n = !0);
                                                n && (this.__dirtyPath = n, this._rect = null);
                                                this.__dirty = !0;
                                                this.__zr && this.__zr.refresh();
                                                this.__clipTarget && this.__clipTarget.dirty()
                                            },
                                            animateShape: function(n) {
                                                return this.animate("shape", n)
                                            },
                                            attrKV: function(n, t) {
                                                n === "shape" ? (this.setShape(t), this.__dirtyPath = !0, this._rect = null) : u.prototype.attrKV.call(this, n, t)
                                            },
                                            setShape: function(n, t) {
                                                var r = this.shape,
                                                    i;
                                                if (r) {
                                                    if (f.isObject(n))
                                                        for (i in n) n.hasOwnProperty(i) && (r[i] = n[i]);
                                                    else r[n] = t;
                                                    this.dirty(!0)
                                                }
                                                return this
                                            },
                                            getLineScale: function() {
                                                var n = this.transform;
                                                return n && e(n[0] - 1) > 1e-10 && e(n[3] - 1) > 1e-10 ? Math.sqrt(e(n[0] * n[3] - n[2] * n[1])) : 1
                                            }
                                        };
                                        r.extend = function(n) {
                                            var i = function(t) {
                                                    var i, f, u;
                                                    if (r.call(this, t), n.style && this.style.extendFrom(n.style, !1), i = n.shape, i) {
                                                        this.shape = this.shape || {};
                                                        f = this.shape;
                                                        for (u in i) !f.hasOwnProperty(u) && i.hasOwnProperty(u) && (f[u] = i[u])
                                                    }
                                                    n.init && n.init.call(this, t)
                                                },
                                                t;
                                            f.inherits(i, r);
                                            for (t in n) t !== "style" && t !== "shape" && (i.prototype[t] = n[t]);
                                            return i
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function r(n) {
                                            n = n || {};
                                            u.call(this, n);
                                            for (var t in n) n.hasOwnProperty(t) && t !== "style" && (this[t] = n[t]);
                                            this.style = new e(n.style);
                                            this._rect = null;
                                            this.__clipPaths = []
                                        }
                                        var f = i(4),
                                            e = i(47),
                                            u = i(31),
                                            o = i(48);
                                        r.prototype = {
                                            constructor: r,
                                            type: "displayable",
                                            __dirty: !0,
                                            invisible: !1,
                                            z: 0,
                                            z2: 0,
                                            zlevel: 0,
                                            draggable: !1,
                                            dragging: !1,
                                            silent: !1,
                                            culling: !1,
                                            cursor: "pointer",
                                            rectHover: !1,
                                            progressive: -1,
                                            beforeBrush: function() {},
                                            afterBrush: function() {},
                                            brush: function() {},
                                            getBoundingRect: function() {},
                                            contain: function(n, t) {
                                                return this.rectContain(n, t)
                                            },
                                            traverse: function(n, t) {
                                                n.call(t, this)
                                            },
                                            rectContain: function(n, t) {
                                                var i = this.transformCoordToLocal(n, t),
                                                    r = this.getBoundingRect();
                                                return r.contain(i[0], i[1])
                                            },
                                            dirty: function() {
                                                this.__dirty = !0;
                                                this._rect = null;
                                                this.__zr && this.__zr.refresh()
                                            },
                                            animateStyle: function(n) {
                                                return this.animate("style", n)
                                            },
                                            attrKV: function(n, t) {
                                                n !== "style" ? u.prototype.attrKV.call(this, n, t) : this.style.set(t)
                                            },
                                            setStyle: function(n, t) {
                                                return this.style.set(n, t), this.dirty(!1), this
                                            },
                                            useStyle: function(n) {
                                                return this.style = new e(n), this.dirty(!1), this
                                            }
                                        };
                                        f.inherits(r, u);
                                        f.mixin(r, o);
                                        n.exports = r
                                    }, function(n) {
                                        function e(n, t, i) {
                                            var r = t.x,
                                                u = t.x2,
                                                f = t.y,
                                                e = t.y2;
                                            return t.global || (r = r * i.width + i.x, u = u * i.width + i.x, f = f * i.height + i.y, e = e * i.height + i.y), n.createLinearGradient(r, f, u, e)
                                        }

                                        function o(n, t, i) {
                                            var e = i.width,
                                                o = i.height,
                                                s = Math.min(e, o),
                                                r = t.x,
                                                u = t.y,
                                                f = t.r;
                                            return t.global || (r = r * e + i.x, u = u * o + i.y, f = f * s), n.createRadialGradient(r, u, 0, r, u, f)
                                        }
                                        var i = [
                                                ["shadowBlur", 0],
                                                ["shadowOffsetX", 0],
                                                ["shadowOffsetY", 0],
                                                ["shadowColor", "#000"],
                                                ["lineCap", "butt"],
                                                ["lineJoin", "miter"],
                                                ["miterLimit", 10]
                                            ],
                                            t = function(n) {
                                                this.extendFrom(n)
                                            },
                                            r, u, f;
                                        for (t.prototype = {
                                                constructor: t,
                                                fill: "#000000",
                                                stroke: null,
                                                opacity: 1,
                                                lineDash: null,
                                                lineDashOffset: 0,
                                                shadowBlur: 0,
                                                shadowOffsetX: 0,
                                                shadowOffsetY: 0,
                                                lineWidth: 1,
                                                strokeNoScale: !1,
                                                text: null,
                                                textFill: "#000",
                                                textStroke: null,
                                                textPosition: "inside",
                                                textBaseline: null,
                                                textAlign: null,
                                                textVerticalAlign: null,
                                                textDistance: 5,
                                                textShadowBlur: 0,
                                                textShadowOffsetX: 0,
                                                textShadowOffsetY: 0,
                                                textTransform: !1,
                                                textRotation: 0,
                                                blend: null,
                                                bind: function(n, t, r) {
                                                    for (var h, o, c, u = this, f = r && r.style, e = !f, s = 0; s < i.length; s++) h = i[s], o = h[0], (e || u[o] !== f[o]) && (n[o] = u[o] || h[1]);
                                                    (e || u.fill !== f.fill) && (n.fillStyle = u.fill);
                                                    (e || u.stroke !== f.stroke) && (n.strokeStyle = u.stroke);
                                                    (e || u.opacity !== f.opacity) && (n.globalAlpha = u.opacity == null ? 1 : u.opacity);
                                                    (e || u.blend !== f.blend) && (n.globalCompositeOperation = u.blend || "source-over");
                                                    this.hasStroke() && (c = u.lineWidth, n.lineWidth = c / (this.strokeNoScale && t && t.getLineScale ? t.getLineScale() : 1))
                                                },
                                                hasFill: function() {
                                                    var n = this.fill;
                                                    return n != null && n !== "none"
                                                },
                                                hasStroke: function() {
                                                    var n = this.stroke;
                                                    return n != null && n !== "none" && this.lineWidth > 0
                                                },
                                                extendFrom: function(n, t) {
                                                    var r, i;
                                                    if (n) {
                                                        r = this;
                                                        for (i in n) n.hasOwnProperty(i) && (t || !r.hasOwnProperty(i)) && (r[i] = n[i])
                                                    }
                                                },
                                                set: function(n, t) {
                                                    typeof n == "string" ? this[n] = t : this.extendFrom(n, !0)
                                                },
                                                clone: function() {
                                                    var n = new this.constructor;
                                                    return n.extendFrom(this, !0), n
                                                },
                                                getGradient: function(n, t, i) {
                                                    for (var s = t.type === "radial" ? o : e, f = s(n, t, i), u = t.colorStops, r = 0; r < u.length; r++) f.addColorStop(u[r].offset, u[r].color);
                                                    return f
                                                }
                                            }, r = t.prototype, u = 0; u < i.length; u++) f = i[u], f[0] in r || (r[f[0]] = f[1]);
                                        t.getGradient = r.getGradient;
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function e(n, t) {
                                            return typeof n == "string" ? n.lastIndexOf("%") >= 0 ? parseFloat(n) / 100 * t : parseFloat(n) : n
                                        }
                                        var f = i(8),
                                            o = i(9),
                                            r = new o,
                                            u = function() {};
                                        u.prototype = {
                                            constructor: u,
                                            drawRectText: function(n, t, i) {
                                                var u = this.style,
                                                    l = u.text,
                                                    o, a, w, b, k, v;
                                                if (l != null && (l += ""), l) {
                                                    n.save();
                                                    var y, s, p = u.textPosition,
                                                        nt = u.textDistance,
                                                        c = u.textAlign,
                                                        d = u.textFont || u.font,
                                                        h = u.textBaseline,
                                                        g = u.textVerticalAlign;
                                                    if (i = i || f.getBoundingRect(l, d, c, h), o = this.transform, u.textTransform ? this.setTransform(n) : o && (r.copy(t), r.applyTransform(o), t = r), p instanceof Array) {
                                                        if (y = t.x + e(p[0], t.width), s = t.y + e(p[1], t.height), c = c || "left", h = h || "top", g) {
                                                            switch (g) {
                                                                case "middle":
                                                                    s -= i.height / 2 - i.lineHeight / 2;
                                                                    break;
                                                                case "bottom":
                                                                    s -= i.height - i.lineHeight / 2;
                                                                    break;
                                                                default:
                                                                    s += i.lineHeight / 2
                                                            }
                                                            h = "middle"
                                                        }
                                                    } else a = f.adjustTextPositionOnRect(p, t, i, nt), y = a.x, s = a.y, c = c || a.textAlign, h = h || a.textBaseline;
                                                    for (n.textAlign = c || "left", n.textBaseline = h || "alphabetic", w = u.textFill, b = u.textStroke, w && (n.fillStyle = w), b && (n.strokeStyle = b), n.font = d || "12px sans-serif", n.shadowBlur = u.textShadowBlur, n.shadowColor = u.textShadowColor || "transparent", n.shadowOffsetX = u.textShadowOffsetX, n.shadowOffsetY = u.textShadowOffsetY, k = l.split("\n"), u.textRotation && (o && n.translate(o[4], o[5]), n.rotate(u.textRotation), o && n.translate(-o[4], -o[5])), v = 0; v < k.length; v++) w && n.fillText(k[v], y, s), b && n.strokeText(k[v], y, s), s += i.lineHeight;
                                                    n.restore()
                                                }
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";
                                        var d = i(50),
                                            p = i(10),
                                            h = i(51),
                                            g = i(9),
                                            w = i(41).devicePixelRatio,
                                            r = {
                                                M: 1,
                                                L: 2,
                                                C: 3,
                                                Q: 4,
                                                A: 5,
                                                Z: 6,
                                                R: 7
                                            },
                                            u = [],
                                            o = [],
                                            f = [],
                                            e = [],
                                            b = Math.min,
                                            k = Math.max,
                                            c = Math.cos,
                                            l = Math.sin,
                                            a = Math.sqrt,
                                            s = Math.abs,
                                            y = typeof Float32Array != "undefined",
                                            v = function() {
                                                this.data = [];
                                                this._len = 0;
                                                this._ctx = null;
                                                this._xi = 0;
                                                this._yi = 0;
                                                this._x0 = 0;
                                                this._y0 = 0;
                                                this._ux = 0;
                                                this._uy = 0
                                            };
                                        v.prototype = {
                                            constructor: v,
                                            _lineDash: null,
                                            _dashOffset: 0,
                                            _dashIdx: 0,
                                            _dashSum: 0,
                                            setScale: function(n, t) {
                                                this._ux = s(1 / w / n) || 0;
                                                this._uy = s(1 / w / t) || 0
                                            },
                                            getContext: function() {
                                                return this._ctx
                                            },
                                            beginPath: function(n) {
                                                return this._ctx = n, n && n.beginPath(), n && (this.dpr = n.dpr), this._len = 0, this._lineDash && (this._lineDash = null, this._dashOffset = 0), this
                                            },
                                            moveTo: function(n, t) {
                                                return this.addData(r.M, n, t), this._ctx && this._ctx.moveTo(n, t), this._x0 = n, this._y0 = t, this._xi = n, this._yi = t, this
                                            },
                                            lineTo: function(n, t) {
                                                var i = s(n - this._xi) > this._ux || s(t - this._yi) > this._uy || this._len < 5;
                                                return this.addData(r.L, n, t), this._ctx && i && (this._needsDash() ? this._dashedLineTo(n, t) : this._ctx.lineTo(n, t)), i && (this._xi = n, this._yi = t), this
                                            },
                                            bezierCurveTo: function(n, t, i, u, f, e) {
                                                return this.addData(r.C, n, t, i, u, f, e), this._ctx && (this._needsDash() ? this._dashedBezierTo(n, t, i, u, f, e) : this._ctx.bezierCurveTo(n, t, i, u, f, e)), this._xi = f, this._yi = e, this
                                            },
                                            quadraticCurveTo: function(n, t, i, u) {
                                                return this.addData(r.Q, n, t, i, u), this._ctx && (this._needsDash() ? this._dashedQuadraticTo(n, t, i, u) : this._ctx.quadraticCurveTo(n, t, i, u)), this._xi = i, this._yi = u, this
                                            },
                                            arc: function(n, t, i, u, f, e) {
                                                return this.addData(r.A, n, t, i, i, u, f - u, 0, e ? 0 : 1), this._ctx && this._ctx.arc(n, t, i, u, f, e), this._xi = c(f) * i + n, this._xi = l(f) * i + n, this
                                            },
                                            arcTo: function(n, t, i, r, u) {
                                                return this._ctx && this._ctx.arcTo(n, t, i, r, u), this
                                            },
                                            rect: function(n, t, i, u) {
                                                return this._ctx && this._ctx.rect(n, t, i, u), this.addData(r.R, n, t, i, u), this
                                            },
                                            closePath: function() {
                                                this.addData(r.Z);
                                                var n = this._ctx,
                                                    t = this._x0,
                                                    i = this._y0;
                                                return n && (this._needsDash() && this._dashedLineTo(t, i), n.closePath()), this._xi = t, this._yi = i, this
                                            },
                                            fill: function(n) {
                                                n && n.fill();
                                                this.toStatic()
                                            },
                                            stroke: function(n) {
                                                n && n.stroke();
                                                this.toStatic()
                                            },
                                            setLineDash: function(n) {
                                                var i, t;
                                                if (n instanceof Array) {
                                                    for (this._lineDash = n, this._dashIdx = 0, i = 0, t = 0; t < n.length; t++) i += n[t];
                                                    this._dashSum = i
                                                }
                                                return this
                                            },
                                            setLineDashOffset: function(n) {
                                                return this._dashOffset = n, this
                                            },
                                            len: function() {
                                                return this._len
                                            },
                                            setData: function(n) {
                                                var i = n.length,
                                                    t;
                                                for (this.data && this.data.length == i || !y || (this.data = new Float32Array(i)), t = 0; t < i; t++) this.data[t] = n[t];
                                                this._len = i
                                            },
                                            appendPath: function(n) {
                                                var t, u, i;
                                                n instanceof Array || (n = [n]);
                                                var f = n.length,
                                                    e = 0,
                                                    r = this._len;
                                                for (t = 0; t < f; t++) e += n[t].len();
                                                for (y && this.data instanceof Float32Array && (this.data = new Float32Array(r + e)), t = 0; t < f; t++)
                                                    for (u = n[t].data, i = 0; i < u.length; i++) this.data[r++] = u[i];
                                                this._len = r
                                            },
                                            addData: function(n) {
                                                var i = this.data,
                                                    t;
                                                for (this._len + arguments.length > i.length && (this._expandData(), i = this.data), t = 0; t < arguments.length; t++) i[this._len++] = arguments[t];
                                                this._prevCmd = n
                                            },
                                            _expandData: function() {
                                                var t, n;
                                                if (!(this.data instanceof Array)) {
                                                    for (t = [], n = 0; n < this._len; n++) t[n] = this.data[n];
                                                    this.data = t
                                                }
                                            },
                                            _needsDash: function() {
                                                return this._lineDash
                                            },
                                            _dashedLineTo: function(n, t) {
                                                var l = this._dashSum,
                                                    e = this._dashOffset,
                                                    v = this._lineDash,
                                                    p = this._ctx,
                                                    o = this._xi,
                                                    s = this._yi,
                                                    i = n - o,
                                                    r = t - s,
                                                    y = a(i * i + r * r),
                                                    u = o,
                                                    f = s,
                                                    c, w = v.length,
                                                    h;
                                                for (i /= y, r /= y, e < 0 && (e = l + e), e %= l, u -= e * i, f -= e * r; i > 0 && u <= n || i < 0 && u >= n || i == 0 && (r > 0 && f <= t || r < 0 && f >= t);)(h = this._dashIdx, c = v[h], u += i * c, f += r * c, this._dashIdx = (h + 1) % w, i > 0 && u < o || i < 0 && u > o || r > 0 && f < s || r < 0 && f > s) || p[h % 2 ? "moveTo" : "lineTo"](i >= 0 ? b(u, n) : k(u, n), r >= 0 ? b(f, t) : k(f, t));
                                                i = u - n;
                                                r = f - t;
                                                this._dashOffset = -a(i * i + r * r)
                                            },
                                            _dashedBezierTo: function(n, t, i, r, u, f) {
                                                var tt = this._dashSum,
                                                    s = this._dashOffset,
                                                    p = this._lineDash,
                                                    w = this._ctx,
                                                    b = this._xi,
                                                    k = this._yi,
                                                    e, h, c, l = d.cubicAt,
                                                    g = 0,
                                                    o = this._dashIdx,
                                                    it = p.length,
                                                    v, y, nt = 0;
                                                for (s < 0 && (s = tt + s), s %= tt, e = 0; e < 1; e += .1) h = l(b, n, i, u, e + .1) - l(b, n, i, u, e), c = l(k, t, r, f, e + .1) - l(k, t, r, f, e), g += a(h * h + c * c);
                                                for (; o < it; o++)
                                                    if (nt += p[o], nt > s) break;
                                                for (e = (nt - s) / g; e <= 1;) v = l(b, n, i, u, e), y = l(k, t, r, f, e), o % 2 ? w.moveTo(v, y) : w.lineTo(v, y), e += p[o] / g, o = (o + 1) % it;
                                                o % 2 != 0 && w.lineTo(u, f);
                                                h = u - v;
                                                c = f - y;
                                                this._dashOffset = -a(h * h + c * c)
                                            },
                                            _dashedQuadraticTo: function(n, t, i, r) {
                                                var u = i,
                                                    f = r;
                                                i = (i + 2 * n) / 3;
                                                r = (r + 2 * t) / 3;
                                                n = (this._xi + 2 * n) / 3;
                                                t = (this._yi + 2 * t) / 3;
                                                this._dashedBezierTo(n, t, i, r, u, f)
                                            },
                                            toStatic: function() {
                                                var n = this.data;
                                                n instanceof Array && (n.length = this._len, y && (this.data = new Float32Array(n)))
                                            },
                                            getBoundingRect: function() {
                                                var n, tt, it, rt;
                                                u[0] = u[1] = f[0] = f[1] = Number.MAX_VALUE;
                                                o[0] = o[1] = e[0] = e[1] = -Number.MAX_VALUE;
                                                var t = this.data,
                                                    i = 0,
                                                    s = 0,
                                                    a = 0,
                                                    v = 0;
                                                for (n = 0; n < t.length;) {
                                                    tt = t[n++];
                                                    n == 1 && (i = t[n], s = t[n + 1], a = i, v = s);
                                                    switch (tt) {
                                                        case r.M:
                                                            a = t[n++];
                                                            v = t[n++];
                                                            i = a;
                                                            s = v;
                                                            f[0] = a;
                                                            f[1] = v;
                                                            e[0] = a;
                                                            e[1] = v;
                                                            break;
                                                        case r.L:
                                                            h.fromLine(i, s, t[n], t[n + 1], f, e);
                                                            i = t[n++];
                                                            s = t[n++];
                                                            break;
                                                        case r.C:
                                                            h.fromCubic(i, s, t[n++], t[n++], t[n++], t[n++], t[n], t[n + 1], f, e);
                                                            i = t[n++];
                                                            s = t[n++];
                                                            break;
                                                        case r.Q:
                                                            h.fromQuadratic(i, s, t[n++], t[n++], t[n], t[n + 1], f, e);
                                                            i = t[n++];
                                                            s = t[n++];
                                                            break;
                                                        case r.A:
                                                            var w = t[n++],
                                                                b = t[n++],
                                                                k = t[n++],
                                                                d = t[n++],
                                                                y = t[n++],
                                                                nt = t[n++] + y,
                                                                ft = t[n++],
                                                                ut = 1 - t[n++];
                                                            n == 1 && (a = c(y) * k + w, v = l(y) * d + b);
                                                            h.fromArc(w, b, k, d, y, nt, ut, f, e);
                                                            i = c(nt) * k + w;
                                                            s = l(nt) * d + b;
                                                            break;
                                                        case r.R:
                                                            a = i = t[n++];
                                                            v = s = t[n++];
                                                            it = t[n++];
                                                            rt = t[n++];
                                                            h.fromLine(a, v, a + it, v + rt, f, e);
                                                            break;
                                                        case r.Z:
                                                            i = a;
                                                            s = v
                                                    }
                                                    p.min(u, u, f);
                                                    p.max(o, o, e)
                                                }
                                                return n === 0 && (u[0] = u[1] = o[0] = o[1] = 0), new g(u[0], u[1], o[0] - u[0], o[1] - u[1])
                                            },
                                            rebuildPath: function(n) {
                                                for (var g, i = this.data, h, a, u, f, w, b, ft = this._ux, et = this._uy, d = this._len, t = 0; t < d;) {
                                                    g = i[t++];
                                                    t == 1 && (u = i[t], f = i[t + 1], h = u, a = f);
                                                    switch (g) {
                                                        case r.M:
                                                            h = u = i[t++];
                                                            a = f = i[t++];
                                                            n.moveTo(u, f);
                                                            break;
                                                        case r.L:
                                                            w = i[t++];
                                                            b = i[t++];
                                                            (s(w - u) > ft || s(b - f) > et || t === d - 1) && (n.lineTo(w, b), u = w, f = b);
                                                            break;
                                                        case r.C:
                                                            n.bezierCurveTo(i[t++], i[t++], i[t++], i[t++], i[t++], i[t++]);
                                                            u = i[t - 2];
                                                            f = i[t - 1];
                                                            break;
                                                        case r.Q:
                                                            n.quadraticCurveTo(i[t++], i[t++], i[t++], i[t++]);
                                                            u = i[t - 2];
                                                            f = i[t - 1];
                                                            break;
                                                        case r.A:
                                                            var v = i[t++],
                                                                y = i[t++],
                                                                e = i[t++],
                                                                o = i[t++],
                                                                p = i[t++],
                                                                ot = i[t++],
                                                                nt = i[t++],
                                                                tt = i[t++],
                                                                it = e > o ? e : o,
                                                                rt = e > o ? 1 : e / o,
                                                                ut = e > o ? o / e : 1,
                                                                st = Math.abs(e - o) > .001,
                                                                k = p + ot;
                                                            st ? (n.translate(v, y), n.rotate(nt), n.scale(rt, ut), n.arc(0, 0, it, p, k, 1 - tt), n.scale(1 / rt, 1 / ut), n.rotate(-nt), n.translate(-v, -y)) : n.arc(v, y, it, p, k, 1 - tt);
                                                            t == 1 && (h = c(p) * e + v, a = l(p) * o + y);
                                                            u = c(k) * e + v;
                                                            f = l(k) * o + y;
                                                            break;
                                                        case r.R:
                                                            h = u = i[t];
                                                            a = f = i[t + 1];
                                                            n.rect(i[t++], i[t++], i[t++], i[t++]);
                                                            break;
                                                        case r.Z:
                                                            n.closePath();
                                                            u = h;
                                                            f = a
                                                    }
                                                }
                                            }
                                        };
                                        v.CMD = r;
                                        n.exports = v
                                    }, function(n, t, i) {
                                        "use strict";

                                        function s(n) {
                                            return n > -a && n < a
                                        }

                                        function k(n) {
                                            return n > a || n < -a
                                        }

                                        function f(n, t, i, r, u) {
                                            var f = 1 - u;
                                            return f * f * (f * n + 3 * u * t) + u * u * (u * r + 3 * f * i)
                                        }

                                        function d(n, t, i, r, u) {
                                            var f = 1 - u;
                                            return 3 * (((t - n) * f + 2 * (i - t) * u) * f + (r - i) * u * u)
                                        }

                                        function g(n, t, i, r, u, f) {
                                            var c = r + 3 * (t - i) - n,
                                                e = 3 * (i - t * 2 + n),
                                                k = 3 * (t - n),
                                                ft = n - u,
                                                a = e * e - 3 * c * k,
                                                p = e * k - 9 * c * ft,
                                                st = k * k - 3 * e * ft,
                                                y = 0,
                                                nt, h;
                                            if (s(a) && s(p)) s(e) ? f[0] = 0 : (h = -k / e, h >= 0 && h <= 1 && (f[y++] = h));
                                            else if (nt = p * p - 4 * a * st, s(nt)) {
                                                var et = p / a,
                                                    h = -e / c + et,
                                                    w = -et / 2;
                                                h >= 0 && h <= 1 && (f[y++] = h);
                                                w >= 0 && w <= 1 && (f[y++] = w)
                                            } else if (nt > 0) {
                                                var ot = o(nt),
                                                    d = a * e + 1.5 * c * (-p + ot),
                                                    g = a * e + 1.5 * c * (-p - ot);
                                                d = d < 0 ? -l(-d, v) : l(d, v);
                                                g = g < 0 ? -l(-g, v) : l(g, v);
                                                h = (-e - (d + g)) / (3 * c);
                                                h >= 0 && h <= 1 && (f[y++] = h)
                                            } else {
                                                var ht = (2 * a * e - 3 * c * p) / (2 * o(a * a * a)),
                                                    tt = Math.acos(ht) / 3,
                                                    it = o(a),
                                                    rt = Math.cos(tt),
                                                    h = (-e - 2 * it * rt) / (3 * c),
                                                    w = (-e + it * (rt + b * Math.sin(tt))) / (3 * c),
                                                    ut = (-e + it * (rt - b * Math.sin(tt))) / (3 * c);
                                                h >= 0 && h <= 1 && (f[y++] = h);
                                                w >= 0 && w <= 1 && (f[y++] = w);
                                                ut >= 0 && ut <= 1 && (f[y++] = ut)
                                            }
                                            return y
                                        }

                                        function nt(n, t, i, r, u) {
                                            var f = 6 * i - 12 * t + 6 * n,
                                                h = 9 * t + 3 * r - 3 * n - 9 * i,
                                                v = 3 * t - 3 * n,
                                                c = 0,
                                                e, l;
                                            if (s(h)) k(f) && (e = -v / f, e >= 0 && e <= 1 && (u[c++] = e));
                                            else if (l = f * f - 4 * h * v, s(l)) u[0] = -f / (2 * h);
                                            else if (l > 0) {
                                                var y = o(l),
                                                    e = (-f + y) / (2 * h),
                                                    a = (-f - y) / (2 * h);
                                                e >= 0 && e <= 1 && (u[c++] = e);
                                                a >= 0 && a <= 1 && (u[c++] = a)
                                            }
                                            return c
                                        }

                                        function tt(n, t, i, r, u, f) {
                                            var e = (t - n) * u + n,
                                                o = (i - t) * u + t,
                                                h = (r - i) * u + i,
                                                s = (o - e) * u + e,
                                                c = (h - o) * u + o,
                                                l = (c - s) * u + s;
                                            f[0] = n;
                                            f[1] = e;
                                            f[2] = s;
                                            f[3] = l;
                                            f[4] = l;
                                            f[5] = c;
                                            f[6] = h;
                                            f[7] = r
                                        }

                                        function it(n, t, i, e, s, l, a, v, y, p, b) {
                                            var d, rt = .005,
                                                k = Infinity,
                                                tt, it, g, ut, nt, ft;
                                            for (u[0] = y, u[1] = p, nt = 0; nt < 1; nt += .05) r[0] = f(n, i, s, a, nt), r[1] = f(t, e, l, v, nt), g = h(u, r), g < k && (d = nt, k = g);
                                            for (k = Infinity, ft = 0; ft < 32; ft++) {
                                                if (rt < w) break;
                                                tt = d - rt;
                                                it = d + rt;
                                                r[0] = f(n, i, s, a, tt);
                                                r[1] = f(t, e, l, v, tt);
                                                g = h(r, u);
                                                tt >= 0 && g < k ? (d = tt, k = g) : (c[0] = f(n, i, s, a, it), c[1] = f(t, e, l, v, it), ut = h(c, u), it <= 1 && ut < k ? (d = it, k = ut) : rt *= .5)
                                            }
                                            return b && (b[0] = f(n, i, s, a, d), b[1] = f(t, e, l, v, d)), o(k)
                                        }

                                        function e(n, t, i, r) {
                                            var u = 1 - r;
                                            return u * (u * n + 2 * r * t) + r * r * i
                                        }

                                        function rt(n, t, i, r) {
                                            return 2 * ((1 - r) * (t - n) + r * (i - t))
                                        }

                                        function ut(n, t, i, r, u) {
                                            var h = n - 2 * t + i,
                                                e = 2 * (t - n),
                                                v = n - r,
                                                c = 0,
                                                l, f;
                                            if (s(h)) k(e) && (f = -v / e, f >= 0 && f <= 1 && (u[c++] = f));
                                            else if (l = e * e - 4 * h * v, s(l)) f = -e / (2 * h), f >= 0 && f <= 1 && (u[c++] = f);
                                            else if (l > 0) {
                                                var y = o(l),
                                                    f = (-e + y) / (2 * h),
                                                    a = (-e - y) / (2 * h);
                                                f >= 0 && f <= 1 && (u[c++] = f);
                                                a >= 0 && a <= 1 && (u[c++] = a)
                                            }
                                            return c
                                        }

                                        function ft(n, t, i) {
                                            var r = n + i - 2 * t;
                                            return r === 0 ? .5 : (n - t) / r
                                        }

                                        function et(n, t, i, r, u) {
                                            var f = (t - n) * r + n,
                                                e = (i - t) * r + t,
                                                o = (e - f) * r + f;
                                            u[0] = n;
                                            u[1] = f;
                                            u[2] = o;
                                            u[3] = o;
                                            u[4] = e;
                                            u[5] = i
                                        }

                                        function ot(n, t, i, f, s, l, a, v, y) {
                                            var b, tt = .005,
                                                p = Infinity,
                                                k, it, g, nt, d, rt;
                                            for (u[0] = a, u[1] = v, k = 0; k < 1; k += .05) r[0] = e(n, i, s, k), r[1] = e(t, f, l, k), d = h(u, r), d < p && (b = k, p = d);
                                            for (p = Infinity, it = 0; it < 32; it++) {
                                                if (tt < w) break;
                                                g = b - tt;
                                                nt = b + tt;
                                                r[0] = e(n, i, s, g);
                                                r[1] = e(t, f, l, g);
                                                d = h(r, u);
                                                g >= 0 && d < p ? (b = g, p = d) : (c[0] = e(n, i, s, nt), c[1] = e(t, f, l, nt), rt = h(c, u), nt <= 1 && rt < p ? (b = nt, p = rt) : tt *= .5)
                                            }
                                            return y && (y[0] = e(n, i, s, b), y[1] = e(t, f, l, b)), o(p)
                                        }
                                        var p = i(10),
                                            y = p.create,
                                            h = p.distSquare,
                                            l = Math.pow,
                                            o = Math.sqrt,
                                            a = 1e-8,
                                            w = .0001,
                                            b = o(3),
                                            v = 1 / 3,
                                            u = y(),
                                            r = y(),
                                            c = y();
                                        n.exports = {
                                            cubicAt: f,
                                            cubicDerivativeAt: d,
                                            cubicRootAt: g,
                                            cubicExtrema: nt,
                                            cubicSubdivide: tt,
                                            cubicProjectPoint: it,
                                            quadraticAt: e,
                                            quadraticDerivativeAt: rt,
                                            quadraticRootAt: ut,
                                            quadraticExtremum: ft,
                                            quadraticSubdivide: et,
                                            quadraticProjectPoint: ot
                                        }
                                    }, function(n, t, i) {
                                        var o = i(10),
                                            s = i(50),
                                            e = {},
                                            r = Math.min,
                                            u = Math.max,
                                            a = Math.sin,
                                            v = Math.cos,
                                            h = o.create(),
                                            c = o.create(),
                                            l = o.create(),
                                            f = Math.PI * 2,
                                            y, p;
                                        e.fromPoints = function(n, t, i) {
                                            if (n.length !== 0) {
                                                for (var f = n[0], o = f[0], s = f[0], h = f[1], c = f[1], e = 1; e < n.length; e++) f = n[e], o = r(o, f[0]), s = u(s, f[0]), h = r(h, f[1]), c = u(c, f[1]);
                                                t[0] = o;
                                                t[1] = h;
                                                i[0] = s;
                                                i[1] = c
                                            }
                                        };
                                        e.fromLine = function(n, t, i, f, e, o) {
                                            e[0] = r(n, i);
                                            e[1] = r(t, f);
                                            o[0] = u(n, i);
                                            o[1] = u(t, f)
                                        };
                                        y = [];
                                        p = [];
                                        e.fromCubic = function(n, t, i, f, e, o, h, c, l, a) {
                                            var d = s.cubicExtrema,
                                                g = s.cubicAt,
                                                v, w = d(n, i, e, h, y),
                                                b, k;
                                            for (l[0] = Infinity, l[1] = Infinity, a[0] = -Infinity, a[1] = -Infinity, v = 0; v < w; v++) b = g(n, i, e, h, y[v]), l[0] = r(b, l[0]), a[0] = u(b, a[0]);
                                            for (w = d(t, f, o, c, p), v = 0; v < w; v++) k = g(t, f, o, c, p[v]), l[1] = r(k, l[1]), a[1] = u(k, a[1]);
                                            l[0] = r(n, l[0]);
                                            a[0] = u(n, a[0]);
                                            l[0] = r(h, l[0]);
                                            a[0] = u(h, a[0]);
                                            l[1] = r(t, l[1]);
                                            a[1] = u(t, a[1]);
                                            l[1] = r(c, l[1]);
                                            a[1] = u(c, a[1])
                                        };
                                        e.fromQuadratic = function(n, t, i, f, e, o, h, c) {
                                            var l = s.quadraticExtremum,
                                                a = s.quadraticAt,
                                                p = u(r(l(n, i, e), 1), 0),
                                                w = u(r(l(t, f, o), 1), 0),
                                                v = a(n, i, e, p),
                                                y = a(t, f, o, w);
                                            h[0] = r(n, e, v);
                                            h[1] = r(t, o, y);
                                            c[0] = u(n, e, v);
                                            c[1] = u(t, o, y)
                                        };
                                        e.fromArc = function(n, t, i, r, u, e, s, y, p) {
                                            var b = o.min,
                                                k = o.max,
                                                d = Math.abs(u - e),
                                                g, w;
                                            if (d % f < .0001 && d > .0001) {
                                                y[0] = n - i;
                                                y[1] = t - r;
                                                p[0] = n + i;
                                                p[1] = t + r;
                                                return
                                            }
                                            for (h[0] = v(u) * i + n, h[1] = a(u) * r + t, c[0] = v(e) * i + n, c[1] = a(e) * r + t, b(y, h, c), k(p, h, c), u = u % f, u < 0 && (u = u + f), e = e % f, e < 0 && (e = e + f), u > e && !s ? e += f : u < e && s && (u += f), s && (g = e, e = u, u = g), w = 0; w < e; w += Math.PI / 2) w > u && (l[0] = v(w) * i + n, l[1] = a(w) * r + t, b(y, l, y), k(p, l, p))
                                        };
                                        n.exports = e
                                    }, function(n, t, i) {
                                        "use strict";

                                        function b(n, t) {
                                            return Math.abs(n - t) < w
                                        }

                                        function k() {
                                            var n = u[0];
                                            u[0] = u[1];
                                            u[1] = n
                                        }

                                        function d(n, t, i, e, o, s, h, c, l, a) {
                                            var d, g, y, w, nt, b;
                                            if (a > t && a > e && a > s && a > c || a < t && a < e && a < s && a < c || (d = f.cubicRootAt(t, e, s, c, a, r), d === 0)) return 0;
                                            for (g = 0, y = -1, b = 0; b < d; b++) {
                                                var p = r[b],
                                                    v = p === 0 || p === 1 ? .5 : 1,
                                                    tt = f.cubicAt(n, i, o, h, p);
                                                tt < l || (y < 0 && (y = f.cubicExtrema(t, e, s, c, u), u[1] < u[0] && y > 1 && k(), w = f.cubicAt(t, e, s, c, u[0]), y > 1 && (nt = f.cubicAt(t, e, s, c, u[1]))), g += y == 2 ? p < u[0] ? w < t ? v : -v : p < u[1] ? nt < w ? v : -v : c < nt ? v : -v : p < u[0] ? w < t ? v : -v : c < w ? v : -v)
                                            }
                                            return g
                                        }

                                        function g(n, t, i, u, e, o, s, h) {
                                            var y, a, p, w, l, c, v;
                                            if (h > t && h > u && h > o || h < t && h < u && h < o || (y = f.quadraticRootAt(t, u, o, h, r), y === 0)) return 0;
                                            if (a = f.quadraticExtremum(t, u, o), a >= 0 && a <= 1) {
                                                for (p = 0, w = f.quadraticAt(t, u, o, a), l = 0; l < y; l++)(c = r[l] === 0 || r[l] === 1 ? .5 : 1, v = f.quadraticAt(n, i, e, r[l]), v < s) || (p += r[l] < a ? w < t ? c : -c : o < w ? c : -c);
                                                return p
                                            }
                                            return (c = r[0] === 0 || r[0] === 1 ? .5 : 1, v = f.quadraticAt(n, i, e, r[0]), v < s) ? 0 : o < t ? c : -c
                                        }

                                        function nt(n, t, i, u, f, e, o, s) {
                                            var p, v, w, y, b, l, a;
                                            if ((s -= t, s > i || s < -i) || (v = Math.sqrt(i * i - s * s), r[0] = -v, r[1] = v, p = Math.abs(u - f), p < .0001)) return 0;
                                            if (p % h < .0001) return u = 0, f = h, a = e ? 1 : -1, o >= r[0] + n && o <= r[1] + n ? a : 0;
                                            for (e ? (v = u, u = c(f), f = c(v)) : (u = c(u), f = c(f)), u > f && (f += h), w = 0, y = 0; y < 2; y++) b = r[y], b + n > o && (l = Math.atan2(s, b), a = e ? 1 : -1, l < 0 && (l = h + l), (l >= u && l <= f || l + h >= u && l + h <= f) && (l > Math.PI / 2 && l < Math.PI * 1.5 && (a = -a), w += a));
                                            return w
                                        }

                                        function l(n, t, i, r, u) {
                                            for (var ot, ht, w = 0, c = 0, h = 0, a = 0, l = 0, f = 0; f < n.length;) {
                                                ot = n[f++];
                                                ot === e.M && f > 1 && (i || (w += o(c, h, a, l, r, u)));
                                                f == 1 && (c = n[f], h = n[f + 1], a = c, l = h);
                                                switch (ot) {
                                                    case e.M:
                                                        a = n[f++];
                                                        l = n[f++];
                                                        c = a;
                                                        h = l;
                                                        break;
                                                    case e.L:
                                                        if (i) {
                                                            if (s(c, h, n[f], n[f + 1], t, r, u)) return !0
                                                        } else w += o(c, h, n[f], n[f + 1], r, u) || 0;
                                                        c = n[f++];
                                                        h = n[f++];
                                                        break;
                                                    case e.C:
                                                        if (i) {
                                                            if (v.containStroke(c, h, n[f++], n[f++], n[f++], n[f++], n[f], n[f + 1], t, r, u)) return !0
                                                        } else w += d(c, h, n[f++], n[f++], n[f++], n[f++], n[f], n[f + 1], r, u) || 0;
                                                        c = n[f++];
                                                        h = n[f++];
                                                        break;
                                                    case e.Q:
                                                        if (i) {
                                                            if (y.containStroke(c, h, n[f++], n[f++], n[f], n[f + 1], t, r, u)) return !0
                                                        } else w += g(c, h, n[f++], n[f++], n[f], n[f + 1], r, u) || 0;
                                                        c = n[f++];
                                                        h = n[f++];
                                                        break;
                                                    case e.A:
                                                        var rt = n[f++],
                                                            ft = n[f++],
                                                            st = n[f++],
                                                            ut = n[f++],
                                                            k = n[f++],
                                                            et = n[f++],
                                                            vt = n[f++],
                                                            ct = 1 - n[f++],
                                                            tt = Math.cos(k) * st + rt,
                                                            it = Math.sin(k) * ut + ft;
                                                        if (f > 1 ? w += o(c, h, tt, it, r, u) : (a = tt, l = it), ht = (r - rt) * ut / st + rt, i) {
                                                            if (p.containStroke(rt, ft, ut, k, k + et, ct, t, ht, u)) return !0
                                                        } else w += nt(rt, ft, ut, k, k + et, ct, ht, u);
                                                        c = Math.cos(k + et) * st + rt;
                                                        h = Math.sin(k + et) * ut + ft;
                                                        break;
                                                    case e.R:
                                                        a = c = n[f++];
                                                        l = h = n[f++];
                                                        var lt = n[f++],
                                                            at = n[f++],
                                                            tt = a + lt,
                                                            it = l + at;
                                                        if (i) {
                                                            if (s(a, l, tt, l, t, r, u) || s(tt, l, tt, it, t, r, u) || s(tt, it, a, it, t, r, u) || s(a, it, a, l, t, r, u)) return !0
                                                        } else w += o(tt, l, tt, it, r, u), w += o(a, it, a, l, r, u);
                                                        break;
                                                    case e.Z:
                                                        if (i) {
                                                            if (s(c, h, a, l, t, r, u)) return !0
                                                        } else w += o(c, h, a, l, r, u);
                                                        c = a;
                                                        h = l
                                                }
                                            }
                                            return i || b(h, l) || (w += o(c, h, a, l, r, u) || 0), w !== 0
                                        }
                                        var e = i(49).CMD,
                                            a = i(53),
                                            v = i(54),
                                            y = i(55),
                                            p = i(56),
                                            c = i(57).normalizeRadian,
                                            f = i(50),
                                            o = i(58),
                                            s = a.containStroke,
                                            h = Math.PI * 2,
                                            w = .0001,
                                            r = [-1, -1, -1],
                                            u = [-1, -1];
                                        n.exports = {
                                            contain: function(n, t, i) {
                                                return l(n, 0, !1, t, i)
                                            },
                                            containStroke: function(n, t, i, r) {
                                                return l(n, t, !0, i, r)
                                            }
                                        }
                                    }, function(n) {
                                        n.exports = {
                                            containStroke: function(n, t, i, r, u, f, e) {
                                                var h, l;
                                                if (u === 0) return !1;
                                                var o = u,
                                                    s = 0,
                                                    c = n;
                                                if (e > t + o && e > r + o || e < t - o && e < r - o || f > n + o && f > i + o || f < n - o && f < i - o) return !1;
                                                if (n !== i) s = (t - r) / (n - i), c = (n * r - i * t) / (n - i);
                                                else return Math.abs(f - n) <= o / 2;
                                                return h = s * f - e + c, l = h * h / (s * s + 1), l <= o / 2 * o / 2
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var r = i(50);
                                        n.exports = {
                                            containStroke: function(n, t, i, u, f, e, o, s, h, c, l) {
                                                var a, v;
                                                return h === 0 ? !1 : (a = h, l > t + a && l > u + a && l > e + a && l > s + a || l < t - a && l < u - a && l < e - a && l < s - a || c > n + a && c > i + a && c > f + a && c > o + a || c < n - a && c < i - a && c < f - a && c < o - a) ? !1 : (v = r.cubicProjectPoint(n, t, i, u, f, e, o, s, c, l, null), v <= a / 2)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var r = i(50);
                                        n.exports = {
                                            containStroke: function(n, t, i, u, f, e, o, s, h) {
                                                var c, l;
                                                return o === 0 ? !1 : (c = o, h > t + c && h > u + c && h > e + c || h < t - c && h < u - c && h < e - c || s > n + c && s > i + c && s > f + c || s < n - c && s < i - c && s < f - c) ? !1 : (l = r.quadraticProjectPoint(n, t, i, u, f, e, s, h, null), l <= c / 2)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var u = i(57).normalizeRadian,
                                            r = Math.PI * 2;
                                        n.exports = {
                                            containStroke: function(n, t, i, f, e, o, s, h, c) {
                                                var a, v, y, l;
                                                return s === 0 ? !1 : (a = s, h -= n, c -= t, v = Math.sqrt(h * h + c * c), v - a > i || v + a < i) ? !1 : Math.abs(f - e) % r < .0001 ? !0 : (o ? (y = f, f = u(e), e = u(y)) : (f = u(f), e = u(e)), f > e && (e += r), l = Math.atan2(c, h), l < 0 && (l += r), l >= f && l <= e || l + r >= f && l + r <= e)
                                            }
                                        }
                                    }, function(n) {
                                        var t = Math.PI * 2;
                                        n.exports = {
                                            normalizeRadian: function(n) {
                                                return n %= t, n < 0 && (n += t), n
                                            }
                                        }
                                    }, function(n) {
                                        n.exports = function(n, t, i, r, u, f) {
                                            var o, e, s;
                                            return f > t && f > r || f < t && f < r ? 0 : r === t ? 0 : (o = r < t ? 1 : -1, e = (f - t) / (r - t), (e === 1 || e === 0) && (o = r < t ? .5 : -.5), s = e * (i - n) + n, s > u ? o : 0)
                                        }
                                    }, function(n) {
                                        var t = function(n, t) {
                                            this.image = n;
                                            this.repeat = t;
                                            this.type = "pattern"
                                        };
                                        t.prototype.getCanvasPattern = function(n) {
                                            return this._canvasPattern || (this._canvasPattern = n.createPattern(this.image, this.repeat))
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function h(n, t) {
                                            for (var i = n.data, v, l, a, b = r.M, k = r.C, d = r.L, g = r.R, nt = r.A, tt = r.Q, e, h = 0, c = 0; h < i.length;) {
                                                v = i[h++];
                                                c = h;
                                                l = 0;
                                                switch (v) {
                                                    case b:
                                                        l = 1;
                                                        break;
                                                    case d:
                                                        l = 1;
                                                        break;
                                                    case k:
                                                        l = 3;
                                                        break;
                                                    case tt:
                                                        l = 2;
                                                        break;
                                                    case nt:
                                                        var it = t[4],
                                                            rt = t[5],
                                                            y = f(t[0] * t[0] + t[1] * t[1]),
                                                            p = f(t[2] * t[2] + t[3] * t[3]),
                                                            w = s(-t[1] / p, t[0] / y);
                                                        i[h++] += it;
                                                        i[h++] += rt;
                                                        i[h++] *= y;
                                                        i[h++] *= p;
                                                        i[h++] += w;
                                                        i[h++] += w;
                                                        h += 2;
                                                        c = h;
                                                        break;
                                                    case g:
                                                        e[0] = i[h++];
                                                        e[1] = i[h++];
                                                        u(e, e, t);
                                                        i[c++] = e[0];
                                                        i[c++] = e[1];
                                                        e[0] += i[h++];
                                                        e[1] += i[h++];
                                                        u(e, e, t);
                                                        i[c++] = e[0];
                                                        i[c++] = e[1]
                                                }
                                                for (a = 0; a < l; a++) e = o[a], e[0] = i[h++], e[1] = i[h++], u(e, e, t), i[c++] = e[0], i[c++] = e[1]
                                            }
                                        }
                                        var r = i(49).CMD,
                                            e = i(10),
                                            u = e.applyTransform,
                                            o = [
                                                [],
                                                [],
                                                []
                                            ],
                                            f = Math.sqrt,
                                            s = Math.atan2;
                                        n.exports = h
                                    }, function(n) {
                                        var t = function(n) {
                                            this.colorStops = n || []
                                        };
                                        t.prototype = {
                                            constructor: t,
                                            addColorStop: function(n, t) {
                                                this.colorStops.push({
                                                    offset: n,
                                                    color: t
                                                })
                                            }
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function r(n) {
                                            u.call(this, n)
                                        }
                                        var u = i(46),
                                            e = i(9),
                                            o = i(4),
                                            s = i(63),
                                            f = new s(50);
                                        r.prototype = {
                                            constructor: r,
                                            type: "image",
                                            brush: function(n, t) {
                                                var i = this.style,
                                                    e = i.image,
                                                    r, u, h, c;
                                                if (i.bind(n, this, t), r = typeof e == "string" ? this._image : e, !r && e)
                                                    if (u = f.get(e), u) {
                                                        if (r = u.image, this._image = r, !r.width || !r.height) {
                                                            u.pending.push(this);
                                                            return
                                                        }
                                                    } else {
                                                        r = new Image;
                                                        r.onload = function() {
                                                            r.onload = null;
                                                            for (var n = 0; n < u.pending.length; n++) u.pending[n].dirty()
                                                        };
                                                        u = {
                                                            image: r,
                                                            pending: [this]
                                                        };
                                                        r.src = e;
                                                        f.put(e, u);
                                                        this._image = r;
                                                        return
                                                    }
                                                if (r) {
                                                    var o = i.width || r.width,
                                                        s = i.height || r.height,
                                                        l = i.x || 0,
                                                        a = i.y || 0;
                                                    if (!r.width || !r.height) return;
                                                    if (this.setTransform(n), i.sWidth && i.sHeight) h = i.sx || 0, c = i.sy || 0, n.drawImage(r, h, c, i.sWidth, i.sHeight, l, a, o, s);
                                                    else if (i.sx && i.sy) {
                                                        var h = i.sx,
                                                            c = i.sy,
                                                            v = o - h,
                                                            y = s - c;
                                                        n.drawImage(r, h, c, v, y, l, a, o, s)
                                                    } else n.drawImage(r, l, a, o, s);
                                                    i.width == null && (i.width = o);
                                                    i.height == null && (i.height = s);
                                                    this.restoreTransform(n);
                                                    i.text != null && this.drawRectText(n, this.getBoundingRect())
                                                }
                                            },
                                            getBoundingRect: function() {
                                                var n = this.style;
                                                return this._rect || (this._rect = new e(n.x || 0, n.y || 0, n.width || 0, n.height || 0)), this._rect
                                            }
                                        };
                                        o.inherits(r, u);
                                        n.exports = r
                                    }, function(n) {
                                        var r = function() {
                                                this.head = null;
                                                this.tail = null;
                                                this._len = 0
                                            },
                                            t = r.prototype;
                                        t.insert = function(n) {
                                            var t = new f(n);
                                            return this.insertEntry(t), t
                                        };
                                        t.insertEntry = function(n) {
                                            this.head ? (this.tail.next = n, n.prev = this.tail, this.tail = n) : this.head = this.tail = n;
                                            this._len++
                                        };
                                        t.remove = function(n) {
                                            var t = n.prev,
                                                i = n.next;
                                            t ? t.next = i : this.head = i;
                                            i ? i.prev = t : this.tail = t;
                                            n.next = n.prev = null;
                                            this._len--
                                        };
                                        t.len = function() {
                                            return this._len
                                        };
                                        var f = function(n) {
                                                this.value = n;
                                                this.next;
                                                this.prev
                                            },
                                            u = function(n) {
                                                this._list = new r;
                                                this._map = {};
                                                this._maxSize = n || 10
                                            },
                                            i = u.prototype;
                                        i.put = function(n, t) {
                                            var i = this._list,
                                                r = this._map,
                                                u, f, e;
                                            r[n] == null && (u = i.len(), u >= this._maxSize && u > 0 && (f = i.head, i.remove(f), delete r[f.key]), e = i.insert(t), e.key = n, r[n] = e)
                                        };
                                        i.get = function(n) {
                                            var t = this._map[n],
                                                i = this._list;
                                            if (t != null) return t !== i.tail && (i.remove(t), i.insertEntry(t)), t.value
                                        };
                                        i.clear = function() {
                                            this._list.clear();
                                            this._map = {}
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var f = i(46),
                                            e = i(4),
                                            u = i(8),
                                            r = function(n) {
                                                f.call(this, n)
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            type: "text",
                                            brush: function(n, t) {
                                                var i = this.style,
                                                    a = i.x || 0,
                                                    r = i.y || 0,
                                                    e = i.text,
                                                    s, c, l, f, v, h, o;
                                                if (e != null && (e += ""), i.bind(n, this, t), e) {
                                                    if (this.setTransform(n), c = i.textAlign, l = i.textFont || i.font, i.textVerticalAlign) {
                                                        f = u.getBoundingRect(e, l, i.textAlign, "top");
                                                        s = "middle";
                                                        switch (i.textVerticalAlign) {
                                                            case "middle":
                                                                r -= f.height / 2 - f.lineHeight / 2;
                                                                break;
                                                            case "bottom":
                                                                r -= f.height - f.lineHeight / 2;
                                                                break;
                                                            default:
                                                                r += f.lineHeight / 2
                                                        }
                                                    } else s = i.textBaseline;
                                                    for (n.font = l || "12px sans-serif", n.textAlign = c || "left", n.textAlign !== c && (n.textAlign = "left"), n.textBaseline = s || "alphabetic", n.textBaseline !== s && (n.textBaseline = "alphabetic"), v = u.measureText("国", n.font).width, h = e.split("\n"), o = 0; o < h.length; o++) i.hasFill() && n.fillText(h[o], a, r), i.hasStroke() && n.strokeText(h[o], a, r), r += v;
                                                    this.restoreTransform(n)
                                                }
                                            },
                                            getBoundingRect: function() {
                                                if (!this._rect) {
                                                    var n = this.style,
                                                        i = n.textVerticalAlign,
                                                        t = u.getBoundingRect(n.text + "", n.textFont || n.font, n.textAlign, i ? "top" : n.textBaseline);
                                                    switch (i) {
                                                        case "middle":
                                                            t.y -= t.height / 2;
                                                            break;
                                                        case "bottom":
                                                            t.y -= t.height
                                                    }
                                                    t.x += n.x || 0;
                                                    t.y += n.y || 0;
                                                    this._rect = t
                                                }
                                                return this._rect
                                            }
                                        };
                                        e.inherits(r, f);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";
                                        n.exports = i(45).extend({
                                            type: "circle",
                                            shape: {
                                                cx: 0,
                                                cy: 0,
                                                r: 0
                                            },
                                            buildPath: function(n, t, i) {
                                                i && n.moveTo(t.cx + t.r, t.cy);
                                                n.arc(t.cx, t.cy, t.r, 0, Math.PI * 2, !0)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(45).extend({
                                            type: "sector",
                                            shape: {
                                                cx: 0,
                                                cy: 0,
                                                r0: 0,
                                                r: 0,
                                                startAngle: 0,
                                                endAngle: Math.PI * 2,
                                                clockwise: !0
                                            },
                                            buildPath: function(n, t) {
                                                var r = t.cx,
                                                    u = t.cy,
                                                    i = Math.max(t.r0 || 0, 0),
                                                    o = Math.max(t.r, 0),
                                                    f = t.startAngle,
                                                    e = t.endAngle,
                                                    s = t.clockwise,
                                                    h = Math.cos(f),
                                                    c = Math.sin(f);
                                                n.moveTo(h * i + r, c * i + u);
                                                n.lineTo(h * o + r, c * o + u);
                                                n.arc(r, u, o, f, e, !s);
                                                n.lineTo(Math.cos(e) * i + r, Math.sin(e) * i + u);
                                                i !== 0 && n.arc(r, u, i, e, f, s);
                                                n.closePath()
                                            }
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(45).extend({
                                            type: "ring",
                                            shape: {
                                                cx: 0,
                                                cy: 0,
                                                r: 0,
                                                r0: 0
                                            },
                                            buildPath: function(n, t) {
                                                var i = t.cx,
                                                    r = t.cy,
                                                    u = Math.PI * 2;
                                                n.moveTo(i + t.r, r);
                                                n.arc(i, r, t.r, 0, u, !1);
                                                n.moveTo(i + t.r0, r);
                                                n.arc(i, r, t.r0, 0, u, !0)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(69);
                                        n.exports = i(45).extend({
                                            type: "polygon",
                                            shape: {
                                                points: null,
                                                smooth: !1,
                                                smoothConstraint: null
                                            },
                                            buildPath: function(n, t) {
                                                r.buildPath(n, t, !0)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(70),
                                            u = i(71);
                                        n.exports = {
                                            buildPath: function(n, t, i) {
                                                var f = t.points,
                                                    o = t.smooth,
                                                    h, s, e, v;
                                                if (f && f.length >= 2) {
                                                    if (o && o !== "spline")
                                                        for (h = u(f, o, i, t.smoothConstraint), n.moveTo(f[0][0], f[0][1]), s = f.length, e = 0; e < (i ? s : s - 1); e++) {
                                                            var c = h[e * 2],
                                                                l = h[e * 2 + 1],
                                                                a = f[(e + 1) % s];
                                                            n.bezierCurveTo(c[0], c[1], l[0], l[1], a[0], a[1])
                                                        } else
                                                            for (o === "spline" && (f = r(f, i)), n.moveTo(f[0][0], f[0][1]), e = 1, v = f.length; e < v; e++) n.lineTo(f[e][0], f[e][1]);
                                                    i && n.closePath()
                                                }
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function r(n, t, i, r, u, f, e) {
                                            var o = (i - n) * .5,
                                                s = (r - t) * .5;
                                            return (2 * (t - i) + o + s) * e + (-3 * (t - i) - 2 * o - s) * f + o * u + t
                                        }
                                        var u = i(10);
                                        n.exports = function(n, t) {
                                            for (var o, a, v, i = n.length, y = [], p = 0, e = 1; e < i; e++) p += u.distance(n[e - 1], n[e]);
                                            for (o = p / 2, o = o < i ? i : o, e = 0; e < o; e++) {
                                                var w = e / (o - 1) * (t ? i : i - 1),
                                                    f = Math.floor(w),
                                                    s = w - f,
                                                    h, b = n[f % i],
                                                    c, l;
                                                t ? (h = n[(f - 1 + i) % i], c = n[(f + 1) % i], l = n[(f + 2) % i]) : (h = n[f === 0 ? f : f - 1], c = n[f > i - 2 ? i - 1 : f + 1], l = n[f > i - 3 ? i - 1 : f + 2]);
                                                a = s * s;
                                                v = s * a;
                                                y.push([r(h[0], b[0], c[0], l[0], s, a, v), r(h[1], b[1], c[1], l[1], s, a, v)])
                                            }
                                            return y
                                        }
                                    }, function(n, t, i) {
                                        var r = i(10),
                                            u = r.min,
                                            f = r.max,
                                            e = r.scale,
                                            o = r.distance,
                                            s = r.add;
                                        n.exports = function(n, t, i, h) {
                                            var y = [],
                                                b = [],
                                                rt = [],
                                                ut = [],
                                                d, g, l, a, c, v, k, p, w;
                                            if (h) {
                                                for (l = [Infinity, Infinity], a = [-Infinity, -Infinity], c = 0, v = n.length; c < v; c++) u(l, l, n[c]), f(a, a, n[c]);
                                                u(l, l, h[0]);
                                                f(a, a, h[1])
                                            }
                                            for (c = 0, v = n.length; c < v; c++) {
                                                if (k = n[c], i) d = n[c ? c - 1 : v - 1], g = n[(c + 1) % v];
                                                else if (c === 0 || c === v - 1) {
                                                    y.push(r.clone(n[c]));
                                                    continue
                                                } else d = n[c - 1], g = n[c + 1];
                                                r.sub(b, g, d);
                                                e(b, b, t);
                                                var nt = o(k, d),
                                                    tt = o(k, g),
                                                    it = nt + tt;
                                                it !== 0 && (nt /= it, tt /= it);
                                                e(rt, b, -nt);
                                                e(ut, b, tt);
                                                p = s([], k, rt);
                                                w = s([], k, ut);
                                                h && (f(p, p, l), u(p, p, a), f(w, w, l), u(w, w, a));
                                                y.push(p);
                                                y.push(w)
                                            }
                                            return i && y.push(y.shift()), y
                                        }
                                    }, function(n, t, i) {
                                        var r = i(69);
                                        n.exports = i(45).extend({
                                            type: "polyline",
                                            shape: {
                                                points: null,
                                                smooth: !1,
                                                smoothConstraint: null
                                            },
                                            style: {
                                                stroke: "#000",
                                                fill: null
                                            },
                                            buildPath: function(n, t) {
                                                r.buildPath(n, t, !1)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(74);
                                        n.exports = i(45).extend({
                                            type: "rect",
                                            shape: {
                                                r: 0,
                                                x: 0,
                                                y: 0,
                                                width: 0,
                                                height: 0
                                            },
                                            buildPath: function(n, t) {
                                                var i = t.x,
                                                    u = t.y,
                                                    f = t.width,
                                                    e = t.height;
                                                t.r ? r.buildPath(n, t) : n.rect(i, u, f, e);
                                                n.closePath();
                                                return
                                            }
                                        })
                                    }, function(n) {
                                        n.exports = {
                                            buildPath: function(n, t) {
                                                var e = t.x,
                                                    o = t.y,
                                                    i = t.width,
                                                    r = t.height,
                                                    u = t.r,
                                                    f, s, h, c, l;
                                                i < 0 && (e = e + i, i = -i);
                                                r < 0 && (o = o + r, r = -r);
                                                typeof u == "number" ? f = s = h = c = u : u instanceof Array ? u.length === 1 ? f = s = h = c = u[0] : u.length === 2 ? (f = h = u[0], s = c = u[1]) : u.length === 3 ? (f = u[0], s = c = u[1], h = u[2]) : (f = u[0], s = u[1], h = u[2], c = u[3]) : f = s = h = c = 0;
                                                f + s > i && (l = f + s, f *= i / l, s *= i / l);
                                                h + c > i && (l = h + c, h *= i / l, c *= i / l);
                                                s + h > r && (l = s + h, s *= r / l, h *= r / l);
                                                f + c > r && (l = f + c, f *= r / l, c *= r / l);
                                                n.moveTo(e + f, o);
                                                n.lineTo(e + i - s, o);
                                                s !== 0 && n.quadraticCurveTo(e + i, o, e + i, o + s);
                                                n.lineTo(e + i, o + r - h);
                                                h !== 0 && n.quadraticCurveTo(e + i, o + r, e + i - h, o + r);
                                                n.lineTo(e + c, o + r);
                                                c !== 0 && n.quadraticCurveTo(e, o + r, e, o + r - c);
                                                n.lineTo(e, o + f);
                                                f !== 0 && n.quadraticCurveTo(e, o, e + f, o)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        n.exports = i(45).extend({
                                            type: "line",
                                            shape: {
                                                x1: 0,
                                                y1: 0,
                                                x2: 0,
                                                y2: 0,
                                                percent: 1
                                            },
                                            style: {
                                                stroke: "#000",
                                                fill: null
                                            },
                                            buildPath: function(n, t) {
                                                var f = t.x1,
                                                    e = t.y1,
                                                    r = t.x2,
                                                    u = t.y2,
                                                    i = t.percent;
                                                i !== 0 && (n.moveTo(f, e), i < 1 && (r = f * (1 - i) + r * i, u = e * (1 - i) + u * i), n.lineTo(r, u))
                                            },
                                            pointAt: function(n) {
                                                var t = this.shape;
                                                return [t.x1 * (1 - n) + t.x2 * n, t.y1 * (1 - n) + t.y2 * n]
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function l(n, t, i) {
                                            var r = n.cpx2,
                                                u = n.cpy2;
                                            return r === null || u === null ? [(i ? c : s)(n.x1, n.cpx1, n.cpx2, n.x2, t), (i ? c : s)(n.y1, n.cpy1, n.cpy2, n.y2, t)] : [(i ? h : o)(n.x1, n.cpx1, n.x2, t), (i ? h : o)(n.y1, n.cpy1, n.y2, t)]
                                        }
                                        var u = i(50),
                                            a = i(10),
                                            f = u.quadraticSubdivide,
                                            e = u.cubicSubdivide,
                                            o = u.quadraticAt,
                                            s = u.cubicAt,
                                            h = u.quadraticDerivativeAt,
                                            c = u.cubicDerivativeAt,
                                            r = [];
                                        n.exports = i(45).extend({
                                            type: "bezier-curve",
                                            shape: {
                                                x1: 0,
                                                y1: 0,
                                                x2: 0,
                                                y2: 0,
                                                cpx1: 0,
                                                cpy1: 0,
                                                percent: 1
                                            },
                                            style: {
                                                stroke: "#000",
                                                fill: null
                                            },
                                            buildPath: function(n, t) {
                                                var a = t.x1,
                                                    v = t.y1,
                                                    u = t.x2,
                                                    o = t.y2,
                                                    s = t.cpx1,
                                                    h = t.cpy1,
                                                    c = t.cpx2,
                                                    l = t.cpy2,
                                                    i = t.percent;
                                                i !== 0 && (n.moveTo(a, v), c == null || l == null ? (i < 1 && (f(a, s, u, i, r), s = r[1], u = r[2], f(v, h, o, i, r), h = r[1], o = r[2]), n.quadraticCurveTo(s, h, u, o)) : (i < 1 && (e(a, s, c, u, i, r), s = r[1], c = r[2], u = r[3], e(v, h, l, o, i, r), h = r[1], l = r[2], o = r[3]), n.bezierCurveTo(s, h, c, l, u, o)))
                                            },
                                            pointAt: function(n) {
                                                return l(this.shape, n, !1)
                                            },
                                            tangentAt: function(n) {
                                                var t = l(this.shape, n, !0);
                                                return a.normalize(t, t)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(45).extend({
                                            type: "arc",
                                            shape: {
                                                cx: 0,
                                                cy: 0,
                                                r: 0,
                                                startAngle: 0,
                                                endAngle: Math.PI * 2,
                                                clockwise: !0
                                            },
                                            style: {
                                                stroke: "#000",
                                                fill: null
                                            },
                                            buildPath: function(n, t) {
                                                var u = t.cx,
                                                    f = t.cy,
                                                    i = Math.max(t.r, 0),
                                                    r = t.startAngle,
                                                    e = t.endAngle,
                                                    o = t.clockwise,
                                                    s = Math.cos(r),
                                                    h = Math.sin(r);
                                                n.moveTo(s * i + u, h * i + f);
                                                n.arc(u, f, i, r, e, !o)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(45);
                                        n.exports = r.extend({
                                            type: "compound",
                                            shape: {
                                                paths: null
                                            },
                                            _updatePathDirty: function() {
                                                for (var n = this.__dirtyPath, i = this.shape.paths, t = 0; t < i.length; t++) n = n || i[t].__dirtyPath;
                                                this.__dirtyPath = n;
                                                this.__dirty = this.__dirty || n
                                            },
                                            beforeBrush: function() {
                                                var t, i, n;
                                                for (this._updatePathDirty(), t = this.shape.paths || [], i = this.getGlobalScale(), n = 0; n < t.length; n++) t[n].path.setScale(i[0], i[1])
                                            },
                                            buildPath: function(n, t) {
                                                for (var r = t.paths || [], i = 0; i < r.length; i++) r[i].buildPath(n, r[i].shape, !0)
                                            },
                                            afterBrush: function() {
                                                for (var t = this.shape.paths, n = 0; n < t.length; n++) t[n].__dirtyPath = !1
                                            },
                                            getBoundingRect: function() {
                                                return this._updatePathDirty(), r.prototype.getBoundingRect.call(this)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";
                                        var f = i(4),
                                            u = i(61),
                                            r = function(n, t, i, r, f, e) {
                                                this.x = n == null ? 0 : n;
                                                this.y = t == null ? 0 : t;
                                                this.x2 = i == null ? 1 : i;
                                                this.y2 = r == null ? 0 : r;
                                                this.type = "linear";
                                                this.global = e || !1;
                                                u.call(this, f)
                                            };
                                        r.prototype = {
                                            constructor: r
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";
                                        var f = i(4),
                                            u = i(61),
                                            r = function(n, t, i, r, f) {
                                                this.x = n == null ? .5 : n;
                                                this.y = t == null ? .5 : t;
                                                this.r = i == null ? .5 : i;
                                                this.type = "radial";
                                                this.global = f || !1;
                                                u.call(this, r)
                                            };
                                        r.prototype = {
                                            constructor: r
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        /*!
                                         * ZRender, a high performance 2d drawing library.
                                         *
                                         * Copyright (c) 2013, Baidu Inc.
                                         * All rights reserved.
                                         *
                                         * LICENSE
                                         * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
                                         */
                                        function y(n) {
                                            delete r[n]
                                        }
                                        var o = i(32),
                                            s = i(2),
                                            h = i(82),
                                            c = i(84),
                                            l = i(86),
                                            a = i(89),
                                            v = !s.canvasSupported,
                                            f = {
                                                canvas: i(91)
                                            },
                                            r = {},
                                            u = {},
                                            e;
                                        u.version = "3.2.0";
                                        u.init = function(n, t) {
                                            var i = new e(o(), n, t);
                                            return r[i.id] = i, i
                                        };
                                        u.dispose = function(n) {
                                            if (n) n.dispose();
                                            else {
                                                for (var t in r) r.hasOwnProperty(t) && r[t].dispose();
                                                r = {}
                                            }
                                            return u
                                        };
                                        u.getInstance = function(n) {
                                            return r[n]
                                        };
                                        u.registerPainter = function(n, t) {
                                            f[n] = t
                                        };
                                        e = function(n, t, i) {
                                            var o, y, p, w;
                                            i = i || {};
                                            this.dom = t;
                                            this.id = n;
                                            var u = this,
                                                r = new c,
                                                e = i.renderer;
                                            if (v) {
                                                if (!f.vml) throw new Error("You need to require 'zrender/vml/vml' to support IE8");
                                                e = "vml"
                                            } else e && f[e] || (e = "canvas");
                                            o = new f[e](t, r, i);
                                            this.storage = r;
                                            this.painter = o;
                                            y = s.node ? null : new a(o.getViewportRoot());
                                            this.handler = new h(r, o, y, o.root);
                                            this.animation = new l({
                                                stage: {
                                                    update: function() {
                                                        u._needsRefresh && u.refreshImmediately();
                                                        u._needsRefreshHover && u.refreshHoverImmediately()
                                                    }
                                                }
                                            });
                                            this.animation.start();
                                            this._needsRefresh;
                                            p = r.delFromMap;
                                            w = r.addToMap;
                                            r.delFromMap = function(n) {
                                                var t = r.get(n);
                                                p.call(r, n);
                                                t && t.removeSelfFromZr(u)
                                            };
                                            r.addToMap = function(n) {
                                                w.call(r, n);
                                                n.addSelfToZr(u)
                                            }
                                        };
                                        e.prototype = {
                                            constructor: e,
                                            getId: function() {
                                                return this.id
                                            },
                                            add: function(n) {
                                                this.storage.addRoot(n);
                                                this._needsRefresh = !0
                                            },
                                            remove: function(n) {
                                                this.storage.delRoot(n);
                                                this._needsRefresh = !0
                                            },
                                            configLayer: function(n, t) {
                                                this.painter.configLayer(n, t);
                                                this._needsRefresh = !0
                                            },
                                            refreshImmediately: function() {
                                                this._needsRefresh = !1;
                                                this.painter.refresh();
                                                this._needsRefresh = !1
                                            },
                                            refresh: function() {
                                                this._needsRefresh = !0
                                            },
                                            addHover: function(n, t) {
                                                this.painter.addHover && (this.painter.addHover(n, t), this.refreshHover())
                                            },
                                            removeHover: function(n) {
                                                this.painter.removeHover && (this.painter.removeHover(n), this.refreshHover())
                                            },
                                            clearHover: function() {
                                                this.painter.clearHover && (this.painter.clearHover(), this.refreshHover())
                                            },
                                            refreshHover: function() {
                                                this._needsRefreshHover = !0
                                            },
                                            refreshHoverImmediately: function() {
                                                this._needsRefreshHover = !1;
                                                this.painter.refreshHover && this.painter.refreshHover()
                                            },
                                            resize: function(n) {
                                                n = n || {};
                                                this.painter.resize(n.width, n.height);
                                                this.handler.resize()
                                            },
                                            clearAnimation: function() {
                                                this.animation.clear()
                                            },
                                            getWidth: function() {
                                                return this.painter.getWidth()
                                            },
                                            getHeight: function() {
                                                return this.painter.getHeight()
                                            },
                                            pathToImage: function(n, t, i) {
                                                var r = o();
                                                return this.painter.pathToImage(r, n, t, i)
                                            },
                                            setCursorStyle: function(n) {
                                                this.handler.setCursorStyle(n)
                                            },
                                            on: function(n, t, i) {
                                                this.handler.on(n, t, i)
                                            },
                                            off: function(n, t) {
                                                this.handler.off(n, t)
                                            },
                                            trigger: function(n, t) {
                                                this.handler.trigger(n, t)
                                            },
                                            clear: function() {
                                                this.storage.delRoot();
                                                this.painter.clear()
                                            },
                                            dispose: function() {
                                                this.animation.stop();
                                                this.clear();
                                                this.storage.dispose();
                                                this.painter.dispose();
                                                this.handler.dispose();
                                                this.animation = this.storage = this.painter = this.handler = null;
                                                y(this.id)
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";

                                        function h(n, t, i) {
                                            return {
                                                type: n,
                                                event: i,
                                                target: t,
                                                cancelBubble: !1,
                                                offsetX: i.zrX,
                                                offsetY: i.zrY,
                                                gestureEvent: i.gestureEvent,
                                                pinchX: i.pinchX,
                                                pinchY: i.pinchY,
                                                pinchScale: i.pinchScale,
                                                wheelDelta: i.zrDelta
                                            }
                                        }

                                        function o() {}

                                        function c(n, t, i) {
                                            if (n[n.rectHover ? "rectContain" : "contain"](t, i)) {
                                                for (var r = n; r;) {
                                                    if (r.silent || r.clipPath && !r.clipPath.contain(t, i)) return !1;
                                                    r = r.parent
                                                }
                                                return !0
                                            }
                                            return !1
                                        }
                                        var u = i(4),
                                            f = i(83),
                                            e = i(33),
                                            s, r;
                                        o.prototype.dispose = function() {};
                                        s = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"];
                                        r = function(n, t, i, r) {
                                            e.call(this);
                                            this.storage = n;
                                            this.painter = t;
                                            this.painterRoot = r;
                                            i = i || new o;
                                            this.proxy = i;
                                            i.handler = this;
                                            this._hovered;
                                            this._lastTouchMoment;
                                            this._lastX;
                                            this._lastY;
                                            f.call(this);
                                            u.each(s, function(n) {
                                                i.on && i.on(n, this[n], this)
                                            }, this)
                                        };
                                        r.prototype = {
                                            constructor: r,
                                            mousemove: function(n) {
                                                var u = n.zrX,
                                                    f = n.zrY,
                                                    t = this.findHover(u, f, null),
                                                    i = this._hovered,
                                                    r = this.proxy;
                                                this._hovered = t;
                                                r.setCursor && r.setCursor(t ? t.cursor : "default");
                                                i && t !== i && i.__zr && this.dispatchToElement(i, "mouseout", n);
                                                this.dispatchToElement(t, "mousemove", n);
                                                t && t !== i && this.dispatchToElement(t, "mouseover", n)
                                            },
                                            mouseout: function(n) {
                                                this.dispatchToElement(this._hovered, "mouseout", n);
                                                var t = n.toElement || n.relatedTarget,
                                                    i;
                                                do t = t && t.parentNode; while (t && t.nodeType != 9 && !(i = t === this.painterRoot));
                                                i || this.trigger("globalout", {
                                                    event: n
                                                })
                                            },
                                            resize: function() {
                                                this._hovered = null
                                            },
                                            dispatch: function(n, t) {
                                                var i = this[n];
                                                i && i.call(this, t)
                                            },
                                            dispose: function() {
                                                this.proxy.dispose();
                                                this.storage = this.proxy = this.painter = null
                                            },
                                            setCursorStyle: function(n) {
                                                var t = this.proxy;
                                                t.setCursor && t.setCursor(n)
                                            },
                                            dispatchToElement: function(n, t, i) {
                                                for (var f = "on" + t, r = h(t, n, i), u = n; u;)
                                                    if (u[f] && (r.cancelBubble = u[f].call(u, r)), u.trigger(t, r), u = u.parent, r.cancelBubble) break;
                                                r.cancelBubble || (this.trigger(t, r), this.painter && this.painter.eachOtherLayer(function(n) {
                                                    typeof n[f] == "function" && n[f].call(n, r);
                                                    n.trigger && n.trigger(t, r)
                                                }))
                                            },
                                            findHover: function(n, t, i) {
                                                for (var u = this.storage.getDisplayList(), r = u.length - 1; r >= 0; r--)
                                                    if (!u[r].silent && u[r] !== i && !u[r].ignore && c(u[r], n, t)) return u[r]
                                            }
                                        };
                                        u.each(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(n) {
                                            r.prototype[n] = function(t) {
                                                var i = this.findHover(t.zrX, t.zrY, null);
                                                if (n === "mousedown") this._downel = i, this._upel = i;
                                                else if (n === "mosueup") this._upel = i;
                                                else if (n === "click" && this._downel !== this._upel) return;
                                                this.dispatchToElement(i, n, t)
                                            }
                                        });
                                        u.mixin(r, e);
                                        u.mixin(r, f);
                                        n.exports = r
                                    }, function(n) {
                                        function t() {
                                            this.on("mousedown", this._dragStart, this);
                                            this.on("mousemove", this._drag, this);
                                            this.on("mouseup", this._dragEnd, this);
                                            this.on("globalout", this._dragEnd, this)
                                        }
                                        t.prototype = {
                                            constructor: t,
                                            _dragStart: function(n) {
                                                var t = n.target;
                                                t && t.draggable && (this._draggingTarget = t, t.dragging = !0, this._x = n.offsetX, this._y = n.offsetY, this.dispatchToElement(t, "dragstart", n.event))
                                            },
                                            _drag: function(n) {
                                                var i = this._draggingTarget,
                                                    t, r;
                                                if (i) {
                                                    var u = n.offsetX,
                                                        f = n.offsetY,
                                                        e = u - this._x,
                                                        o = f - this._y;
                                                    this._x = u;
                                                    this._y = f;
                                                    i.drift(e, o, n);
                                                    this.dispatchToElement(i, "drag", n.event);
                                                    t = this.findHover(u, f, i);
                                                    r = this._dropTarget;
                                                    this._dropTarget = t;
                                                    i !== t && (r && t !== r && this.dispatchToElement(r, "dragleave", n.event), t && t !== r && this.dispatchToElement(t, "dragenter", n.event))
                                                }
                                            },
                                            _dragEnd: function(n) {
                                                var t = this._draggingTarget;
                                                t && (t.dragging = !1);
                                                this.dispatchToElement(t, "dragend", n.event);
                                                this._dropTarget && this.dispatchToElement(this._dropTarget, "drop", n.event);
                                                this._draggingTarget = null;
                                                this._dropTarget = null
                                            }
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n, t) {
                                            return n.zlevel === t.zlevel ? n.z === t.z ? n.z2 - t.z2 : n.z - t.z : n.zlevel - t.zlevel
                                        }
                                        var e = i(4),
                                            o = i(2),
                                            r = i(30),
                                            s = i(85),
                                            u = function() {
                                                this._elements = {};
                                                this._roots = [];
                                                this._displayList = [];
                                                this._displayListLen = 0
                                            };
                                        u.prototype = {
                                            constructor: u,
                                            traverse: function(n, t) {
                                                for (var i = 0; i < this._roots.length; i++) this._roots[i].traverse(n, t)
                                            },
                                            getDisplayList: function(n, t) {
                                                return t = t || !1, n && this.updateDisplayList(t), this._displayList
                                            },
                                            updateDisplayList: function(n) {
                                                var i, r, t, u;
                                                for (this._displayListLen = 0, i = this._roots, r = this._displayList, t = 0, u = i.length; t < u; t++) this._updateAndAddDisplayable(i[t], null, n);
                                                r.length = this._displayListLen;
                                                o.canvasSupported && s(r, f)
                                            },
                                            _updateAndAddDisplayable: function(n, t, i) {
                                                var r, f, u, e;
                                                if (!n.ignore || i)
                                                    if (n.beforeUpdate(), n.__dirty && n.update(), n.afterUpdate(), r = n.clipPath, r && (r.parent = n, r.updateTransform(), t ? (t = t.slice(), t.push(r)) : t = [r]), n.isGroup) {
                                                        for (f = n._children, u = 0; u < f.length; u++) e = f[u], n.__dirty && (e.__dirty = !0), this._updateAndAddDisplayable(e, t, i);
                                                        n.__dirty = !1
                                                    } else n.__clipPaths = t, this._displayList[this._displayListLen++] = n
                                            },
                                            addRoot: function(n) {
                                                this._elements[n.id] || (n instanceof r && n.addChildrenToStorage(this), this.addToMap(n), this._roots.push(n))
                                            },
                                            delRoot: function(n) {
                                                var u, t, o, i, f;
                                                if (n == null) {
                                                    for (t = 0; t < this._roots.length; t++) u = this._roots[t], u instanceof r && u.delChildrenFromStorage(this);
                                                    this._elements = {};
                                                    this._roots = [];
                                                    this._displayList = [];
                                                    this._displayListLen = 0;
                                                    return
                                                }
                                                if (n instanceof Array) {
                                                    for (t = 0, o = n.length; t < o; t++) this.delRoot(n[t]);
                                                    return
                                                }
                                                i = typeof n == "string" ? this._elements[n] : n;
                                                f = e.indexOf(this._roots, i);
                                                f >= 0 && (this.delFromMap(i.id), this._roots.splice(f, 1), i instanceof r && i.delChildrenFromStorage(this))
                                            },
                                            addToMap: function(n) {
                                                return n instanceof r && (n.__storage = this), n.dirty(!1), this._elements[n.id] = n, this
                                            },
                                            get: function(n) {
                                                return this._elements[n]
                                            },
                                            delFromMap: function(n) {
                                                var i = this._elements,
                                                    t = i[n];
                                                return t && (delete i[n], t instanceof r && (t.__storage = null)), this
                                            },
                                            dispose: function() {
                                                this._elements = this._renderList = this._roots = null
                                            },
                                            displayableSortFunc: f
                                        };
                                        n.exports = u
                                    }, function(n) {
                                        function s(n) {
                                            for (var t = 0; n >= u;) t |= n & 1, n >>= 1;
                                            return n + t
                                        }

                                        function e(n, t, i, r) {
                                            var u = t + 1;
                                            if (u === i) return 1;
                                            if (r(n[u++], n[t]) < 0) {
                                                while (u < i && r(n[u], n[u - 1]) < 0) u++;
                                                h(n, t, u)
                                            } else
                                                while (u < i && r(n[u], n[u - 1]) >= 0) u++;
                                            return u - t
                                        }

                                        function h(n, t, i) {
                                            for (i--; t < i;) {
                                                var r = n[t];
                                                n[t++] = n[i];
                                                n[i--] = r
                                            }
                                        }

                                        function o(n, t, i, r, u) {
                                            var e;
                                            for (r === t && r++; r < i; r++) {
                                                for (var h = n[r], f = t, s = r, o; f < s;) o = f + s >>> 1, u(h, n[o]) < 0 ? s = o : f = o + 1;
                                                e = r - f;
                                                switch (e) {
                                                    case 3:
                                                        n[f + 3] = n[f + 2];
                                                    case 2:
                                                        n[f + 2] = n[f + 1];
                                                    case 1:
                                                        n[f + 1] = n[f];
                                                        break;
                                                    default:
                                                        while (e > 0) n[f + e] = n[f + e - 1], e--
                                                }
                                                n[f] = h
                                            }
                                        }

                                        function i(n, t, i, r, u, f) {
                                            var o = 0,
                                                s = 0,
                                                e = 1,
                                                c, h;
                                            if (f(n, t[i + u]) > 0) {
                                                for (s = r - u; e < s && f(n, t[i + u + e]) > 0;) o = e, e = (e << 1) + 1, e <= 0 && (e = s);
                                                e > s && (e = s);
                                                o += u;
                                                e += u
                                            } else {
                                                for (s = u + 1; e < s && f(n, t[i + u - e]) <= 0;) o = e, e = (e << 1) + 1, e <= 0 && (e = s);
                                                e > s && (e = s);
                                                c = o;
                                                o = u - e;
                                                e = u - c
                                            }
                                            for (o++; o < e;) h = o + (e - o >>> 1), f(n, t[i + h]) > 0 ? o = h + 1 : e = h;
                                            return e
                                        }

                                        function r(n, t, i, r, u, f) {
                                            var o = 0,
                                                s = 0,
                                                e = 1,
                                                c, h;
                                            if (f(n, t[i + u]) < 0) {
                                                for (s = u + 1; e < s && f(n, t[i + u - e]) < 0;) o = e, e = (e << 1) + 1, e <= 0 && (e = s);
                                                e > s && (e = s);
                                                c = o;
                                                o = u - e;
                                                e = u - c
                                            } else {
                                                for (s = r - u; e < s && f(n, t[i + u + e]) >= 0;) o = e, e = (e << 1) + 1, e <= 0 && (e = s);
                                                e > s && (e = s);
                                                o += u;
                                                e += u
                                            }
                                            for (o++; o < e;) h = o + (e - o >>> 1), f(n, t[i + h]) < 0 ? e = h : o = h + 1;
                                            return e
                                        }

                                        function c(n, u) {
                                            function p(n, t) {
                                                l[s] = n;
                                                o[s] = t;
                                                s += 1
                                            }

                                            function w() {
                                                while (s > 1) {
                                                    var n = s - 2;
                                                    if (n >= 1 && o[n - 1] <= o[n] + o[n + 1] || n >= 2 && o[n - 2] <= o[n] + o[n - 1]) o[n - 1] < o[n + 1] && n--;
                                                    else if (o[n] > o[n + 1]) break;
                                                    a(n)
                                                }
                                            }

                                            function b() {
                                                while (s > 1) {
                                                    var n = s - 2;
                                                    n > 0 && o[n - 1] < o[n + 1] && n--;
                                                    a(n)
                                                }
                                            }

                                            function a(t) {
                                                var h = l[t],
                                                    f = o[t],
                                                    c = l[t + 1],
                                                    e = o[t + 1],
                                                    a;
                                                (o[t] = f + e, t === s - 3 && (l[t + 1] = l[t + 2], o[t + 1] = o[t + 2]), s--, a = r(n[c], n, h, f, 0, u), h += a, f -= a, f !== 0) && (e = i(n[h + f - 1], n, c, e, e - 1, u), e !== 0) && (f <= e ? k(h, f, c, e) : d(h, f, c, e))
                                            }

                                            function k(f, o, s, c) {
                                                for (var l = 0, k, y, p, b, l = 0; l < o; l++) e[l] = n[f + l];
                                                var v = 0,
                                                    w = s,
                                                    a = f;
                                                if (n[a++] = n[w++], --c == 0) {
                                                    for (l = 0; l < o; l++) n[a + l] = e[v + l];
                                                    return
                                                }
                                                if (o === 1) {
                                                    for (l = 0; l < c; l++) n[a + l] = n[w + l];
                                                    n[a + c] = e[v];
                                                    return
                                                }
                                                for (k = h;;) {
                                                    y = 0;
                                                    p = 0;
                                                    b = !1;
                                                    do
                                                        if (u(n[w], e[v]) < 0) {
                                                            if (n[a++] = n[w++], p++, y = 0, --c == 0) {
                                                                b = !0;
                                                                break
                                                            }
                                                        } else if (n[a++] = e[v++], y++, p = 0, --o == 1) {
                                                        b = !0;
                                                        break
                                                    } while ((y | p) < k);
                                                    if (b) break;
                                                    do {
                                                        if (y = r(n[w], e, v, o, 0, u), y !== 0) {
                                                            for (l = 0; l < y; l++) n[a + l] = e[v + l];
                                                            if (a += y, v += y, o -= y, o <= 1) {
                                                                b = !0;
                                                                break
                                                            }
                                                        }
                                                        if (n[a++] = n[w++], --c == 0) {
                                                            b = !0;
                                                            break
                                                        }
                                                        if (p = i(e[v], n, w, c, 0, u), p !== 0) {
                                                            for (l = 0; l < p; l++) n[a + l] = n[w + l];
                                                            if (a += p, w += p, c -= p, c === 0) {
                                                                b = !0;
                                                                break
                                                            }
                                                        }
                                                        if (n[a++] = e[v++], --o == 1) {
                                                            b = !0;
                                                            break
                                                        }
                                                        k--
                                                    } while (y >= t || p >= t);
                                                    if (b) break;
                                                    k < 0 && (k = 0);
                                                    k += 2
                                                }
                                                if (h = k, h < 1 && (h = 1), o === 1) {
                                                    for (l = 0; l < c; l++) n[a + l] = n[w + l];
                                                    n[a + c] = e[v]
                                                } else if (o === 0) throw new Error;
                                                else
                                                    for (l = 0; l < o; l++) n[a + l] = e[v + l]
                                            }

                                            function d(f, o, s, c) {
                                                for (var l = 0, g, l = 0; l < c; l++) e[l] = n[s + l];
                                                var y = f + o - 1,
                                                    b = c - 1,
                                                    a = s + c - 1,
                                                    v = 0,
                                                    k = 0;
                                                if (n[a--] = n[y--], --o == 0) {
                                                    for (v = a - (c - 1), l = 0; l < c; l++) n[v + l] = e[l];
                                                    return
                                                }
                                                if (c === 1) {
                                                    for (a -= o, y -= o, k = a + 1, v = y + 1, l = o - 1; l >= 0; l--) n[k + l] = n[v + l];
                                                    n[a] = e[b];
                                                    return
                                                }
                                                for (g = h;;) {
                                                    var p = 0,
                                                        w = 0,
                                                        d = !1;
                                                    do
                                                        if (u(e[b], n[y]) < 0) {
                                                            if (n[a--] = n[y--], p++, w = 0, --o == 0) {
                                                                d = !0;
                                                                break
                                                            }
                                                        } else if (n[a--] = e[b--], w++, p = 0, --c == 1) {
                                                        d = !0;
                                                        break
                                                    } while ((p | w) < g);
                                                    if (d) break;
                                                    do {
                                                        if (p = o - r(e[b], n, f, o, o - 1, u), p !== 0) {
                                                            for (a -= p, y -= p, o -= p, k = a + 1, v = y + 1, l = p - 1; l >= 0; l--) n[k + l] = n[v + l];
                                                            if (o === 0) {
                                                                d = !0;
                                                                break
                                                            }
                                                        }
                                                        if (n[a--] = e[b--], --c == 1) {
                                                            d = !0;
                                                            break
                                                        }
                                                        if (w = c - i(n[y], e, 0, c, c - 1, u), w !== 0) {
                                                            for (a -= w, b -= w, c -= w, k = a + 1, v = b + 1, l = 0; l < w; l++) n[k + l] = e[v + l];
                                                            if (c <= 1) {
                                                                d = !0;
                                                                break
                                                            }
                                                        }
                                                        if (n[a--] = n[y--], --o == 0) {
                                                            d = !0;
                                                            break
                                                        }
                                                        g--
                                                    } while (p >= t || w >= t);
                                                    if (d) break;
                                                    g < 0 && (g = 0);
                                                    g += 2
                                                }
                                                if (h = g, h < 1 && (h = 1), c === 1) {
                                                    for (a -= o, y -= o, k = a + 1, v = y + 1, l = o - 1; l >= 0; l--) n[k + l] = n[v + l];
                                                    n[a] = e[b]
                                                } else if (c === 0) throw new Error;
                                                else
                                                    for (v = a - (c - 1), l = 0; l < c; l++) n[v + l] = e[l]
                                            }
                                            var h = t,
                                                c = 0,
                                                v = f,
                                                y = 0,
                                                l, o, s = 0,
                                                e;
                                            c = n.length;
                                            c < 2 * f && (v = c >>> 1);
                                            e = [];
                                            y = c < 120 ? 5 : c < 1542 ? 10 : c < 119151 ? 19 : 40;
                                            l = [];
                                            o = [];
                                            this.mergeRuns = w;
                                            this.forceMergeRuns = b;
                                            this.pushRun = p
                                        }

                                        function l(n, t, i, r) {
                                            var h, f, a, v, l;
                                            if (i || (i = 0), r || (r = n.length), h = r - i, !(h < 2)) {
                                                if (f = 0, h < u) {
                                                    f = e(n, i, r, t);
                                                    o(n, i, r, i + f, t);
                                                    return
                                                }
                                                a = new c(n, t);
                                                v = s(h);
                                                do f = e(n, i, r, t), f < v && (l = h, l > v && (l = v), o(n, i, i + l, i + f, t), f = l), a.pushRun(i, f), a.mergeRuns(), h -= f, i += f; while (h !== 0);
                                                a.forceMergeRuns()
                                            }
                                        }
                                        var u = 32,
                                            t = 7,
                                            f = 256;
                                        n.exports = l
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(4),
                                            f = i(87).Dispatcher,
                                            e = i(88),
                                            o = i(36),
                                            r = function(n) {
                                                n = n || {};
                                                this.stage = n.stage || {};
                                                this.onframe = n.onframe || function() {};
                                                this._clips = [];
                                                this._running = !1;
                                                this._time;
                                                this._pausedTime;
                                                this._pauseStart;
                                                this._paused = !1;
                                                f.call(this)
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            addClip: function(n) {
                                                this._clips.push(n)
                                            },
                                            addAnimator: function(n) {
                                                var i, t;
                                                for (n.animation = this, i = n.getClips(), t = 0; t < i.length; t++) this.addClip(i[t])
                                            },
                                            removeClip: function(n) {
                                                var t = u.indexOf(this._clips, n);
                                                t >= 0 && this._clips.splice(t, 1)
                                            },
                                            removeAnimator: function(n) {
                                                for (var i = n.getClips(), t = 0; t < i.length; t++) this.removeClip(i[t]);
                                                n.animation = null
                                            },
                                            _update: function() {
                                                for (var f, e, r = (new Date).getTime() - this._pausedTime, o = r - this._time, t = this._clips, i = t.length, u = [], s = [], n = 0; n < i; n++) f = t[n], e = f.step(r), e && (u.push(e), s.push(f));
                                                for (n = 0; n < i;) t[n]._needsRemove ? (t[n] = t[i - 1], t.pop(), i--) : n++;
                                                for (i = u.length, n = 0; n < i; n++) s[n].fire(u[n]);
                                                this._time = r;
                                                this.onframe(o);
                                                this.trigger("frame", o);
                                                this.stage.update && this.stage.update()
                                            },
                                            _startLoop: function() {
                                                function t() {
                                                    n._running && (e(t), n._paused || n._update())
                                                }
                                                var n = this;
                                                this._running = !0;
                                                e(t)
                                            },
                                            start: function() {
                                                this._time = (new Date).getTime();
                                                this._pausedTime = 0;
                                                this._startLoop()
                                            },
                                            stop: function() {
                                                this._running = !1
                                            },
                                            pause: function() {
                                                this._paused || (this._pauseStart = (new Date).getTime(), this._paused = !0)
                                            },
                                            resume: function() {
                                                this._paused && (this._pausedTime += (new Date).getTime() - this._pauseStart, this._paused = !1)
                                            },
                                            clear: function() {
                                                this._clips = []
                                            },
                                            animate: function(n, t) {
                                                t = t || {};
                                                return new o(n, t.loop, t.getter, t.setter)
                                            }
                                        };
                                        u.mixin(r, f);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function s(n) {
                                            return n.getBoundingClientRect ? n.getBoundingClientRect() : {
                                                left: 0,
                                                top: 0
                                            }
                                        }

                                        function u(n, t, i) {
                                            return t.currentTarget && n === t.currentTarget ? o.browser.firefox && t.layerX != null && t.layerX !== t.offsetX ? (i.zrX = t.layerX, i.zrY = t.layerY) : t.offsetX != null ? (i.zrX = t.offsetX, i.zrY = t.offsetY) : f(n, t, i) : f(n, t, i), i
                                        }

                                        function f(n, t, i) {
                                            var r = s(n);
                                            i = i || {};
                                            i.zrX = t.clientX - r.left;
                                            i.zrY = t.clientY - r.top
                                        }

                                        function h(n, t) {
                                            var i, f, r;
                                            return (t = t || window.event, t.zrX != null) ? t : (i = t.type, f = i && i.indexOf("touch") >= 0, f ? (r = i != "touchend" ? t.targetTouches[0] : t.changedTouches[0], r && u(n, r, t)) : (u(n, t, t), t.zrDelta = t.wheelDelta ? t.wheelDelta / 120 : -(t.detail || 0) / 3), t)
                                        }

                                        function c(n, t, i) {
                                            r ? n.addEventListener(t, i) : n.attachEvent("on" + t, i)
                                        }

                                        function l(n, t, i) {
                                            r ? n.removeEventListener(t, i) : n.detachEvent("on" + t, i)
                                        }
                                        var e = i(33),
                                            o = i(2),
                                            r = typeof window != "undefined" && !!window.addEventListener,
                                            a = r ? function(n) {
                                                n.preventDefault();
                                                n.stopPropagation();
                                                n.cancelBubble = !0
                                            } : function(n) {
                                                n.returnValue = !1;
                                                n.cancelBubble = !0
                                            };
                                        n.exports = {
                                            clientToLocal: u,
                                            normalizeEvent: h,
                                            addEventListener: c,
                                            removeEventListener: l,
                                            stop: a,
                                            Dispatcher: e
                                        }
                                    }, function(n) {
                                        n.exports = typeof window != "undefined" && (window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(n) {
                                            setTimeout(n, 16)
                                        }
                                    }, function(n, t, i) {
                                        function p(n) {
                                            return n === "mousewheel" && y.browser.firefox ? "DOMMouseScroll" : n
                                        }

                                        function h(n, t, i) {
                                            var u = n._gestureMgr,
                                                r, f;
                                            i === "start" && u.clear();
                                            r = u.recognize(t, n.handler.findHover(t.zrX, t.zrY, null), n.dom);
                                            i === "end" && u.clear();
                                            r && (f = r.type, t.gestureEvent = f, n.handler.dispatchToElement(r.target, f, r.event))
                                        }

                                        function c(n) {
                                            n._touching = !0;
                                            clearTimeout(n._touchTimer);
                                            n._touchTimer = setTimeout(function() {
                                                n._touching = !1
                                            }, 700)
                                        }

                                        function g() {
                                            return y.touchEventsSupported
                                        }

                                        function nt(n) {
                                            function u(n, t) {
                                                return function() {
                                                    if (!t._touching) return n.apply(t, arguments)
                                                }
                                            }
                                            for (var i, t = 0; t < o.length; t++) i = o[t], n._handlers[i] = f.bind(r[i], n);
                                            for (t = 0; t < e.length; t++) i = e[t], n._handlers[i] = u(r[i], n)
                                        }

                                        function l(n) {
                                            function t(t, i) {
                                                f.each(t, function(t) {
                                                    b(n, p(t), i._handlers[t])
                                                }, i)
                                            }
                                            v.call(this);
                                            this.dom = n;
                                            this._touching = !1;
                                            this._touchTimer;
                                            this._gestureMgr = new w;
                                            this._handlers = {};
                                            nt(this);
                                            g() && t(o, this);
                                            t(e, this)
                                        }
                                        var s = i(87),
                                            f = i(4),
                                            v = i(33),
                                            y = i(2),
                                            w = i(90),
                                            b = s.addEventListener,
                                            k = s.removeEventListener,
                                            u = s.normalizeEvent,
                                            d = 300,
                                            e = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
                                            o = ["touchstart", "touchend", "touchmove"],
                                            r = {
                                                mousemove: function(n) {
                                                    n = u(this.dom, n);
                                                    this.trigger("mousemove", n)
                                                },
                                                mouseout: function(n) {
                                                    n = u(this.dom, n);
                                                    var t = n.toElement || n.relatedTarget;
                                                    if (t != this.dom)
                                                        while (t && t.nodeType != 9) {
                                                            if (t === this.dom) return;
                                                            t = t.parentNode
                                                        }
                                                    this.trigger("mouseout", n)
                                                },
                                                touchstart: function(n) {
                                                    n = u(this.dom, n);
                                                    this._lastTouchMoment = new Date;
                                                    h(this, n, "start");
                                                    r.mousemove.call(this, n);
                                                    r.mousedown.call(this, n);
                                                    c(this)
                                                },
                                                touchmove: function(n) {
                                                    n = u(this.dom, n);
                                                    h(this, n, "change");
                                                    r.mousemove.call(this, n);
                                                    c(this)
                                                },
                                                touchend: function(n) {
                                                    n = u(this.dom, n);
                                                    h(this, n, "end");
                                                    r.mouseup.call(this, n); + new Date - this._lastTouchMoment < d && r.click.call(this, n);
                                                    c(this)
                                                }
                                            },
                                            a;
                                        f.each(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(n) {
                                            r[n] = function(t) {
                                                t = u(this.dom, t);
                                                this.trigger(n, t)
                                            }
                                        });
                                        a = l.prototype;
                                        a.dispose = function() {
                                            for (var t, i = e.concat(o), n = 0; n < i.length; n++) t = i[n], k(this.dom, p(t), this._handlers[t])
                                        };
                                        a.setCursor = function(n) {
                                            this.dom.style.cursor = n || "default"
                                        };
                                        f.mixin(l, v);
                                        n.exports = l
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n) {
                                            var t = n[1][0] - n[0][0],
                                                i = n[1][1] - n[0][1];
                                            return Math.sqrt(t * t + i * i)
                                        }

                                        function o(n) {
                                            return [(n[0][0] + n[1][0]) / 2, (n[0][1] + n[1][1]) / 2]
                                        }
                                        var e = i(87),
                                            u = function() {
                                                this._track = []
                                            },
                                            r;
                                        u.prototype = {
                                            constructor: u,
                                            recognize: function(n, t, i) {
                                                return this._doTrack(n, t, i), this._recognize(n)
                                            },
                                            clear: function() {
                                                return this._track.length = 0, this
                                            },
                                            _doTrack: function(n, t, i) {
                                                var f = n.touches,
                                                    r, u, h, o, s;
                                                if (f) {
                                                    for (r = {
                                                            points: [],
                                                            touches: [],
                                                            target: t,
                                                            event: n
                                                        }, u = 0, h = f.length; u < h; u++) o = f[u], s = e.clientToLocal(i, o), r.points.push([s.zrX, s.zrY]), r.touches.push(o);
                                                    this._track.push(r)
                                                }
                                            },
                                            _recognize: function(n) {
                                                var t, i;
                                                for (t in r)
                                                    if (r.hasOwnProperty(t) && (i = r[t](this._track, n), i)) return i
                                            }
                                        };
                                        r = {
                                            pinch: function(n, t) {
                                                var e = n.length,
                                                    i, r, u, s;
                                                if (e) return i = (n[e - 1] || {}).points, r = (n[e - 2] || {}).points || i, r && r.length > 1 && i && i.length > 1 ? (u = f(i) / f(r), isFinite(u) || (u = 1), t.pinchScale = u, s = o(i), t.pinchX = s[0], t.pinchY = s[1], {
                                                    type: "pinch",
                                                    target: n[0].target,
                                                    event: t
                                                }) : void 0
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n) {
                                            return parseInt(n, 10)
                                        }

                                        function p(n) {
                                            return n ? n.isBuildin ? !0 : typeof n.resize != "function" || typeof n.refresh != "function" ? !1 : !0 : !1
                                        }

                                        function w(n) {
                                            n.__unusedCount++
                                        }

                                        function b(n) {
                                            n.__unusedCount == 1 && n.clear()
                                        }

                                        function k(n, t, i) {
                                            return s.copy(n.getBoundingRect()), n.transform && s.applyTransform(n.transform), h.width = t, h.height = i, !s.intersect(h)
                                        }

                                        function d(n, t) {
                                            if (n == t) return !1;
                                            if (!n || !t || n.length !== t.length) return !0;
                                            for (var i = 0; i < n.length; i++)
                                                if (n[i] !== t[i]) return !0
                                        }

                                        function g(n, t) {
                                            for (var i, u, r = 0; r < n.length; r++) i = n[r], u = i.path, i.setTransform(t), u.beginPath(t), i.buildPath(u, i.shape), t.clip(), i.restoreTransform(t)
                                        }

                                        function nt(n, t) {
                                            var i = document.createElement("div");
                                            return i.style.cssText = ["position:relative", "overflow:hidden", "width:" + n + "px", "height:" + t + "px", "padding:0", "margin:0", "border-width:0"].join(";") + ";", i
                                        }
                                        var v = i(41),
                                            r = i(4),
                                            e = i(40),
                                            l = i(9),
                                            y = i(85),
                                            u = i(92),
                                            a = i(88),
                                            o = 5,
                                            s = new l(0, 0, 0, 0),
                                            h = new l(0, 0, 0, 0),
                                            c = function(n, t, i) {
                                                var o = !n.nodeName || n.nodeName.toUpperCase() === "CANVAS",
                                                    f, s, h, c, l, a, e;
                                                this._opts = i = r.extend({}, i || {});
                                                this.dpr = i.devicePixelRatio || v.devicePixelRatio;
                                                this._singleCanvas = o;
                                                this.root = n;
                                                f = n.style;
                                                f && (f["-webkit-tap-highlight-color"] = "transparent", f["-webkit-user-select"] = f["user-select"] = f["-webkit-touch-callout"] = "none", n.innerHTML = "");
                                                this.storage = t;
                                                s = this._zlevelList = [];
                                                h = this._layers = {};
                                                this._layerConfig = {};
                                                o ? (l = n.width, a = n.height, this._width = l, this._height = a, e = new u(n, this, 1), e.initContext(), h[0] = e, s.push(0)) : (this._width = this._getSize(0), this._height = this._getSize(1), c = this._domRoot = nt(this._width, this._height), n.appendChild(c));
                                                this.pathToImage = this._createPathToImage();
                                                this._progressiveLayers = [];
                                                this._hoverlayer;
                                                this._hoverElements = []
                                            };
                                        c.prototype = {
                                            constructor: c,
                                            isSingleCanvas: function() {
                                                return this._singleCanvas
                                            },
                                            getViewportRoot: function() {
                                                return this._singleCanvas ? this._layers[0].dom : this._domRoot
                                            },
                                            refresh: function(n) {
                                                var f = this.storage.getDisplayList(!0),
                                                    r = this._zlevelList,
                                                    t, u, i;
                                                for (this._paintList(f, n), t = 0; t < r.length; t++) u = r[t], i = this._layers[u], !i.isBuildin && i.refresh && i.refresh();
                                                return this.refreshHover(), this._progressiveLayers.length && this._startProgessive(), this
                                            },
                                            addHover: function(n, t) {
                                                if (!n.__hoverMir) {
                                                    var i = new n.constructor({
                                                        style: n.style,
                                                        shape: n.shape
                                                    });
                                                    i.__from = n;
                                                    n.__hoverMir = i;
                                                    i.setStyle(t);
                                                    this._hoverElements.push(i)
                                                }
                                            },
                                            removeHover: function(n) {
                                                var u = n.__hoverMir,
                                                    t = this._hoverElements,
                                                    i = r.indexOf(t, u);
                                                i >= 0 && t.splice(i, 1);
                                                n.__hoverMir = null
                                            },
                                            clearHover: function() {
                                                for (var i, n = this._hoverElements, t = 0; t < n.length; t++) i = n[t].__from, i && (i.__hoverMir = null);
                                                n.length = 0
                                            },
                                            refreshHover: function() {
                                                var u = this._hoverElements,
                                                    f = u.length,
                                                    t = this._hoverlayer,
                                                    e, r, i, n;
                                                if (t && t.clear(), f) {
                                                    for (y(u, this.storage.displayableSortFunc), t || (t = this._hoverlayer = this.getLayer(1e5)), e = {}, t.ctx.save(), r = 0; r < f;) {
                                                        if (i = u[r], n = i.__from, !(n && n.__zr)) {
                                                            u.splice(r, 1);
                                                            n.__hoverMir = null;
                                                            f--;
                                                            continue
                                                        }
                                                        r++;
                                                        n.invisible || (i.transform = n.transform, i.invTransform = n.invTransform, i.__clipPaths = n.__clipPaths, this._doPaintEl(i, t, !0, e))
                                                    }
                                                    t.ctx.restore()
                                                }
                                            },
                                            _startProgessive: function() {
                                                function i() {
                                                    t === n._progressiveToken && n.storage && (n._doPaintList(n.storage.getDisplayList()), n._furtherProgressive ? (n._progress++, a(i)) : n._progressiveToken = -1)
                                                }
                                                var n = this,
                                                    t;
                                                n._furtherProgressive && (t = n._progressiveToken = +new Date, n._progress++, a(i))
                                            },
                                            _clearProgressive: function() {
                                                this._progressiveToken = -1;
                                                this._progress = 0;
                                                r.each(this._progressiveLayers, function(n) {
                                                    n.__dirty && n.clear()
                                                })
                                            },
                                            _paintList: function(n, t) {
                                                t == null && (t = !1);
                                                this._updateLayerStatus(n);
                                                this._clearProgressive();
                                                this.eachBuildinLayer(w);
                                                this._doPaintList(n, t);
                                                this.eachBuildinLayer(b)
                                            },
                                            _doPaintList: function(n, t) {
                                                function p(n) {
                                                    var t = u.dpr || 1;
                                                    u.save();
                                                    u.globalAlpha = 1;
                                                    u.shadowBlur = 0;
                                                    f.__dirty = !0;
                                                    u.setTransform(1, 0, 0, 1, 0, 0);
                                                    u.drawImage(n.dom, 0, 0, k * t, d * t);
                                                    u.restore()
                                                }
                                                for (var f, h, u, v, b = 0, i, k = this._width, d = this._height, y, l = this._progress, c = 0, g = n.length; c < g; c++) {
                                                    var s = n[c],
                                                        w = this._singleCanvas ? 0 : s.zlevel,
                                                        a = s.__frame;
                                                    if (a < 0 && i && (p(i), i = null), h !== w && (u && u.restore(), v = {}, h = w, f = this.getLayer(h), f.isBuildin || e("ZLevel " + h + " has been used by unkown layer " + f.id), u = f.ctx, u.save(), f.__unusedCount = 0, (f.__dirty || t) && f.clear()), f.__dirty || t) {
                                                        if (a >= 0) {
                                                            if (!i) {
                                                                if (i = this._progressiveLayers[Math.min(b++, o - 1)], i.ctx.save(), i.renderScope = {}, i && i.__progress > i.__maxProgress) {
                                                                    c = i.__nextIdxNotProg - 1;
                                                                    continue
                                                                }
                                                                y = i.__progress;
                                                                i.__dirty || (l = y);
                                                                i.__progress = l + 1
                                                            }
                                                            a === l && this._doPaintEl(s, i, !0, i.renderScope)
                                                        } else this._doPaintEl(s, f, t, v);
                                                        s.__dirty = !1
                                                    }
                                                }
                                                i && p(i);
                                                u && u.restore();
                                                this._furtherProgressive = !1;
                                                r.each(this._progressiveLayers, function(n) {
                                                    n.__maxProgress >= n.__progress && (this._furtherProgressive = !0)
                                                }, this)
                                            },
                                            _doPaintEl: function(n, t, i, r) {
                                                var u = t.ctx,
                                                    e = n.transform,
                                                    f;
                                                !(t.__dirty || i) || n.invisible || n.style.opacity === 0 || e && !e[0] && !e[3] || n.culling && k(n, this._width, this._height) || (f = n.__clipPaths, (r.prevClipLayer !== t || d(f, r.prevElClipPaths)) && (r.prevElClipPaths && (r.prevClipLayer.ctx.restore(), r.prevClipLayer = r.prevElClipPaths = null, r.prevEl = null), f && (u.save(), g(f, u), r.prevClipLayer = t, r.prevElClipPaths = f)), n.beforeBrush && n.beforeBrush(u), n.brush(u, r.prevEl || null), r.prevEl = n, n.afterBrush && n.afterBrush(u))
                                            },
                                            getLayer: function(n) {
                                                if (this._singleCanvas) return this._layers[0];
                                                var t = this._layers[n];
                                                return t || (t = new u("zr_" + n, this, this.dpr), t.isBuildin = !0, this._layerConfig[n] && r.merge(t, this._layerConfig[n], !0), this.insertLayer(n, t), t.initContext()), t
                                            },
                                            insertLayer: function(n, t) {
                                                var f = this._layers,
                                                    r = this._zlevelList,
                                                    h = r.length,
                                                    o = null,
                                                    i = -1,
                                                    u = this._domRoot,
                                                    s;
                                                if (f[n]) {
                                                    e("ZLevel " + n + " has been used already");
                                                    return
                                                }
                                                if (!p(t)) {
                                                    e("Layer of zlevel " + n + " is not valid");
                                                    return
                                                }
                                                if (h > 0 && n > r[0]) {
                                                    for (i = 0; i < h - 1; i++)
                                                        if (r[i] < n && r[i + 1] > n) break;
                                                    o = f[r[i]]
                                                }
                                                r.splice(i + 1, 0, n);
                                                o ? (s = o.dom, s.nextSibling ? u.insertBefore(t.dom, s.nextSibling) : u.appendChild(t.dom)) : u.firstChild ? u.insertBefore(t.dom, u.firstChild) : u.appendChild(t.dom);
                                                f[n] = t
                                            },
                                            eachLayer: function(n, t) {
                                                for (var u = this._zlevelList, r, i = 0; i < u.length; i++) r = u[i], n.call(t, this._layers[r], r)
                                            },
                                            eachBuildinLayer: function(n, t) {
                                                for (var f = this._zlevelList, r, u, i = 0; i < f.length; i++) u = f[i], r = this._layers[u], r.isBuildin && n.call(t, r, u)
                                            },
                                            eachOtherLayer: function(n, t) {
                                                for (var f = this._zlevelList, r, u, i = 0; i < f.length; i++) u = f[i], r = this._layers[u], r.isBuildin || n.call(t, r, u)
                                            },
                                            getLayers: function() {
                                                return this._layers
                                            },
                                            _updateLayerStatus: function(n) {
                                                var k = this._layers,
                                                    e = this._progressiveLayers,
                                                    v = {},
                                                    y = {},
                                                    s, t, p, c, f, w, b, a;
                                                for (this.eachBuildinLayer(function(n, t) {
                                                        v[t] = n.elCount;
                                                        n.elCount = 0;
                                                        n.__dirty = !1
                                                    }), r.each(e, function(n, t) {
                                                        y[t] = n.elCount;
                                                        n.elCount = 0;
                                                        n.__dirty = !1
                                                    }), s = 0, c = 0, f = 0, w = n.length; f < w; f++) {
                                                    var i = n[f],
                                                        d = this._singleCanvas ? 0 : i.zlevel,
                                                        h = k[d],
                                                        l = i.progressive;
                                                    h && (h.elCount++, h.__dirty = h.__dirty || i.__dirty);
                                                    l >= 0 ? (p !== l && (p = l, c++), b = i.__frame = c - 1, t || (a = Math.min(s, o - 1), t = e[a], t || (t = e[a] = new u("progressive", this, this.dpr), t.initContext()), t.__maxProgress = 0), t.__dirty = t.__dirty || i.__dirty, t.elCount++, t.__maxProgress = Math.max(t.__maxProgress, b), t.__maxProgress >= t.__progress && (h.__dirty = !0)) : (i.__frame = -1, t && (t.__nextIdxNotProg = f, s++, t = null))
                                                }
                                                t && (s++, t.__nextIdxNotProg = f);
                                                this.eachBuildinLayer(function(n, t) {
                                                    v[t] !== n.elCount && (n.__dirty = !0)
                                                });
                                                e.length = Math.min(s, o);
                                                r.each(e, function(n, t) {
                                                    y[t] !== n.elCount && (i.__dirty = !0);
                                                    n.__dirty && (n.__progress = 0)
                                                })
                                            },
                                            clear: function() {
                                                return this.eachBuildinLayer(this._clearLayer), this
                                            },
                                            _clearLayer: function(n) {
                                                n.clear()
                                            },
                                            configLayer: function(n, t) {
                                                var i, u;
                                                t && (i = this._layerConfig, i[n] ? r.merge(i[n], t, !0) : i[n] = t, u = this._layers[n], u && r.merge(u, i[n], !0))
                                            },
                                            delLayer: function(n) {
                                                var i = this._layers,
                                                    u = this._zlevelList,
                                                    t = i[n];
                                                t && (t.dom.parentNode.removeChild(t.dom), delete i[n], u.splice(r.indexOf(u, n), 1))
                                            },
                                            resize: function(n, t) {
                                                var i = this._domRoot,
                                                    u, f;
                                                if (i.style.display = "none", u = this._opts, n != null && (u.width = n), t != null && (u.height = t), n = this._getSize(0), t = this._getSize(1), i.style.display = "", this._width != n || t != this._height) {
                                                    i.style.width = n + "px";
                                                    i.style.height = t + "px";
                                                    for (f in this._layers) this._layers.hasOwnProperty(f) && this._layers[f].resize(n, t);
                                                    r.each(this._progressiveLayers, function(i) {
                                                        i.resize(n, t)
                                                    });
                                                    this.refresh(!0)
                                                }
                                                return this._width = n, this._height = t, this
                                            },
                                            clearLayer: function(n) {
                                                var t = this._layers[n];
                                                t && t.clear()
                                            },
                                            dispose: function() {
                                                this.root.innerHTML = "";
                                                this.root = this.storage = this._domRoot = this._layers = null
                                            },
                                            getRenderedCanvas: function(n) {
                                                var t, r, f, i, e;
                                                if (n = n || {}, this._singleCanvas) return this._layers[0].dom;
                                                for (t = new u("image", this, n.pixelRatio || this.dpr), t.initContext(), t.clearColor = n.backgroundColor, t.clear(), r = this.storage.getDisplayList(!0), f = {}, i = 0; i < r.length; i++) e = r[i], this._doPaintEl(e, t, !0, f);
                                                return t.dom
                                            },
                                            getWidth: function() {
                                                return this._width
                                            },
                                            getHeight: function() {
                                                return this._height
                                            },
                                            _getSize: function(n) {
                                                var u = this._opts,
                                                    t = ["width", "height"][n],
                                                    e = ["clientWidth", "clientHeight"][n],
                                                    o = ["paddingLeft", "paddingTop"][n],
                                                    s = ["paddingRight", "paddingBottom"][n],
                                                    i, r;
                                                return u[t] != null && u[t] !== "auto" ? parseFloat(u[t]) : (i = this.root, r = document.defaultView.getComputedStyle(i), (i[e] || f(r[t]) || f(i.style[t])) - (f(r[o]) || 0) - (f(r[s]) || 0) | 0)
                                            },
                                            _pathToImage: function(n, t, r, u, f) {
                                                var s = document.createElement("canvas"),
                                                    h = s.getContext("2d"),
                                                    e, c, o;
                                                return s.width = r * f, s.height = u * f, h.clearRect(0, 0, r * f, u * f), e = {
                                                    position: t.position,
                                                    rotation: t.rotation,
                                                    scale: t.scale
                                                }, t.position = [0, 0, 0], t.rotation = 0, t.scale = [1, 1], t && t.brush(h), c = i(62), o = new c({
                                                    id: n,
                                                    style: {
                                                        x: 0,
                                                        y: 0,
                                                        image: s
                                                    }
                                                }), e.position != null && (o.position = t.position = e.position), e.rotation != null && (o.rotation = t.rotation = e.rotation), e.scale != null && (o.scale = t.scale = e.scale), o
                                            },
                                            _createPathToImage: function() {
                                                var n = this;
                                                return function(t, i, r, u) {
                                                    return n._pathToImage(t, i, r, u, n.dpr)
                                                }
                                            }
                                        };
                                        n.exports = c
                                    }, function(n, t, i) {
                                        function h() {
                                            return !1
                                        }

                                        function u(n, t, i, r) {
                                            var u = document.createElement(t),
                                                e = i.getWidth(),
                                                o = i.getHeight(),
                                                f = u.style;
                                            return f.position = "absolute", f.left = 0, f.top = 0, f.width = e + "px", f.height = o + "px", u.width = e * r, u.height = o * r, u.setAttribute("data-zr-dom-id", n), u
                                        }
                                        var f = i(4),
                                            e = i(41),
                                            o = i(47),
                                            s = i(59),
                                            r = function(n, t, i) {
                                                var o, r;
                                                i = i || e.devicePixelRatio;
                                                typeof n == "string" ? o = u(n, "canvas", t, i) : f.isObject(n) && (o = n, n = o.id);
                                                this.id = n;
                                                this.dom = o;
                                                r = o.style;
                                                r && (o.onselectstart = h, r["-webkit-user-select"] = "none", r["user-select"] = "none", r["-webkit-touch-callout"] = "none", r["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)", r.padding = 0, r.margin = 0, r["border-width"] = 0);
                                                this.domBack = null;
                                                this.ctxBack = null;
                                                this.painter = t;
                                                this.config = null;
                                                this.clearColor = 0;
                                                this.motionBlur = !1;
                                                this.lastFrameAlpha = .7;
                                                this.dpr = i
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            elCount: 0,
                                            __dirty: !0,
                                            initContext: function() {
                                                this.ctx = this.dom.getContext("2d");
                                                this.ctx.dpr = this.dpr
                                            },
                                            createBackBuffer: function() {
                                                var n = this.dpr;
                                                this.domBack = u("back-" + this.id, "canvas", this.painter, n);
                                                this.ctxBack = this.domBack.getContext("2d");
                                                n != 1 && this.ctxBack.scale(n, n)
                                            },
                                            resize: function(n, t) {
                                                var i = this.dpr,
                                                    r = this.dom,
                                                    f = r.style,
                                                    u = this.domBack;
                                                f.width = n + "px";
                                                f.height = t + "px";
                                                r.width = n * i;
                                                r.height = t * i;
                                                u && (u.width = n * i, u.height = t * i, i != 1 && this.ctxBack.scale(i, i))
                                            },
                                            clear: function(n) {
                                                var e = this.dom,
                                                    t = this.ctx,
                                                    r = e.width,
                                                    u = e.height,
                                                    i = this.clearColor,
                                                    h = this.motionBlur && !n,
                                                    a = this.lastFrameAlpha,
                                                    c = this.dpr,
                                                    f, l;
                                                h && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(e, 0, 0, r / c, u / c));
                                                t.clearRect(0, 0, r, u);
                                                i && (i.colorStops ? (f = i.__canvasGradient || o.getGradient(t, i, {
                                                    x: 0,
                                                    y: 0,
                                                    width: r,
                                                    height: u
                                                }), i.__canvasGradient = f) : i.image && (f = s.prototype.getCanvasPattern.call(i, t)), t.save(), t.fillStyle = f || i, t.fillRect(0, 0, r, u), t.restore());
                                                h && (l = this.domBack, t.save(), t.globalAlpha = a, t.drawImage(l, 0, 0, r, u), t.restore())
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var r = i(61);
                                        n.exports = function(n) {
                                            function t(t) {
                                                var f = (t.visualColorAccessPath || "itemStyle.normal.color").split("."),
                                                    i = t.getData(),
                                                    u = t.get(f) || t.getColorFromPalette(t.get("name"));
                                                i.setVisual("color", u);
                                                n.isSeriesFiltered(t) || (typeof u != "function" || u instanceof r || i.each(function(n) {
                                                    i.setItemVisual(n, "color", u(t.getDataParams(n)))
                                                }), i.each(function(n) {
                                                    var r = i.getItemModel(n),
                                                        t = r.get(f, !0);
                                                    t != null && i.setItemVisual(n, "color", t)
                                                }))
                                            }
                                            n.eachRawSeries(t)
                                        }
                                    }, function(n, t, i) {
                                        function s(n, t) {
                                            var i, r;
                                            for (t = t.split(","), i = n, r = 0; r < t.length; r++)
                                                if (i = i && i[t[r]], i == null) break;
                                            return i
                                        }

                                        function h(n, t, i, r) {
                                            var u, e, f;
                                            for (t = t.split(","), u = n, f = 0; f < t.length - 1; f++) e = t[f], u[e] == null && (u[e] = {}), u = u[e];
                                            (r || u[t[f]] == null) && (u[t[f]] = i)
                                        }

                                        function f(n) {
                                            r(c, function(t) {
                                                t[0] in n && !(t[1] in n) && (n[t[1]] = n[t[0]])
                                            })
                                        }
                                        var u = i(4),
                                            o = i(95),
                                            c = [
                                                ["x", "left"],
                                                ["y", "top"],
                                                ["x2", "right"],
                                                ["y2", "bottom"]
                                            ],
                                            l = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"],
                                            e = ["bar", "boxplot", "candlestick", "chord", "effectScatter", "funnel", "gauge", "lines", "graph", "heatmap", "line", "map", "parallel", "pie", "radar", "sankey", "scatter", "treemap"],
                                            r = u.each;
                                        n.exports = function(n) {
                                            r(n.series, function(n) {
                                                var t, r, i;
                                                if (u.isObject(n))
                                                    for (t = n.type, o(n), (t === "pie" || t === "gauge") && n.clockWise != null && (n.clockwise = n.clockWise), t === "gauge" && (r = s(n, "pointer.color"), r != null && h(n, "itemStyle.normal.color", r)), i = 0; i < e.length; i++)
                                                        if (e[i] === n.type) {
                                                            f(n);
                                                            break
                                                        }
                                            });
                                            n.dataRange && (n.visualMap = n.dataRange);
                                            r(l, function(t) {
                                                var i = n[t];
                                                i && (u.isArray(i) || (i = [i]), r(i, function(n) {
                                                    f(n)
                                                }))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function r(n) {
                                            var t = n && n.itemStyle;
                                            t && u.each(f, function(i) {
                                                var r = t.normal,
                                                    f = t.emphasis;
                                                r && r[i] && (n[i] = n[i] || {}, n[i].normal ? u.merge(n[i].normal, r[i]) : n[i].normal = r[i], r[i] = null);
                                                f && f[i] && (n[i] = n[i] || {}, n[i].emphasis ? u.merge(n[i].emphasis, f[i]) : n[i].emphasis = f[i], f[i] = null)
                                            })
                                        }
                                        var u = i(4),
                                            f = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
                                        n.exports = function(n) {
                                            var f, e, s, o, i, t;
                                            if (n && (r(n), r(n.markPoint), r(n.markLine), f = n.data, f)) {
                                                for (t = 0; t < f.length; t++) r(f[t]);
                                                if (e = n.markPoint, e && e.data)
                                                    for (s = e.data, t = 0; t < s.length; t++) r(s[t]);
                                                if (o = n.markLine, o && o.data)
                                                    for (i = o.data, t = 0; t < i.length; t++) u.isArray(i[t]) ? (r(i[t][0]), r(i[t][1])) : r(i[t])
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var r = i(43),
                                            f = i(4),
                                            u = Math.PI;
                                        n.exports = function(n, t) {
                                            var i;
                                            t = t || {};
                                            f.defaults(t, {
                                                text: "loading",
                                                color: "#c23531",
                                                textColor: "#000",
                                                maskColor: "rgba(255, 255, 255, 0.8)",
                                                zlevel: 0
                                            });
                                            var o = new r.Rect({
                                                    style: {
                                                        fill: t.maskColor
                                                    },
                                                    zlevel: t.zlevel,
                                                    z: 1e4
                                                }),
                                                e = new r.Arc({
                                                    shape: {
                                                        startAngle: -u / 2,
                                                        endAngle: -u / 2 + .1,
                                                        r: 10
                                                    },
                                                    style: {
                                                        stroke: t.color,
                                                        lineCap: "round",
                                                        lineWidth: 5
                                                    },
                                                    zlevel: t.zlevel,
                                                    z: 10001
                                                }),
                                                s = new r.Rect({
                                                    style: {
                                                        fill: "none",
                                                        text: t.text,
                                                        textPosition: "right",
                                                        textDistance: 10,
                                                        textFill: t.textColor
                                                    },
                                                    zlevel: t.zlevel,
                                                    z: 10001
                                                });
                                            return e.animateShape(!0).when(1e3, {
                                                endAngle: u * 3 / 2
                                            }).start("circularInOut"), e.animateShape(!0).when(1e3, {
                                                startAngle: u * 3 / 2
                                            }).delay(300).start("circularInOut"), i = new r.Group, i.add(e), i.add(s), i.add(o), i.resize = function() {
                                                var i = n.getWidth() / 2,
                                                    r = n.getHeight() / 2,
                                                    t;
                                                e.setShape({
                                                    cx: i,
                                                    cy: r
                                                });
                                                t = e.shape.r;
                                                s.setShape({
                                                    x: i - t,
                                                    y: r - t,
                                                    width: t * 2,
                                                    height: t * 2
                                                });
                                                o.setShape({
                                                    x: 0,
                                                    y: 0,
                                                    width: n.getWidth(),
                                                    height: n.getHeight()
                                                })
                                            }, i.resize(), i
                                        }
                                    }, function(n, t, i) {
                                        (function(t) {
                                            function h(n) {
                                                return u.isArray(n) || (n = [n]), n
                                            }

                                            function a(n, t) {
                                                var o = n.dimensions,
                                                    s = new e(u.map(o, n.getDimensionInfo, n), n.hostModel),
                                                    h, r, f, i, c;
                                                for (l(s, n), h = s._storage = {}, r = n._storage, f = 0; f < o.length; f++) i = o[f], c = r[i], h[i] = u.indexOf(t, i) >= 0 ? new c.constructor(r[i].length) : r[i];
                                                return s
                                            }
                                            var c = "undefined",
                                                f = typeof window == "undefined" ? t : window,
                                                y = typeof f.Float64Array === c ? Array : f.Float64Array,
                                                p = typeof f.Int32Array === c ? Array : f.Int32Array,
                                                w = {
                                                    float: y,
                                                    int: p,
                                                    ordinal: Array,
                                                    number: Array,
                                                    time: Array
                                                },
                                                b = i(12),
                                                k = i(98),
                                                u = i(4),
                                                o = i(5),
                                                s = u.isObject,
                                                d = ["stackedOn", "hasItemOption", "_nameList", "_idList", "_rawData"],
                                                l = function(n, t) {
                                                    u.each(d.concat(t.__wrappedMethods || []), function(i) {
                                                        t.hasOwnProperty(i) && (n[i] = t[i])
                                                    });
                                                    n.__wrappedMethods = t.__wrappedMethods
                                                },
                                                e = function(n, t) {
                                                    var f, e, r, u, i;
                                                    for (n = n || ["x", "y"], f = {}, e = [], r = 0; r < n.length; r++) i = {}, typeof n[r] == "string" ? (u = n[r], i = {
                                                        name: u,
                                                        stackable: !1,
                                                        type: "number"
                                                    }) : (i = n[r], u = i.name, i.type = i.type || "number"), e.push(u), f[u] = i;
                                                    this.dimensions = e;
                                                    this._dimensionInfos = f;
                                                    this.hostModel = t;
                                                    this.dataType;
                                                    this.indices = [];
                                                    this._storage = {};
                                                    this._nameList = [];
                                                    this._idList = [];
                                                    this._optionModels = [];
                                                    this.stackedOn = null;
                                                    this._visual = {};
                                                    this._layout = {};
                                                    this._itemVisuals = [];
                                                    this._itemLayouts = [];
                                                    this._graphicEls = [];
                                                    this._rawData;
                                                    this._extent
                                                },
                                                r = e.prototype,
                                                v;
                                            r.type = "list";
                                            r.hasItemOption = !0;
                                            r.getDimension = function(n) {
                                                return isNaN(n) || (n = this.dimensions[n] || n), n
                                            };
                                            r.getDimensionInfo = function(n) {
                                                return u.clone(this._dimensionInfos[this.getDimension(n)])
                                            };
                                            r.initData = function(n, t, i) {
                                                var k, d, a, e, g, l, v, nt, r, f, s;
                                                if (n = n || [], !0 && !u.isArray(n)) throw new Error("Invalid data.");
                                                this._rawData = n;
                                                var y = this._storage = {},
                                                    tt = this.indices = [],
                                                    h = this.dimensions,
                                                    it = n.length,
                                                    p = this._dimensionInfos,
                                                    b = [],
                                                    c = {};
                                                for (t = t || [], r = 0; r < h.length; r++) k = p[h[r]], d = w[k.type], y[h[r]] = new d(it);
                                                for (a = this, i || (a.hasItemOption = !1), i = i || function(n, t, i, r) {
                                                        var u = o.getDataItemValue(n);
                                                        return o.isDataItemOption(n) && (a.hasItemOption = !0), o.converDataValue(u instanceof Array ? u[r] : u, p[t])
                                                    }, e = 0; e < n.length; e++) {
                                                    for (g = n[e], l = 0; l < h.length; l++) v = h[l], nt = y[v], nt[e] = i(g, v, e, l);
                                                    tt.push(e)
                                                }
                                                for (r = 0; r < n.length; r++) t[r] || n[r] && n[r].name != null && (t[r] = n[r].name), f = t[r] || "", s = n[r] && n[r].id, !s && f && (c[f] = c[f] || 0, s = f, c[f] > 0 && (s += "__ec__" + c[f]), c[f]++), s && (b[r] = s);
                                                this._nameList = t;
                                                this._idList = b
                                            };
                                            r.count = function() {
                                                return this.indices.length
                                            };
                                            r.get = function(n, t, i) {
                                                var o = this._storage,
                                                    s = this.indices[t],
                                                    r, e, u, f;
                                                if (s == null) return NaN;
                                                if (r = o[n] && o[n][s], i && (e = this._dimensionInfos[n], e && e.stackable))
                                                    for (u = this.stackedOn; u;) f = u.get(n, t), (r >= 0 && f > 0 || r <= 0 && f < 0) && (r += f), u = u.stackedOn;
                                                return r
                                            };
                                            r.getValues = function(n, t, i) {
                                                var f = [],
                                                    r, e;
                                                for (u.isArray(n) || (i = t, t = n, n = this.dimensions), r = 0, e = n.length; r < e; r++) f.push(this.get(n[r], t, i));
                                                return f
                                            };
                                            r.hasValue = function(n) {
                                                for (var i = this.dimensions, r = this._dimensionInfos, t = 0, u = i.length; t < u; t++)
                                                    if (r[i[t]].type !== "ordinal" && isNaN(this.get(i[t], n))) return !1;
                                                return !0
                                            };
                                            r.getDataExtent = function(n, t) {
                                                var s, e, o, i, r, u, f, h;
                                                if (n = this.getDimension(n), s = this._storage[n], e = this.getDimensionInfo(n), t = e && e.stackable && t, o = (this._extent || (this._extent = {}))[n + !!t], o) return o;
                                                if (s) {
                                                    for (r = Infinity, u = -Infinity, f = 0, h = this.count(); f < h; f++) i = this.get(n, f, t), i < r && (r = i), i > u && (u = i);
                                                    return this._extent[n + !!t] = [r, u]
                                                }
                                                return [Infinity, -Infinity]
                                            };
                                            r.getSum = function(n, t) {
                                                var e = this._storage[n],
                                                    u = 0,
                                                    i, f, r;
                                                if (e)
                                                    for (i = 0, f = this.count(); i < f; i++) r = this.get(n, i, t), isNaN(r) || (u += r);
                                                return u
                                            };
                                            r.indexOf = function(n, t) {
                                                var o = this._storage,
                                                    r = o[n],
                                                    u = this.indices,
                                                    i, f, e;
                                                if (r)
                                                    for (i = 0, f = u.length; i < f; i++)
                                                        if (e = u[i], r[e] === t) return i;
                                                return -1
                                            };
                                            r.indexOfName = function(n) {
                                                for (var r, i = this.indices, u = this._nameList, t = 0, f = i.length; t < f; t++)
                                                    if (r = i[t], u[r] === n) return t;
                                                return -1
                                            };
                                            r.indexOfRawIndex = function(n) {
                                                var i = this.indices,
                                                    f = i[n],
                                                    r, u, t;
                                                if (f != null && f === n) return n;
                                                for (r = 0, u = i.length - 1; r <= u;)
                                                    if (t = (r + u) / 2 | 0, i[t] < n) r = t + 1;
                                                    else if (i[t] > n) u = t - 1;
                                                else return t;
                                                return -1
                                            };
                                            r.indexOfNearest = function(n, t, i, r) {
                                                var c = this._storage,
                                                    l = c[n],
                                                    s, f, u, h, e, o;
                                                if (r == null && (r = Infinity), s = -1, l)
                                                    for (f = Number.MAX_VALUE, u = 0, h = this.count(); u < h; u++) e = t - this.get(n, u, i), o = Math.abs(e), e <= r && (o < f || o === f && e > 0) && (f = o, s = u);
                                                return s
                                            };
                                            r.getRawIndex = function(n) {
                                                var t = this.indices[n];
                                                return t == null ? -1 : t
                                            };
                                            r.getRawDataItem = function(n) {
                                                return this._rawData[this.getRawIndex(n)]
                                            };
                                            r.getName = function(n) {
                                                return this._nameList[this.indices[n]] || ""
                                            };
                                            r.getId = function(n) {
                                                return this._idList[this.indices[n]] || this.getRawIndex(n) + ""
                                            };
                                            r.each = function(n, t, i, r) {
                                                var f, e;
                                                typeof n == "function" && (r = i, i = t, t = n, n = []);
                                                n = u.map(h(n), this.getDimension, this);
                                                var o = [],
                                                    s = n.length,
                                                    c = this.indices;
                                                for (r = r || this, f = 0; f < c.length; f++) switch (s) {
                                                    case 0:
                                                        t.call(r, f);
                                                        break;
                                                    case 1:
                                                        t.call(r, this.get(n[0], f, i), f);
                                                        break;
                                                    case 2:
                                                        t.call(r, this.get(n[0], f, i), this.get(n[1], f, i), f);
                                                        break;
                                                    default:
                                                        for (e = 0; e < s; e++) o[e] = this.get(n[e], f, i);
                                                        o[e] = f;
                                                        t.apply(r, o)
                                                }
                                            };
                                            r.filterSelf = function(n, t, i, r) {
                                                var f, s, e;
                                                typeof n == "function" && (r = i, i = t, t = n, n = []);
                                                n = u.map(h(n), this.getDimension, this);
                                                var c = [],
                                                    o = [],
                                                    l = n.length,
                                                    a = this.indices;
                                                for (r = r || this, f = 0; f < a.length; f++) {
                                                    if (l === 1) s = t.call(r, this.get(n[0], f, i), f);
                                                    else {
                                                        for (e = 0; e < l; e++) o[e] = this.get(n[e], f, i);
                                                        o[e] = f;
                                                        s = t.apply(r, o)
                                                    }
                                                    s && c.push(a[f])
                                                }
                                                return this.indices = c, this._extent = {}, this
                                            };
                                            r.mapArray = function(n, t, i, r) {
                                                typeof n == "function" && (r = i, i = t, t = n, n = []);
                                                var u = [];
                                                return this.each(n, function() {
                                                    u.push(t && t.apply(this, arguments))
                                                }, i, r), u
                                            };
                                            r.map = function(n, t, i, r) {
                                                n = u.map(h(n), this.getDimension, this);
                                                var f = a(this, n),
                                                    o = f.indices = this.indices,
                                                    s = f._storage,
                                                    e = [];
                                                return this.each(n, function() {
                                                    var f = arguments[arguments.length - 1],
                                                        i = t && t.apply(this, arguments),
                                                        r;
                                                    if (i != null)
                                                        for (typeof i == "number" && (e[0] = i, i = e), r = 0; r < i.length; r++) {
                                                            var h = n[r],
                                                                u = s[h],
                                                                c = o[f];
                                                            u && (u[c] = i[r])
                                                        }
                                                }, i, r), f
                                            };
                                            r.downSample = function(n, t, i, r) {
                                                for (var f, l, e, h = a(this, [n]), v = this._storage, y = h._storage, b = this.indices, k = h.indices = [], s = [], p = [], o = Math.floor(1 / t), w = y[n], c = this.count(), u = 0; u < v[n].length; u++) y[n][u] = v[n][u];
                                                for (u = 0; u < c; u += o) {
                                                    for (o > c - u && (o = c - u, s.length = o), f = 0; f < o; f++) e = b[u + f], s[f] = w[e], p[f] = e;
                                                    l = i(s);
                                                    e = p[r(s, l) || 0];
                                                    w[e] = l;
                                                    k.push(e)
                                                }
                                                return h
                                            };
                                            r.getItemModel = function(n) {
                                                var t = this.hostModel;
                                                return n = this.indices[n], new b(this._rawData[n], t, t && t.ecModel)
                                            };
                                            r.diff = function(n) {
                                                var t = this._idList,
                                                    i = n && n._idList;
                                                return new k(n ? n.indices : [], this.indices, function(n) {
                                                    return i[n] || n + ""
                                                }, function(n) {
                                                    return t[n] || n + ""
                                                })
                                            };
                                            r.getVisual = function(n) {
                                                var t = this._visual;
                                                return t && t[n]
                                            };
                                            r.setVisual = function(n, t) {
                                                if (s(n)) {
                                                    for (var i in n) n.hasOwnProperty(i) && this.setVisual(i, n[i]);
                                                    return
                                                }
                                                this._visual = this._visual || {};
                                                this._visual[n] = t
                                            };
                                            r.setLayout = function(n, t) {
                                                if (s(n)) {
                                                    for (var i in n) n.hasOwnProperty(i) && this.setLayout(i, n[i]);
                                                    return
                                                }
                                                this._layout[n] = t
                                            };
                                            r.getLayout = function(n) {
                                                return this._layout[n]
                                            };
                                            r.getItemLayout = function(n) {
                                                return this._itemLayouts[n]
                                            };
                                            r.setItemLayout = function(n, t, i) {
                                                this._itemLayouts[n] = i ? u.extend(this._itemLayouts[n] || {}, t) : t
                                            };
                                            r.clearItemLayouts = function() {
                                                this._itemLayouts.length = 0
                                            };
                                            r.getItemVisual = function(n, t, i) {
                                                var r = this._itemVisuals[n],
                                                    u = r && r[t];
                                                return u == null && !i ? this.getVisual(t) : u
                                            };
                                            r.setItemVisual = function(n, t, i) {
                                                var u = this._itemVisuals[n] || {},
                                                    r;
                                                if (this._itemVisuals[n] = u, s(t)) {
                                                    for (r in t) t.hasOwnProperty(r) && (u[r] = t[r]);
                                                    return
                                                }
                                                u[t] = i
                                            };
                                            r.clearAllVisual = function() {
                                                this._visual = {};
                                                this._itemVisuals = []
                                            };
                                            v = function(n) {
                                                n.seriesIndex = this.seriesIndex;
                                                n.dataIndex = this.dataIndex;
                                                n.dataType = this.dataType
                                            };
                                            r.setItemGraphicEl = function(n, t) {
                                                var i = this.hostModel;
                                                t && (t.dataIndex = n, t.dataType = this.dataType, t.seriesIndex = i && i.seriesIndex, t.type === "group" && t.traverse(v, t));
                                                this._graphicEls[n] = t
                                            };
                                            r.getItemGraphicEl = function(n) {
                                                return this._graphicEls[n]
                                            };
                                            r.eachItemGraphicEl = function(n, t) {
                                                u.each(this._graphicEls, function(i, r) {
                                                    i && n && n.call(t, i, r)
                                                })
                                            };
                                            r.cloneShallow = function() {
                                                var t = u.map(this.dimensions, this.getDimensionInfo, this),
                                                    n = new e(t, this.hostModel);
                                                return n._storage = this._storage, l(n, this), n.indices = this.indices.slice(), this._extent && (n._extent = u.extend({}, this._extent)), n
                                            };
                                            r.wrapMethod = function(n, t) {
                                                var i = this[n];
                                                typeof i == "function" && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(n), this[n] = function() {
                                                    var n = i.apply(this, arguments);
                                                    return t.apply(this, [n].concat(u.slice(arguments)))
                                                })
                                            };
                                            r.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "map"];
                                            r.CHANGABLE_METHODS = ["filterSelf"];
                                            n.exports = e
                                        }).call(t, function() {
                                            return this
                                        }())
                                    }, function(n) {
                                        "use strict";

                                        function i(n) {
                                            return n
                                        }

                                        function t(n, t, r, u) {
                                            this._old = n;
                                            this._new = t;
                                            this._oldKeyGetter = r || i;
                                            this._newKeyGetter = u || i
                                        }

                                        function r(n, t, i, r) {
                                            for (var e, f, u = 0; u < n.length; u++) e = r(n[u], u), f = t[e], f == null ? (i.push(e), t[e] = u) : (f.length || (t[e] = f = [f]), f.push(u))
                                        }
                                        t.prototype = {
                                            constructor: t,
                                            add: function(n) {
                                                return this._add = n, this
                                            },
                                            update: function(n) {
                                                return this._update = n, this
                                            },
                                            remove: function(n) {
                                                return this._remove = n, this
                                            },
                                            execute: function() {
                                                var s = this._old,
                                                    c = this._new,
                                                    l = this._oldKeyGetter,
                                                    a = this._newKeyGetter,
                                                    u = {},
                                                    h = [],
                                                    o = [],
                                                    t, i, n, e, f;
                                                for (r(s, {}, h, l), r(c, u, o, a), t = 0; t < s.length; t++) i = h[t], n = u[i], n != null ? (f = n.length, f ? (f === 1 && (u[i] = null), n = n.unshift()) : u[i] = null, this._update && this._update(n, t)) : this._remove && this._remove(t);
                                                for (t = 0; t < o.length; t++)
                                                    if (i = o[t], u.hasOwnProperty(i)) {
                                                        if (n = u[i], n == null) continue;
                                                        if (n.length)
                                                            for (e = 0, f = n.length; e < f; e++) this._add && this._add(n[e]);
                                                        else this._add && this._add(n)
                                                    }
                                            }
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            r = i(1),
                                            f = r.PRIORITY;
                                        i(100);
                                        i(103);
                                        r.registerVisual(u.curry(i(109), "line", "circle", "line"));
                                        r.registerLayout(u.curry(i(110), "line"));
                                        r.registerProcessor(f.PROCESSOR.STATISTIC, u.curry(i(111), "line"));
                                        i(112)
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(101),
                                            u = i(28);
                                        n.exports = u.extend({
                                            type: "series.line",
                                            dependencies: ["grid", "polar"],
                                            getInitialData: function(n, t) {
                                                if (1) {
                                                    var i = n.coordinateSystem;
                                                    if (i !== "polar" && i !== "cartesian2d") throw new Error("Line not support coordinateSystem besides cartesian and polar");
                                                }
                                                return r(n.data, this, t)
                                            },
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 2,
                                                coordinateSystem: "cartesian2d",
                                                legendHoverLink: !0,
                                                hoverAnimation: !0,
                                                clipOverflow: !0,
                                                label: {
                                                    normal: {
                                                        position: "top"
                                                    }
                                                },
                                                lineStyle: {
                                                    normal: {
                                                        width: 2,
                                                        type: "solid"
                                                    }
                                                },
                                                step: !1,
                                                smooth: !1,
                                                smoothMonotone: null,
                                                symbol: "emptyCircle",
                                                symbolSize: 4,
                                                symbolRotate: null,
                                                showSymbol: !0,
                                                showAllSymbol: !1,
                                                connectNulls: !1,
                                                sampling: "none",
                                                animationEasing: "linear",
                                                progressive: 0,
                                                hoverLayerThreshold: Infinity
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function a(n) {
                                            for (var t = 0; t < n.length && n[t] == null;) t++;
                                            return n[t]
                                        }

                                        function v(n) {
                                            var t = a(n);
                                            return t != null && !r.isArray(s(t))
                                        }

                                        function y(n, t, i) {
                                            if (n = n || [], !0 && !r.isArray(n)) throw new Error("Invalid data.");
                                            var b = t.get("coordinateSystem"),
                                                k = p[b],
                                                d = l.get(b),
                                                o = k && k(n, t, i),
                                                e = o && o.dimensions;
                                            e || (e = d && d.dimensions || ["x", "y"], e = u(e, n, e.concat(["value"])));
                                            var g = o ? o.categoryIndex : -1,
                                                a = new c(e, t),
                                                nt = w(o, n),
                                                y = {},
                                                tt = g >= 0 && v(n) ? function(n, t, i, r) {
                                                    return f.isDataItemOption(n) && (a.hasItemOption = !0), r === g ? i : h(s(n), e[r])
                                                } : function(n, t, i, u) {
                                                    var v = s(n),
                                                        c = h(v && v[u], e[u]),
                                                        l;
                                                    return f.isDataItemOption(n) && (a.hasItemOption = !0), l = o && o.categoryAxesModels, l && l[t] && typeof c == "string" && (y[t] = y[t] || l[t].getCategories(), c = r.indexOf(y[t], c), c < 0 && !isNaN(c) && (c = +c)), c
                                                };
                                            return a.hasItemOption = !1, a.initData(n, nt, tt), a
                                        }

                                        function e(n) {
                                            return n !== "category" && n !== "time"
                                        }

                                        function o(n) {
                                            return n === "category" ? "ordinal" : n === "time" ? "time" : "float"
                                        }

                                        function w(n, t) {
                                            var u = [],
                                                o = n && n.dimensions[n.categoryIndex],
                                                e, f, s, i;
                                            if (o && (e = n.categoryAxesModels[o.name]), e && (f = e.getCategories(), f))
                                                if (s = t.length, r.isArray(t[0]) && t[0].length > 1)
                                                    for (u = [], i = 0; i < s; i++) u[i] = f[t[i][n.categoryIndex || 0]];
                                                else u = f.slice(0);
                                            return u
                                        }
                                        var c = i(97),
                                            u = i(102),
                                            r = i(4),
                                            f = i(5),
                                            l = i(26),
                                            s = f.getDataItemValue,
                                            h = f.converDataValue,
                                            p = {
                                                cartesian2d: function(n, t, i) {
                                                    var a = r.map(["xAxis", "yAxis"], function(n) {
                                                            return i.queryComponents({
                                                                mainType: n,
                                                                index: t.get(n + "Index"),
                                                                id: t.get(n + "Id")
                                                            })[0]
                                                        }),
                                                        s = a[0],
                                                        h = a[1],
                                                        f;
                                                    if (1) {
                                                        if (!s) throw new Error('xAxis "' + r.retrieve(t.get("xAxisIndex"), t.get("xAxisId"), 0) + '" not found');
                                                        if (!h) throw new Error('yAxis "' + r.retrieve(t.get("xAxisIndex"), t.get("yAxisId"), 0) + '" not found');
                                                    }
                                                    var c = s.get("type"),
                                                        l = h.get("type"),
                                                        v = [{
                                                            name: "x",
                                                            type: o(c),
                                                            stackable: e(c)
                                                        }, {
                                                            name: "y",
                                                            type: o(l),
                                                            stackable: e(l)
                                                        }],
                                                        y = c === "category",
                                                        p = l === "category";
                                                    return u(v, n, ["x", "y", "z"]), f = {}, y && (f.x = s), p && (f.y = h), {
                                                        dimensions: v,
                                                        categoryIndex: y ? 0 : p ? 1 : -1,
                                                        categoryAxesModels: f
                                                    }
                                                },
                                                polar: function(n, t, i) {
                                                    var l = i.queryComponents({
                                                            mainType: "polar",
                                                            index: t.get("polarIndex"),
                                                            id: t.get("polarId")
                                                        })[0],
                                                        f = l.findAxisModel("angleAxis"),
                                                        s = l.findAxisModel("radiusAxis"),
                                                        r;
                                                    if (1) {
                                                        if (!f) throw new Error("angleAxis option not found");
                                                        if (!s) throw new Error("radiusAxis option not found");
                                                    }
                                                    var h = s.get("type"),
                                                        c = f.get("type"),
                                                        a = [{
                                                            name: "radius",
                                                            type: o(h),
                                                            stackable: e(h)
                                                        }, {
                                                            name: "angle",
                                                            type: o(c),
                                                            stackable: e(c)
                                                        }],
                                                        v = c === "category",
                                                        y = h === "category";
                                                    return u(a, n, ["radius", "angle", "value"]), r = {}, y && (r.radius = s), v && (r.angle = f), {
                                                        dimensions: a,
                                                        categoryIndex: v ? 1 : y ? 0 : -1,
                                                        categoryAxesModels: r
                                                    }
                                                },
                                                geo: function(n) {
                                                    return {
                                                        dimensions: u([{
                                                            name: "lng"
                                                        }, {
                                                            name: "lat"
                                                        }], n, ["lng", "lat", "value"])
                                                    }
                                                }
                                            };
                                        n.exports = y
                                    }, function(n, t, i) {
                                        function u(n, t, i, u) {
                                            var s, c, o, h;
                                            if (!t) return n;
                                            for (s = f(t[0]), c = r.isArray(s) && s.length || 1, i = i || [], u = u || "extra", o = 0; o < c; o++) n[o] || (h = i[o] || u + (o - i.length), n[o] = e(t, o) ? {
                                                type: "ordinal",
                                                name: h
                                            } : h);
                                            return n
                                        }

                                        function f(n) {
                                            return r.isArray(n) ? n : r.isObject(n) ? n.value : n
                                        }
                                        var r = i(4),
                                            e = u.guessOrdinal = function(n, t) {
                                                for (var i, u = 0, e = n.length; u < e; u++) {
                                                    if ((i = f(n[u]), !r.isArray(i)) || (i = i[t], i != null && isFinite(i))) return !1;
                                                    if (r.isString(i) && i !== "-") return !0
                                                }
                                                return !1
                                            };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";

                                        function c(n, t) {
                                            var i, r, u;
                                            if (n.length === t.length) {
                                                for (i = 0; i < n.length; i++)
                                                    if (r = n[i], u = t[i], r[0] !== u[0] || r[1] !== u[1]) return;
                                                return !0
                                            }
                                        }

                                        function l(n) {
                                            return typeof n == "number" ? n : n ? .3 : 0
                                        }

                                        function a(n) {
                                            var t = n.getGlobalExtent(),
                                                i, r;
                                            return n.onBand && (i = n.getBandWidth() / 2 - 1, r = t[1] > t[0] ? 1 : -1, t[0] += r * i, t[1] -= r * i), t
                                        }

                                        function v(n) {
                                            return n >= 0 ? 1 : -1
                                        }

                                        function k(n, t) {
                                            var r = n.getBaseAxis(),
                                                u = n.getOtherAxis(r),
                                                e = r.onZero ? 0 : u.scale.getExtent()[0],
                                                i = u.dim,
                                                f = i === "x" || i === "radius" ? 1 : 0;
                                            return t.mapArray([i], function(u, o) {
                                                for (var h, c = t.stackedOn, s; c && v(c.get(i, o)) === v(u);) {
                                                    h = c;
                                                    break
                                                }
                                                return s = [], s[f] = t.get(r.dim, o), s[1 - f] = h ? h.get(i, o, !0) : e, n.dataToPoint(s)
                                            }, !0)
                                        }

                                        function d(n, t, i) {
                                            var u = a(n.getAxis("x")),
                                                f = a(n.getAxis("y")),
                                                v = n.getBaseAxis().isHorizontal(),
                                                c = Math.min(u[0], u[1]),
                                                l = Math.min(f[0], f[1]),
                                                e = Math.max(u[0], u[1]) - c,
                                                o = Math.max(f[0], f[1]) - l,
                                                y = i.get("lineStyle.normal.width") || 2,
                                                s = i.get("clipOverflow") ? y / 2 : Math.max(e, o),
                                                h;
                                            return v ? (l -= s, o += s * 2) : (c -= s, e += s * 2), h = new r.Rect({
                                                shape: {
                                                    x: c,
                                                    y: l,
                                                    width: e,
                                                    height: o
                                                }
                                            }), t && (h.shape[v ? "width" : "height"] = 0, r.initProps(h, {
                                                shape: {
                                                    width: e,
                                                    height: o
                                                }
                                            }, i)), h
                                        }

                                        function g(n, t, i) {
                                            var o = n.getAngleAxis(),
                                                h = n.getRadiusAxis(),
                                                s = h.getExtent(),
                                                u = o.getExtent(),
                                                f = Math.PI / 180,
                                                e = new r.Sector({
                                                    shape: {
                                                        cx: n.cx,
                                                        cy: n.cy,
                                                        r0: s[0],
                                                        r: s[1],
                                                        startAngle: -u[0] * f,
                                                        endAngle: -u[1] * f,
                                                        clockwise: o.inverse
                                                    }
                                                });
                                            return t && (e.shape.endAngle = -u[0] * f, r.initProps(e, {
                                                shape: {
                                                    endAngle: -u[1] * f
                                                }
                                            }, i)), e
                                        }

                                        function y(n, t, i) {
                                            return n.type === "polar" ? g(n, t, i) : d(n, t, i)
                                        }

                                        function u(n, t, i) {
                                            for (var s, o, u, l, h, c = t.getBaseAxis(), r = c.dim === "x" || c.dim === "radius" ? 0 : 1, f = [], e = 0; e < n.length - 1; e++) {
                                                s = n[e + 1];
                                                o = n[e];
                                                f.push(o);
                                                u = [];
                                                switch (i) {
                                                    case "end":
                                                        u[r] = s[r];
                                                        u[1 - r] = o[1 - r];
                                                        f.push(u);
                                                        break;
                                                    case "middle":
                                                        l = (o[r] + s[r]) / 2;
                                                        h = [];
                                                        u[r] = h[r] = l;
                                                        u[1 - r] = o[1 - r];
                                                        h[1 - r] = s[1 - r];
                                                        f.push(u);
                                                        f.push(h);
                                                        break;
                                                    default:
                                                        u[r] = o[r];
                                                        u[1 - r] = s[1 - r];
                                                        f.push(u)
                                                }
                                            }
                                            return n[e] && f.push(n[e]), f
                                        }

                                        function f(n, t) {
                                            return Math.max(Math.min(n, t[1]), t[0])
                                        }

                                        function nt(n, t) {
                                            var e = n.getVisual("visualMeta"),
                                                s, i;
                                            if (e && e.length && n.count()) {
                                                for (i = e.length - 1; i >= 0; i--)
                                                    if (e[i].dimension < 2) {
                                                        s = e[i];
                                                        break
                                                    }
                                                if (!s || t.type !== "cartesian2d") {
                                                    !0 && console.warn("Visual map on line style only support x or y dimension.");
                                                    return
                                                }
                                                var k = s.dimension,
                                                    h = n.dimensions[k],
                                                    c = n.getDataExtent(h),
                                                    u = s.stops,
                                                    v = [];
                                                u[0].interval && u.sort(function(n, t) {
                                                    return n.interval[0] - t.interval[0]
                                                });
                                                var y = u[0],
                                                    p = u[u.length - 1],
                                                    o = y.interval ? f(y.interval[0], c) : y.value,
                                                    b = p.interval ? f(p.interval[1], c) : p.value,
                                                    l = b - o;
                                                if (l === 0) return n.getItemVisual(0, "color");
                                                for (i = 0; i < u.length; i++)
                                                    if (u[i].interval) {
                                                        if (u[i].interval[1] === u[i].interval[0]) continue;
                                                        v.push({
                                                            offset: (f(u[i].interval[0], c) - o) / l,
                                                            color: u[i].color
                                                        }, {
                                                            offset: (f(u[i].interval[1], c) - o) / l,
                                                            color: u[i].color
                                                        })
                                                    } else v.push({
                                                        offset: (u[i].value - o) / l,
                                                        color: u[i].color
                                                    });
                                                var w = new r.LinearGradient(0, 0, 0, 0, v, !0),
                                                    a = t.getAxis(h),
                                                    d = a.toGlobalCoord(a.dataToCoord(o)),
                                                    g = a.toGlobalCoord(a.dataToCoord(b));
                                                return w[h] = d, w[h + "2"] = g, w
                                            }
                                        }
                                        var e = i(4),
                                            p = i(104),
                                            w = i(105),
                                            b = i(107),
                                            r = i(43),
                                            s = i(5),
                                            h = i(108),
                                            o = i(42);
                                        n.exports = o.extend({
                                            type: "line",
                                            init: function() {
                                                var t = new r.Group,
                                                    n = new p;
                                                this.group.add(n.group);
                                                this._symbolDraw = n;
                                                this._lineGroup = t
                                            },
                                            render: function(n, t, i) {
                                                var r = n.coordinateSystem,
                                                    et = this.group,
                                                    f = n.getData(),
                                                    lt = n.getModel("lineStyle.normal"),
                                                    ot = n.getModel("areaStyle.normal"),
                                                    o = f.mapArray(f.getItemLayout, !0),
                                                    st = r.type === "polar",
                                                    at = this._coordSys,
                                                    g = this._symbolDraw,
                                                    v = this._polyline,
                                                    s = this._polygon,
                                                    p = this._lineGroup,
                                                    w = n.get("animation"),
                                                    tt = !ot.isEmpty(),
                                                    h = k(r, f),
                                                    b = n.get("showSymbol"),
                                                    ht = b && !st && !n.get("showAllSymbol") && this._getSymbolIgnoreFunc(f, r),
                                                    it = this._data,
                                                    a, rt, d, ut, ft, ct;
                                                it && it.eachItemGraphicEl(function(n, t) {
                                                    n.__temp && (et.remove(n), it.setItemGraphicEl(t, null))
                                                });
                                                b || g.remove();
                                                et.add(p);
                                                a = !st && n.get("step");
                                                v && at.type === r.type && a === this._step ? (tt && !s ? s = this._newPolygon(o, h, r, w) : s && !tt && (p.remove(s), s = this._polygon = null), p.setClipPath(y(r, !1, n)), b && g.updateData(f, ht), f.eachItemGraphicEl(function(n) {
                                                    n.stopAnimation(!0)
                                                }), c(this._stackedOnPoints, h) && c(this._points, o) || (w ? this._updateAnimation(f, h, r, i, a) : (a && (o = u(o, r, a), h = u(h, r, a)), v.setShape({
                                                    points: o
                                                }), s && s.setShape({
                                                    points: o,
                                                    stackedOnPoints: h
                                                })))) : (b && g.updateData(f, ht), a && (o = u(o, r, a), h = u(h, r, a)), v = this._newPolyline(o, r, w), tt && (s = this._newPolygon(o, h, r, w)), p.setClipPath(y(r, !0, n)));
                                                rt = nt(f, r) || f.getVisual("color");
                                                v.useStyle(e.defaults(lt.getLineStyle(), {
                                                    fill: "none",
                                                    stroke: rt,
                                                    lineJoin: "bevel"
                                                }));
                                                d = n.get("smooth");
                                                d = l(n.get("smooth"));
                                                v.setShape({
                                                    smooth: d,
                                                    smoothMonotone: n.get("smoothMonotone"),
                                                    connectNulls: n.get("connectNulls")
                                                });
                                                s && (ut = f.stackedOn, ft = 0, s.useStyle(e.defaults(ot.getAreaStyle(), {
                                                    fill: rt,
                                                    opacity: .7,
                                                    lineJoin: "bevel"
                                                })), ut && (ct = ut.hostModel, ft = l(ct.get("smooth"))), s.setShape({
                                                    smooth: d,
                                                    stackedOnSmooth: ft,
                                                    smoothMonotone: n.get("smoothMonotone"),
                                                    connectNulls: n.get("connectNulls")
                                                }));
                                                this._data = f;
                                                this._coordSys = r;
                                                this._stackedOnPoints = h;
                                                this._points = o;
                                                this._step = a
                                            },
                                            dispose: function() {},
                                            highlight: function(n, t, i, r) {
                                                var e = n.getData(),
                                                    f = s.queryDataIndex(e, r),
                                                    u, h;
                                                !(f instanceof Array) && f != null && f >= 0 ? (u = e.getItemGraphicEl(f), u || (h = e.getItemLayout(f), u = new w(e, f), u.position = h, u.setZ(n.get("zlevel"), n.get("z")), u.ignore = isNaN(h[0]) || isNaN(h[1]), u.__temp = !0, e.setItemGraphicEl(f, u), u.stopSymbolAnimation(!0), this.group.add(u)), u.highlight()) : o.prototype.highlight.call(this, n, t, i, r)
                                            },
                                            downplay: function(n, t, i, r) {
                                                var e = n.getData(),
                                                    f = s.queryDataIndex(e, r),
                                                    u;
                                                f != null && f >= 0 ? (u = e.getItemGraphicEl(f), u && (u.__temp ? (e.setItemGraphicEl(f, null), this.group.remove(u)) : u.downplay())) : o.prototype.downplay.call(this, n, t, i, r)
                                            },
                                            _newPolyline: function(n) {
                                                var t = this._polyline;
                                                return t && this._lineGroup.remove(t), t = new h.Polyline({
                                                    shape: {
                                                        points: n
                                                    },
                                                    silent: !0,
                                                    z2: 10
                                                }), this._lineGroup.add(t), this._polyline = t, t
                                            },
                                            _newPolygon: function(n, t) {
                                                var i = this._polygon;
                                                return i && this._lineGroup.remove(i), i = new h.Polygon({
                                                    shape: {
                                                        points: n,
                                                        stackedOnPoints: t
                                                    },
                                                    silent: !0
                                                }), this._lineGroup.add(i), this._polygon = i, i
                                            },
                                            _getSymbolIgnoreFunc: function(n, t) {
                                                var i = t.getAxesByScale("ordinal")[0];
                                                if (i && i.isLabelIgnored) return e.bind(i.isLabelIgnored, i)
                                            },
                                            _updateAnimation: function(n, t, i, f, e) {
                                                var s = this._polyline,
                                                    a = this._polygon,
                                                    w = n.hostModel,
                                                    o = b(this._data, n, this._stackedOnPoints, t, this._coordSys, i),
                                                    v = o.current,
                                                    k = o.stackedOnCurrent,
                                                    y = o.next,
                                                    d = o.stackedOnNext,
                                                    c, l, h, g, p;
                                                for (e && (v = u(o.current, i, e), k = u(o.stackedOnCurrent, i, e), y = u(o.next, i, e), d = u(o.stackedOnNext, i, e)), s.shape.__points = o.current, s.shape.points = v, r.updateProps(s, {
                                                        shape: {
                                                            points: y
                                                        }
                                                    }, w), a && (a.setShape({
                                                        points: v,
                                                        stackedOnPoints: k
                                                    }), r.updateProps(a, {
                                                        shape: {
                                                            points: y,
                                                            stackedOnPoints: d
                                                        }
                                                    }, w)), c = [], l = o.status, h = 0; h < l.length; h++) g = l[h].cmd, g === "=" && (p = n.getItemGraphicEl(l[h].idx1), p && c.push({
                                                    el: p,
                                                    ptIdx: h
                                                }));
                                                s.animators && s.animators.length && s.animators[0].during(function() {
                                                    for (var t, n = 0; n < c.length; n++) t = c[n].el, t.attr("position", s.shape.__points[c[n].ptIdx])
                                                })
                                            },
                                            remove: function() {
                                                var t = this.group,
                                                    n = this._data;
                                                this._lineGroup.removeAll();
                                                this._symbolDraw.remove(!0);
                                                n && n.eachItemGraphicEl(function(i, r) {
                                                    i.__temp && (t.remove(i), n.setItemGraphicEl(r, null))
                                                });
                                                this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function f(n) {
                                            this.group = new u.Group;
                                            this._symbolCtor = n || o
                                        }

                                        function e(n, t, i) {
                                            var r = n.getItemLayout(t);
                                            return r && !isNaN(r[0]) && !isNaN(r[1]) && !(i && i(t)) && n.getItemVisual(t, "symbol") !== "none"
                                        }
                                        var u = i(43),
                                            o = i(105),
                                            r = f.prototype;
                                        r.updateData = function(n, t) {
                                            var r = this.group,
                                                i = n.hostModel,
                                                f = this._data,
                                                o = this._symbolCtor,
                                                s = {
                                                    itemStyle: i.getModel("itemStyle.normal").getItemStyle(["color"]),
                                                    hoverItemStyle: i.getModel("itemStyle.emphasis").getItemStyle(),
                                                    symbolRotate: i.get("symbolRotate"),
                                                    symbolOffset: i.get("symbolOffset"),
                                                    hoverAnimation: i.get("hoverAnimation"),
                                                    labelModel: i.getModel("label.normal"),
                                                    hoverLabelModel: i.getModel("label.emphasis")
                                                };
                                            n.diff(f).add(function(i) {
                                                var f = n.getItemLayout(i),
                                                    u;
                                                e(n, i, t) && (u = new o(n, i, s), u.attr("position", f), n.setItemGraphicEl(i, u), r.add(u))
                                            }).update(function(h, c) {
                                                var l = f.getItemGraphicEl(c),
                                                    a = n.getItemLayout(h);
                                                if (!e(n, h, t)) {
                                                    r.remove(l);
                                                    return
                                                }
                                                l ? (l.updateData(n, h, s), u.updateProps(l, {
                                                    position: a
                                                }, i)) : (l = new o(n, h), l.attr("position", a));
                                                r.add(l);
                                                n.setItemGraphicEl(h, l)
                                            }).remove(function(n) {
                                                var t = f.getItemGraphicEl(n);
                                                t && t.fadeOut(function() {
                                                    r.remove(t)
                                                })
                                            }).execute();
                                            this._data = n
                                        };
                                        r.updateLayout = function() {
                                            var n = this._data;
                                            n && n.eachItemGraphicEl(function(t, i) {
                                                var r = n.getItemLayout(i);
                                                t.attr("position", r)
                                            })
                                        };
                                        r.remove = function(n) {
                                            var t = this.group,
                                                i = this._data;
                                            i && (n ? i.eachItemGraphicEl(function(n) {
                                                n.fadeOut(function() {
                                                    t.remove(n)
                                                })
                                            }) : t.removeAll())
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function e(n) {
                                            return n = n instanceof Array ? n.slice() : [+n, +n], n[0] /= 2, n[1] /= 2, n
                                        }

                                        function o(n, t, i) {
                                            u.Group.call(this);
                                            this.updateData(n, t, i)
                                        }

                                        function c(n, t) {
                                            this.parent.drift(n, t)
                                        }
                                        var f = i(4),
                                            h = i(106),
                                            u = i(43),
                                            s = i(7),
                                            r = o.prototype;
                                        r._createSymbol = function(n, t, i) {
                                            var f;
                                            this.removeAll();
                                            var o = t.hostModel,
                                                s = t.getItemVisual(i, "color"),
                                                r = h.createSymbol(n, -1, -1, 2, 2, s);
                                            r.attr({
                                                z2: 100,
                                                culling: !0,
                                                scale: [0, 0]
                                            });
                                            r.drift = c;
                                            f = e(t.getItemVisual(i, "symbolSize"));
                                            u.initProps(r, {
                                                scale: f
                                            }, o, i);
                                            this._symbolType = n;
                                            this.add(r)
                                        };
                                        r.stopSymbolAnimation = function(n) {
                                            this.childAt(0).stopAnimation(n)
                                        };
                                        r.getSymbolPath = function() {
                                            return this.childAt(0)
                                        };
                                        r.getScale = function() {
                                            return this.childAt(0).scale
                                        };
                                        r.highlight = function() {
                                            this.childAt(0).trigger("emphasis")
                                        };
                                        r.downplay = function() {
                                            this.childAt(0).trigger("normal")
                                        };
                                        r.setZ = function(n, t) {
                                            var i = this.childAt(0);
                                            i.zlevel = n;
                                            i.z = t
                                        };
                                        r.setDraggable = function(n) {
                                            var t = this.childAt(0);
                                            t.draggable = n;
                                            t.cursor = n ? "move" : "pointer"
                                        };
                                        r.updateData = function(n, t, i) {
                                            var s;
                                            this.silent = !1;
                                            var r = n.getItemVisual(t, "symbol") || "circle",
                                                f = n.hostModel,
                                                o = e(n.getItemVisual(t, "symbolSize"));
                                            r !== this._symbolType ? this._createSymbol(r, n, t) : (s = this.childAt(0), u.updateProps(s, {
                                                scale: o
                                            }, f, t));
                                            this._updateCommon(n, t, o, i);
                                            this._seriesModel = f
                                        };
                                        var l = ["itemStyle", "normal"],
                                            a = ["itemStyle", "emphasis"],
                                            v = ["label", "normal"],
                                            y = ["label", "emphasis"];
                                        r._updateCommon = function(n, t, i, r) {
                                            var o = this.childAt(0),
                                                d = n.hostModel,
                                                g = n.getItemVisual(t, "color"),
                                                h, b, it, rt, w, ut, c, ft, et;
                                            o.type !== "image" && o.useStyle({
                                                strokeNoScale: !0
                                            });
                                            r = r || null;
                                            var ot = r && r.itemStyle,
                                                p = r && r.hoverItemStyle,
                                                st = r && r.symbolRotate,
                                                k = r && r.symbolOffset,
                                                nt = r && r.labelModel,
                                                tt = r && r.hoverLabelModel,
                                                ht = r && r.hoverAnimation;
                                            for (!r || n.hasItemOption ? (h = n.getItemModel(t), ot = h.getModel(l).getItemStyle(["color"]), p = h.getModel(a).getItemStyle(), st = h.getShallow("symbolRotate"), k = h.getShallow("symbolOffset"), nt = h.getModel(v), tt = h.getModel(y), ht = h.getShallow("hoverAnimation")) : p = f.extend({}, p), b = o.style, o.attr("rotation", (st || 0) * Math.PI / 180 || 0), k && o.attr("position", [s.parsePercent(k[0], i[0]), s.parsePercent(k[1], i[1])]), o.setColor(g), o.setStyle(ot), it = n.getItemVisual(t, "opacity"), it != null && (b.opacity = it), rt = n.dimensions.slice(); rt.length && (w = rt.pop(), ut = n.getDimensionInfo(w).type, ut === "ordinal" || ut === "time"););
                                            if (w != null && nt.getShallow("show") ? (u.setText(b, nt, g), b.text = f.retrieve(d.getFormattedLabel(t, "normal"), n.get(w, t))) : b.text = "", w != null && tt.getShallow("show") ? (u.setText(p, tt, g), p.text = f.retrieve(d.getFormattedLabel(t, "emphasis"), n.get(w, t))) : p.text = "", c = e(n.getItemVisual(t, "symbolSize")), o.off("mouseover").off("mouseout").off("emphasis").off("normal"), o.hoverStyle = p, u.setHoverStyle(o), ht && d.ifEnableAnimation()) {
                                                ft = function() {
                                                    var n = c[1] / c[0];
                                                    this.animateTo({
                                                        scale: [Math.max(c[0] * 1.1, c[0] + 3), Math.max(c[1] * 1.1, c[1] + 3 * n)]
                                                    }, 400, "elasticOut")
                                                };
                                                et = function() {
                                                    this.animateTo({
                                                        scale: c
                                                    }, 400, "elasticOut")
                                                };
                                                o.on("mouseover", ft).on("mouseout", et).on("emphasis", ft).on("normal", et)
                                            }
                                        };
                                        r.fadeOut = function(n) {
                                            var t = this.childAt(0);
                                            this.silent = !0;
                                            t.style.text = "";
                                            u.updateProps(t, {
                                                scale: [0, 0]
                                            }, this._seriesModel, this.dataIndex, n)
                                        };
                                        f.inherits(o, u.Group);
                                        n.exports = o
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(43),
                                            o = i(9),
                                            s = r.extendShape({
                                                type: "triangle",
                                                shape: {
                                                    cx: 0,
                                                    cy: 0,
                                                    width: 0,
                                                    height: 0
                                                },
                                                buildPath: function(n, t) {
                                                    var i = t.cx,
                                                        r = t.cy,
                                                        f = t.width / 2,
                                                        u = t.height / 2;
                                                    n.moveTo(i, r - u);
                                                    n.lineTo(i + f, r + u);
                                                    n.lineTo(i - f, r + u);
                                                    n.closePath()
                                                }
                                            }),
                                            h = r.extendShape({
                                                type: "diamond",
                                                shape: {
                                                    cx: 0,
                                                    cy: 0,
                                                    width: 0,
                                                    height: 0
                                                },
                                                buildPath: function(n, t) {
                                                    var i = t.cx,
                                                        r = t.cy,
                                                        u = t.width / 2,
                                                        f = t.height / 2;
                                                    n.moveTo(i, r - f);
                                                    n.lineTo(i + u, r);
                                                    n.lineTo(i, r + f);
                                                    n.lineTo(i - u, r);
                                                    n.closePath()
                                                }
                                            }),
                                            c = r.extendShape({
                                                type: "pin",
                                                shape: {
                                                    x: 0,
                                                    y: 0,
                                                    width: 0,
                                                    height: 0
                                                },
                                                buildPath: function(n, t) {
                                                    var r = t.x,
                                                        o = t.y,
                                                        l = t.width / 5 * 3,
                                                        a = Math.max(l, t.height),
                                                        i = l / 2,
                                                        u = i * i / (a - i),
                                                        s = o - a + i + u,
                                                        f = Math.asin(u / i),
                                                        h = Math.cos(f) * i,
                                                        v = Math.sin(f),
                                                        y = Math.cos(f),
                                                        e, c;
                                                    n.arc(r, s, i, Math.PI - f, Math.PI * 2 + f);
                                                    e = i * .6;
                                                    c = i * .7;
                                                    n.bezierCurveTo(r + h - v * e, s + u + y * e, r, o - c, r, o);
                                                    n.bezierCurveTo(r, o - c, r - h + v * e, s + u + y * e, r - h, s + u);
                                                    n.closePath()
                                                }
                                            }),
                                            l = r.extendShape({
                                                type: "arrow",
                                                shape: {
                                                    x: 0,
                                                    y: 0,
                                                    width: 0,
                                                    height: 0
                                                },
                                                buildPath: function(n, t) {
                                                    var u = t.height,
                                                        e = t.width,
                                                        i = t.x,
                                                        r = t.y,
                                                        f = e / 3 * 2;
                                                    n.moveTo(i, r);
                                                    n.lineTo(i + f, r + u);
                                                    n.lineTo(i, r + u / 4 * 3);
                                                    n.lineTo(i - f, r + u);
                                                    n.lineTo(i, r);
                                                    n.closePath()
                                                }
                                            }),
                                            u = {
                                                line: r.Line,
                                                rect: r.Rect,
                                                roundRect: r.Rect,
                                                square: r.Rect,
                                                circle: r.Circle,
                                                diamond: h,
                                                pin: c,
                                                arrow: l,
                                                triangle: s
                                            },
                                            a = {
                                                line: function(n, t, i, r, u) {
                                                    u.x1 = n;
                                                    u.y1 = t + r / 2;
                                                    u.x2 = n + i;
                                                    u.y2 = t + r / 2
                                                },
                                                rect: function(n, t, i, r, u) {
                                                    u.x = n;
                                                    u.y = t;
                                                    u.width = i;
                                                    u.height = r
                                                },
                                                roundRect: function(n, t, i, r, u) {
                                                    u.x = n;
                                                    u.y = t;
                                                    u.width = i;
                                                    u.height = r;
                                                    u.r = Math.min(i, r) / 4
                                                },
                                                square: function(n, t, i, r, u) {
                                                    var f = Math.min(i, r);
                                                    u.x = n;
                                                    u.y = t;
                                                    u.width = f;
                                                    u.height = f
                                                },
                                                circle: function(n, t, i, r, u) {
                                                    u.cx = n + i / 2;
                                                    u.cy = t + r / 2;
                                                    u.r = Math.min(i, r) / 2
                                                },
                                                diamond: function(n, t, i, r, u) {
                                                    u.cx = n + i / 2;
                                                    u.cy = t + r / 2;
                                                    u.width = i;
                                                    u.height = r
                                                },
                                                pin: function(n, t, i, r, u) {
                                                    u.x = n + i / 2;
                                                    u.y = t + r / 2;
                                                    u.width = i;
                                                    u.height = r
                                                },
                                                arrow: function(n, t, i, r, u) {
                                                    u.x = n + i / 2;
                                                    u.y = t + r / 2;
                                                    u.width = i;
                                                    u.height = r
                                                },
                                                triangle: function(n, t, i, r, u) {
                                                    u.cx = n + i / 2;
                                                    u.cy = t + r / 2;
                                                    u.width = i;
                                                    u.height = r
                                                }
                                            },
                                            f = {};
                                        for (var e in u) u.hasOwnProperty(e) && (f[e] = new u[e]);
                                        var v = r.extendShape({
                                                type: "symbol",
                                                shape: {
                                                    symbolType: "",
                                                    x: 0,
                                                    y: 0,
                                                    width: 0,
                                                    height: 0
                                                },
                                                beforeBrush: function() {
                                                    var n = this.style,
                                                        t = this.shape;
                                                    t.symbolType === "pin" && n.textPosition === "inside" && (n.textPosition = ["50%", "40%"], n.textAlign = "center", n.textVerticalAlign = "middle")
                                                },
                                                buildPath: function(n, t, i) {
                                                    var u = t.symbolType,
                                                        r = f[u];
                                                    t.symbolType !== "none" && (r || (u = "rect", r = f[u]), a[u](t.x, t.y, t.width, t.height, r.shape), r.buildPath(n, r.shape, i))
                                                }
                                            }),
                                            y = function(n) {
                                                if (this.type !== "image") {
                                                    var t = this.style,
                                                        i = this.shape;
                                                    i && i.symbolType === "line" ? t.stroke = n : this.__isEmptyBrush ? (t.stroke = n, t.fill = "#fff") : (t.fill && (t.fill = n), t.stroke && (t.stroke = n));
                                                    this.dirty(!1)
                                                }
                                            },
                                            p = {
                                                createSymbol: function(n, t, i, u, f, e) {
                                                    var h = n.indexOf("empty") === 0,
                                                        s;
                                                    return h && (n = n.substr(5, 1).toLowerCase() + n.substr(6)), s = n.indexOf("image://") === 0 ? new r.Image({
                                                        style: {
                                                            image: n.slice(8),
                                                            x: t,
                                                            y: i,
                                                            width: u,
                                                            height: f
                                                        }
                                                    }) : n.indexOf("path://") === 0 ? r.makePath(n.slice(7), {}, new o(t, i, u, f)) : new v({
                                                        shape: {
                                                            symbolType: n,
                                                            x: t,
                                                            y: i,
                                                            width: u,
                                                            height: f
                                                        }
                                                    }), s.__isEmptyBrush = h, s.setColor = y, s.setColor(e), s
                                                }
                                            };
                                        n.exports = p
                                    }, function(n) {
                                        function t(n) {
                                            return n >= 0 ? 1 : -1
                                        }

                                        function i(n, i, r) {
                                            for (var e = n.getBaseAxis(), h = n.getOtherAxis(e), l = e.onZero ? 0 : h.scale.getExtent()[0], u = h.dim, c = u === "x" || u === "radius" ? 1 : 0, o, s = i.stackedOn, a = i.get(u, r), f; s && t(s.get(u, r)) === t(a);) {
                                                o = s;
                                                break
                                            }
                                            return f = [], f[c] = i.get(e.dim, r), f[1 - c] = o ? o.get(u, r, !0) : l, n.dataToPoint(f)
                                        }

                                        function r(n, t) {
                                            var i = [];
                                            return t.diff(n).add(function(n) {
                                                i.push({
                                                    cmd: "+",
                                                    idx: n
                                                })
                                            }).update(function(n, t) {
                                                i.push({
                                                    cmd: "=",
                                                    idx: t,
                                                    idx1: n
                                                })
                                            }).remove(function(n) {
                                                i.push({
                                                    cmd: "-",
                                                    idx: n
                                                })
                                            }).execute(), i
                                        }
                                        n.exports = function(n, t, u, f, e, o) {
                                            for (var c, d, v, g, nt, s, tt = r(n, t), y = [], p = [], w = [], b = [], it = [], l = [], a = [], k = o.dimensions, h = 0; h < tt.length; h++) {
                                                c = tt[h];
                                                d = !0;
                                                switch (c.cmd) {
                                                    case "=":
                                                        v = n.getItemLayout(c.idx);
                                                        g = t.getItemLayout(c.idx1);
                                                        (isNaN(v[0]) || isNaN(v[1])) && (v = g.slice());
                                                        y.push(v);
                                                        p.push(g);
                                                        w.push(u[c.idx]);
                                                        b.push(f[c.idx1]);
                                                        a.push(t.getRawIndex(c.idx1));
                                                        break;
                                                    case "+":
                                                        s = c.idx;
                                                        y.push(e.dataToPoint([t.get(k[0], s, !0), t.get(k[1], s, !0)]));
                                                        p.push(t.getItemLayout(s).slice());
                                                        w.push(i(e, t, s));
                                                        b.push(f[s]);
                                                        a.push(t.getRawIndex(s));
                                                        break;
                                                    case "-":
                                                        s = c.idx;
                                                        nt = n.getRawIndex(s);
                                                        nt !== s ? (y.push(n.getItemLayout(s)), p.push(o.dataToPoint([n.get(k[0], s, !0), n.get(k[1], s, !0)])), w.push(u[s]), b.push(i(o, n, s)), a.push(nt)) : d = !1
                                                }
                                                d && (it.push(c), l.push(l.length))
                                            }
                                            l.sort(function(n, t) {
                                                return a[n] - a[t]
                                            });
                                            var rt = [],
                                                ut = [],
                                                ft = [],
                                                et = [],
                                                ot = [];
                                            for (h = 0; h < l.length; h++) s = l[h], rt[h] = y[s], ut[h] = p[s], ft[h] = w[s], et[h] = b[s], ot[h] = it[s];
                                            return {
                                                current: rt,
                                                next: ut,
                                                stackedOnCurrent: ft,
                                                stackedOnNext: et,
                                                status: ot
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function f(n) {
                                            return isNaN(n[0]) || isNaN(n[1])
                                        }

                                        function s(n, t, i, s, h, c, p, w, b, k, d) {
                                            for (var g, it, nt, st, ut, rt, ht = 0, tt = i, ft = 0; ft < s; ft++) {
                                                if (g = t[tt], tt >= h || tt < 0) break;
                                                if (f(g)) {
                                                    if (d) {
                                                        tt += c;
                                                        continue
                                                    }
                                                    break
                                                }
                                                if (tt === i) n[c > 0 ? "moveTo" : "lineTo"](g[0], g[1]), y(r, g);
                                                else if (b > 0) {
                                                    if (it = tt + c, nt = t[it], d)
                                                        while (nt && f(t[it])) it += c, nt = t[it];
                                                    var et = .5,
                                                        ot = t[ht],
                                                        nt = t[it];
                                                    !nt || f(nt) ? y(u, g) : (f(nt) && !d && (nt = g), e.sub(o, nt, ot), k === "x" || k === "y" ? (rt = k === "x" ? 0 : 1, st = Math.abs(g[rt] - ot[rt]), ut = Math.abs(g[rt] - nt[rt])) : (st = e.dist(g, ot), ut = e.dist(g, nt)), et = ut / (ut + st), v(u, g, o, -b * (1 - et)));
                                                    l(r, r, w);
                                                    a(r, r, p);
                                                    l(u, u, w);
                                                    a(u, u, p);
                                                    n.bezierCurveTo(r[0], r[1], u[0], u[1], g[0], g[1]);
                                                    v(r, g, o, b * et)
                                                } else n.lineTo(g[0], g[1]);
                                                ht = tt;
                                                tt += c
                                            }
                                            return ft
                                        }

                                        function h(n, t) {
                                            var r = [Infinity, Infinity],
                                                u = [-Infinity, -Infinity],
                                                f, i;
                                            if (t)
                                                for (f = 0; f < n.length; f++) i = n[f], i[0] < r[0] && (r[0] = i[0]), i[1] < r[1] && (r[1] = i[1]), i[0] > u[0] && (u[0] = i[0]), i[1] > u[1] && (u[1] = i[1]);
                                            return {
                                                min: t ? r : u,
                                                max: t ? u : r
                                            }
                                        }
                                        var c = i(45),
                                            e = i(10),
                                            l = e.min,
                                            a = e.max,
                                            v = e.scaleAndAdd,
                                            y = e.copy,
                                            o = [],
                                            r = [],
                                            u = [];
                                        n.exports = {
                                            Polyline: c.extend({
                                                type: "ec-polyline",
                                                shape: {
                                                    points: [],
                                                    smooth: 0,
                                                    smoothConstraint: !0,
                                                    smoothMonotone: null,
                                                    connectNulls: !1
                                                },
                                                style: {
                                                    fill: null,
                                                    stroke: "#000"
                                                },
                                                buildPath: function(n, t) {
                                                    var u = t.points,
                                                        r = 0,
                                                        i = u.length,
                                                        e = h(u, t.smoothConstraint);
                                                    if (t.connectNulls) {
                                                        for (; i > 0; i--)
                                                            if (!f(u[i - 1])) break;
                                                        for (; r < i; r++)
                                                            if (!f(u[r])) break
                                                    }
                                                    while (r < i) r += s(n, u, r, i, i, 1, e.min, e.max, t.smooth, t.smoothMonotone, t.connectNulls) + 1
                                                }
                                            }),
                                            Polygon: c.extend({
                                                type: "ec-polygon",
                                                shape: {
                                                    points: [],
                                                    stackedOnPoints: [],
                                                    smooth: 0,
                                                    stackedOnSmooth: 0,
                                                    smoothConstraint: !0,
                                                    smoothMonotone: null,
                                                    connectNulls: !1
                                                },
                                                buildPath: function(n, t) {
                                                    var u = t.points,
                                                        o = t.stackedOnPoints,
                                                        r = 0,
                                                        i = u.length,
                                                        c = t.smoothMonotone,
                                                        l = h(u, t.smoothConstraint),
                                                        a = h(o, t.smoothConstraint),
                                                        e;
                                                    if (t.connectNulls) {
                                                        for (; i > 0; i--)
                                                            if (!f(u[i - 1])) break;
                                                        for (; r < i; r++)
                                                            if (!f(u[r])) break
                                                    }
                                                    while (r < i) e = s(n, u, r, i, i, 1, l.min, l.max, t.smooth, c, t.connectNulls), s(n, o, r + e - 1, e, i, -1, a.min, a.max, t.stackedOnSmooth, c, t.connectNulls), r += e + 1, n.closePath()
                                                }
                                            })
                                        }
                                    }, function(n) {
                                        n.exports = function(n, t, i, r) {
                                            r.eachRawSeriesByType(n, function(n) {
                                                var u = n.getData(),
                                                    e = n.get("symbol") || t,
                                                    f = n.get("symbolSize");
                                                u.setVisual({
                                                    legendSymbol: i || e,
                                                    symbol: e,
                                                    symbolSize: f
                                                });
                                                r.isSeriesFiltered(n) || (typeof f == "function" && u.each(function(t) {
                                                    var i = n.getRawValue(t),
                                                        r = n.getDataParams(t);
                                                    u.setItemVisual(t, "symbolSize", f(i, r))
                                                }), u.each(function(n) {
                                                    var t = u.getItemModel(n),
                                                        i = t.getShallow("symbol", !0),
                                                        r = t.getShallow("symbolSize", !0);
                                                    i != null && u.setItemVisual(n, "symbol", i);
                                                    r != null && u.setItemVisual(n, "symbolSize", r)
                                                }))
                                            })
                                        }
                                    }, function(n) {
                                        n.exports = function(n, t) {
                                            t.eachSeriesByType(n, function(n) {
                                                var i = n.getData(),
                                                    t = n.coordinateSystem,
                                                    r;
                                                t && (r = t.dimensions, t.type === "singleAxis" ? i.each(r[0], function(n, r) {
                                                    i.setItemLayout(r, isNaN(n) ? [NaN, NaN] : t.dataToPoint(n))
                                                }) : i.each(r, function(n, r, u) {
                                                    i.setItemLayout(u, isNaN(n) || isNaN(r) ? [NaN, NaN] : t.dataToPoint([n, r]))
                                                }, !0))
                                            })
                                        }
                                    }, function(n) {
                                        var t = {
                                                average: function(n) {
                                                    for (var r = 0, i = 0, t = 0; t < n.length; t++) isNaN(n[t]) || (r += n[t], i++);
                                                    return i === 0 ? NaN : r / i
                                                },
                                                sum: function(n) {
                                                    for (var i = 0, t = 0; t < n.length; t++) i += n[t] || 0;
                                                    return i
                                                },
                                                max: function(n) {
                                                    for (var i = -Infinity, t = 0; t < n.length; t++) n[t] > i && (i = n[t]);
                                                    return i
                                                },
                                                min: function(n) {
                                                    for (var i = Infinity, t = 0; t < n.length; t++) n[t] < i && (i = n[t]);
                                                    return i
                                                },
                                                nearest: function(n) {
                                                    return n[0]
                                                }
                                            },
                                            i = function(n) {
                                                return Math.round(n.length / 2)
                                            };
                                        n.exports = function(n, r) {
                                            r.eachSeriesByType(n, function(n) {
                                                var u = n.getData(),
                                                    r = n.get("sampling"),
                                                    e = n.coordinateSystem,
                                                    f;
                                                if (e.type === "cartesian2d" && r) {
                                                    var o = e.getBaseAxis(),
                                                        c = e.getOtherAxis(o),
                                                        s = o.getExtent(),
                                                        l = s[1] - s[0],
                                                        h = Math.round(u.count() / l);
                                                    h > 1 && (typeof r == "string" ? f = t[r] : typeof r == "function" && (f = r), f && (u = u.downSample(c.dim, 1 / h, f, i), n.setData(u)))
                                                }
                                            }, this)
                                        }
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(43),
                                            f = i(4),
                                            r = i(1);
                                        i(113);
                                        i(131);
                                        r.extendComponentView({
                                            type: "grid",
                                            render: function(n) {
                                                this.group.removeAll();
                                                n.get("show") && this.group.add(new u.Rect({
                                                    shape: n.coordinateSystem.getRect(),
                                                    style: f.defaults({
                                                        fill: n.get("backgroundColor")
                                                    }, n.getItemStyle()),
                                                    silent: !0,
                                                    z2: -1
                                                }))
                                            }
                                        });
                                        r.registerPreprocessor(function(n) {
                                            n.xAxis && n.yAxis && !n.grid && (n.grid = {})
                                        })
                                    }, function(n, t, i) {
                                        function s(n, t) {
                                            return n.findGridModel() === t
                                        }

                                        function b(n) {
                                            var f = n.model,
                                                e = f.getFormattedLabels(),
                                                i, o = 1,
                                                r = e.length,
                                                t, u;
                                            for (r > 40 && (o = Math.ceil(r / 40)), t = 0; t < r; t += o) n.isLabelIgnored(t) || (u = f.getTextRect(e[t]), i ? i.union(u) : i = u);
                                            return i
                                        }

                                        function e(n, t, i) {
                                            this._coordsMap = {};
                                            this._coordsList = [];
                                            this._axesMap = {};
                                            this._axesList = [];
                                            this._initCartesian(n, t, i);
                                            this._model = n
                                        }

                                        function k(n, t) {
                                            var i = n.getExtent(),
                                                r = i[0] + i[1];
                                            n.toGlobalCoord = n.dim === "x" ? function(n) {
                                                return n + t
                                            } : function(n) {
                                                return r - n + t
                                            };
                                            n.toLocalCoord = n.dim === "x" ? function(n) {
                                                return n - t
                                            } : function(n) {
                                                return r - n + t
                                            }
                                        }

                                        function a(n) {
                                            return f.map(l, function(t) {
                                                var i = n.getReferringComponents(t)[0];
                                                if (!0 && !i) throw new Error(t + ' "' + f.retrieve(n.get(t + "Index"), n.get(t + "Id"), 0) + '" not found');
                                                return i
                                            })
                                        }

                                        function v(n) {
                                            return n.get("coordinateSystem") === "cartesian2d"
                                        }
                                        var d = t,
                                            y = i(21),
                                            o = i(114),
                                            f = i(4),
                                            h = i(120),
                                            p = i(122),
                                            u = f.each,
                                            w = o.ifAxisCrossZero,
                                            c = o.niceScaleExtent,
                                            r, l;
                                        i(125);
                                        r = e.prototype;
                                        r.type = "grid";
                                        r.getRect = function() {
                                            return this._rect
                                        };
                                        r.update = function(n, t) {
                                            function r(n) {
                                                var r = i[n],
                                                    u, t;
                                                for (u in r)
                                                    if (r.hasOwnProperty(u) && (t = r[u], t && (t.type === "category" || !w(t)))) return !0;
                                                return !1
                                            }
                                            var i = this._axesMap;
                                            this._updateScale(n, this._model);
                                            u(i.x, function(n) {
                                                c(n, n.model)
                                            });
                                            u(i.y, function(n) {
                                                c(n, n.model)
                                            });
                                            u(i.x, function(n) {
                                                r("y") && (n.onZero = !1)
                                            });
                                            u(i.y, function(n) {
                                                r("x") && (n.onZero = !1)
                                            });
                                            this.resize(this._model, t)
                                        };
                                        r.resize = function(n, t) {
                                            function f() {
                                                u(r, function(n) {
                                                    var t = n.isHorizontal(),
                                                        r = t ? [0, i.width] : [0, i.height],
                                                        u = n.inverse ? 1 : 0;
                                                    n.setExtent(r[u], r[1 - u]);
                                                    k(n, t ? i.x : i.y)
                                                })
                                            }
                                            var i = y.getLayoutRect(n.getBoxLayoutParams(), {
                                                    width: t.getWidth(),
                                                    height: t.getHeight()
                                                }),
                                                r;
                                            this._rect = i;
                                            r = this._axesList;
                                            f();
                                            n.get("containLabel") && (u(r, function(n) {
                                                var t, u, r;
                                                n.model.get("axisLabel.inside") || (t = b(n), t && (u = n.isHorizontal() ? "height" : "width", r = n.model.get("axisLabel.margin"), i[u] -= t[u] + r, n.position === "top" ? i.y += t.height + r : n.position === "left" && (i.x += t.width + r)))
                                            }), f())
                                        };
                                        r.getAxis = function(n, t) {
                                            var i = this._axesMap[n],
                                                r;
                                            if (i != null) {
                                                if (t == null)
                                                    for (r in i)
                                                        if (i.hasOwnProperty(r)) return i[r];
                                                return i[t]
                                            }
                                        };
                                        r.getCartesian = function(n, t) {
                                            var u, i, r;
                                            if (n != null && t != null) return u = "x" + n + "y" + t, this._coordsMap[u];
                                            for (i = 0, r = this._coordsList; i < r.length; i++)
                                                if (r[i].getAxis("x").index === n || r[i].getAxis("y").index === t) return r[i]
                                        };
                                        r.convertToPixel = function(n, t, i) {
                                            var r = this._findConvertTarget(n, t);
                                            return r.cartesian ? r.cartesian.dataToPoint(i) : r.axis ? r.axis.toGlobalCoord(r.axis.dataToCoord(i)) : null
                                        };
                                        r.convertFromPixel = function(n, t, i) {
                                            var r = this._findConvertTarget(n, t);
                                            return r.cartesian ? r.cartesian.pointToData(i) : r.axis ? r.axis.coordToData(r.axis.toLocalCoord(i)) : null
                                        };
                                        r._findConvertTarget = function(n, t) {
                                            var i = t.seriesModel,
                                                u = t.xAxisModel || i && i.getReferringComponents("xAxis")[0],
                                                e = t.yAxisModel || i && i.getReferringComponents("yAxis")[0],
                                                s = t.gridModel,
                                                c = this._coordsList,
                                                r, o, h;
                                            return i ? (r = i.coordinateSystem, f.indexOf(c, r) < 0 && (r = null)) : u && e ? r = this.getCartesian(u.componentIndex, e.componentIndex) : u ? o = this.getAxis("x", u.componentIndex) : e ? o = this.getAxis("y", e.componentIndex) : s && (h = s.coordinateSystem, h === this && (r = this._coordsList[0])), {
                                                cartesian: r,
                                                axis: o
                                            }
                                        };
                                        r.containPoint = function(n) {
                                            var t = this._coordsList[0];
                                            if (t) return t.containPoint(n)
                                        };
                                        r._initCartesian = function(n, t) {
                                            function e(u) {
                                                return function(e, h) {
                                                    var c, l, a;
                                                    s(e, n, t) && (c = e.get("position"), u === "x" ? c !== "top" && c !== "bottom" && (c = "bottom", r[c] && (c = c === "top" ? "bottom" : "top")) : c !== "left" && c !== "right" && (c = "left", r[c] && (c = c === "left" ? "right" : "left")), r[c] = !0, l = new p(u, o.createScaleByModel(e), [0, 0], e.get("type"), c), a = l.type === "category", l.onBand = a && e.get("boundaryGap"), l.inverse = e.get("inverse"), l.onZero = e.get("axisLine.onZero"), e.axis = l, l.model = e, l.grid = this, l.index = h, this._axesList.push(l), i[u][h] = l, f[u]++)
                                                }
                                            }
                                            var r = {
                                                    left: !1,
                                                    right: !1,
                                                    top: !1,
                                                    bottom: !1
                                                },
                                                i = {
                                                    x: {},
                                                    y: {}
                                                },
                                                f = {
                                                    x: 0,
                                                    y: 0
                                                };
                                            if (t.eachComponent("xAxis", e("x"), this), t.eachComponent("yAxis", e("y"), this), !f.x || !f.y) {
                                                this._axesMap = {};
                                                this._axesList = [];
                                                return
                                            }
                                            this._axesMap = i;
                                            u(i.x, function(n, t) {
                                                u(i.y, function(i, r) {
                                                    var f = "x" + t + "y" + r,
                                                        u = new h(f);
                                                    u.grid = this;
                                                    this._coordsMap[f] = u;
                                                    this._coordsList.push(u);
                                                    u.addAxis(n);
                                                    u.addAxis(i)
                                                }, this)
                                            }, this)
                                        };
                                        r._updateScale = function(n, t) {
                                            function i(n, t, i) {
                                                u(i.coordDimToDataDim(t.dim), function(i) {
                                                    t.scale.unionExtent(n.getDataExtent(i, t.scale.type !== "ordinal"))
                                                })
                                            }
                                            f.each(this._axesList, function(n) {
                                                n.scale.setExtent(Infinity, -Infinity)
                                            });
                                            n.eachSeries(function(r) {
                                                if (v(r)) {
                                                    var f = a(r, n),
                                                        e = f[0],
                                                        o = f[1];
                                                    if (!s(e, t, n) || !s(o, t, n)) return;
                                                    var h = this.getCartesian(e.componentIndex, o.componentIndex),
                                                        u = r.getData(),
                                                        c = h.getAxis("x"),
                                                        l = h.getAxis("y");
                                                    u.type === "list" && (i(u, c, r), i(u, l, r))
                                                }
                                            }, this)
                                        };
                                        l = ["xAxis", "yAxis"];
                                        e.create = function(n, t) {
                                            var i = [];
                                            return n.eachComponent("grid", function(r, u) {
                                                var f = new e(r, n, t);
                                                f.name = "grid_" + u;
                                                f.resize(r, t);
                                                r.coordinateSystem = f;
                                                i.push(f)
                                            }), n.eachSeries(function(t) {
                                                var o;
                                                if (v(t)) {
                                                    var r = a(t, n),
                                                        i = r[0],
                                                        u = r[1],
                                                        e = i.findGridModel();
                                                    if (1) {
                                                        if (!e) throw new Error('Grid "' + f.retrieve(i.get("gridIndex"), i.get("gridId"), 0) + '" not found');
                                                        if (i.findGridModel() !== u.findGridModel()) throw new Error("xAxis and yAxis must use the same grid");
                                                    }
                                                    o = e.coordinateSystem;
                                                    t.coordinateSystem = o.getCartesian(i.componentIndex, u.componentIndex)
                                                }
                                            }), i
                                        };
                                        e.dimensions = h.prototype.dimensions;
                                        i(26).register("cartesian2d", e);
                                        n.exports = e
                                    }, function(n, t, i) {
                                        var o = i(115),
                                            f = i(117);
                                        i(118);
                                        i(119);
                                        var s = i(116),
                                            e = i(7),
                                            u = i(4),
                                            h = i(8),
                                            r = {};
                                        r.getScaleExtent = function(n, t) {
                                            var l = n.scale,
                                                o = l.getExtent(),
                                                s = o[1] - o[0],
                                                h, c;
                                            if (l.type === "ordinal") return isFinite(s) ? o : [0, 0];
                                            var r = t.getMin ? t.getMin() : t.get("min"),
                                                f = t.getMax ? t.getMax() : t.get("max"),
                                                a = t.getNeedCrossZero ? t.getNeedCrossZero() : !t.get("scale"),
                                                i = t.get("boundaryGap");
                                            return u.isArray(i) || (i = [i || 0, i || 0]), i[0] = e.parsePercent(i[0], 1), i[1] = e.parsePercent(i[1], 1), h = !0, c = !0, r == null && (r = o[0] - i[0] * s, h = !1), f == null && (f = o[1] + i[1] * s, c = !1), r === "dataMin" && (r = o[0]), f === "dataMax" && (f = o[1]), a && (r > 0 && f > 0 && !h && (r = 0), r < 0 && f < 0 && !c && (f = 0)), [r, f]
                                        };
                                        r.niceScaleExtent = function(n, t) {
                                            var i = n.scale,
                                                u = r.getScaleExtent(n, t),
                                                h = (t.getMin ? t.getMin() : t.get("min")) != null,
                                                c = (t.getMax ? t.getMax() : t.get("max")) != null,
                                                l = t.get("splitNumber"),
                                                o, s, e, f;
                                            i.type === "log" && (i.base = t.get("logBase"));
                                            i.setExtent(u[0], u[1]);
                                            i.niceExtent(l, h, c);
                                            o = t.get("minInterval");
                                            !isFinite(o) || h || c || i.type !== "interval" || (f = i.getInterval(), s = Math.max(Math.abs(f), o) / f, u = i.getExtent(), e = (u[1] + u[0]) / 2, i.setExtent(s * (u[0] - e) + e, s * (u[1] - e) + e), i.niceExtent(l));
                                            f = t.get("interval");
                                            f != null && i.setInterval && i.setInterval(f)
                                        };
                                        r.createScaleByModel = function(n, t) {
                                            if (t = t || n.get("type"), t) switch (t) {
                                                case "category":
                                                    return new o(n.getCategories(), [Infinity, -Infinity]);
                                                case "value":
                                                    return new f;
                                                default:
                                                    return (s.getClass(t) || f).create(n)
                                            }
                                        };
                                        r.ifAxisCrossZero = function(n) {
                                            var t = n.scale.getExtent(),
                                                i = t[0],
                                                r = t[1];
                                            return !(i > 0 && r > 0 || i < 0 && r < 0)
                                        };
                                        r.getAxisLabelInterval = function(n, t, i, r) {
                                            var o, s = 0,
                                                c = 0,
                                                f = 1,
                                                e, l, u;
                                            for (t.length > 40 && (f = Math.floor(t.length / 40)), e = 0; e < n.length; e += f) l = n[e], u = h.getBoundingRect(t[e], i, "center", "top"), u[r ? "x" : "y"] += l, u[r ? "width" : "height"] *= 1.3, o ? o.intersect(u) ? (c++, s = Math.max(s, c)) : (o.union(u), c = 0) : o = u.clone();
                                            return s === 0 && f > 1 ? f : (s + 1) * f - 1
                                        };
                                        r.getFormattedLabels = function(n, t) {
                                            var i = n.scale,
                                                r = i.getTicksLabels(),
                                                f = i.getTicks();
                                            return typeof t == "string" ? (t = function(n) {
                                                return function(t) {
                                                    return n.replace("{value}", t)
                                                }
                                            }(t), u.map(r, t)) : typeof t == "function" ? u.map(f, function(r, u) {
                                                return t(n.type === "category" ? i.getLabel(r) : r, u)
                                            }, this) : r
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            e = i(116),
                                            u = e.prototype,
                                            f = e.extend({
                                                type: "ordinal",
                                                init: function(n, t) {
                                                    this._data = n;
                                                    this._extent = t || [0, n.length - 1]
                                                },
                                                parse: function(n) {
                                                    return typeof n == "string" ? r.indexOf(this._data, n) : Math.round(n)
                                                },
                                                contain: function(n) {
                                                    return n = this.parse(n), u.contain.call(this, n) && this._data[n] != null
                                                },
                                                normalize: function(n) {
                                                    return u.normalize.call(this, this.parse(n))
                                                },
                                                scale: function(n) {
                                                    return Math.round(u.scale.call(this, n))
                                                },
                                                getTicks: function() {
                                                    for (var t = [], i = this._extent, n = i[0]; n <= i[1];) t.push(n), n++;
                                                    return t
                                                },
                                                getLabel: function(n) {
                                                    return this._data[n]
                                                },
                                                count: function() {
                                                    return this._extent[1] - this._extent[0] + 1
                                                },
                                                niceTicks: r.noop,
                                                niceExtent: r.noop
                                            });
                                        f.create = function() {
                                            return new f
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function u() {
                                            this._extent = [Infinity, -Infinity];
                                            this._interval = 0;
                                            this.init && this.init.apply(this, arguments)
                                        }
                                        var f = i(13),
                                            r = u.prototype;
                                        r.parse = function(n) {
                                            return n
                                        };
                                        r.contain = function(n) {
                                            var t = this._extent;
                                            return n >= t[0] && n <= t[1]
                                        };
                                        r.normalize = function(n) {
                                            var t = this._extent;
                                            return t[1] === t[0] ? .5 : (n - t[0]) / (t[1] - t[0])
                                        };
                                        r.scale = function(n) {
                                            var t = this._extent;
                                            return n * (t[1] - t[0]) + t[0]
                                        };
                                        r.unionExtent = function(n) {
                                            var t = this._extent;
                                            n[0] < t[0] && (t[0] = n[0]);
                                            n[1] > t[1] && (t[1] = n[1])
                                        };
                                        r.getExtent = function() {
                                            return this._extent.slice()
                                        };
                                        r.setExtent = function(n, t) {
                                            var i = this._extent;
                                            isNaN(n) || (i[0] = n);
                                            isNaN(t) || (i[1] = t)
                                        };
                                        r.getTicksLabels = function() {
                                            for (var t = [], i = this.getTicks(), n = 0; n < i.length; n++) t.push(this.getLabel(i[n]));
                                            return t
                                        };
                                        f.enableClassExtend(u);
                                        f.enableClassManagement(u, {
                                            registerWhenExtend: !0
                                        });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var e = i(7),
                                            h = i(6),
                                            c = i(116),
                                            o = Math.floor,
                                            s = Math.ceil,
                                            u = e.getPrecisionSafe,
                                            r = e.round,
                                            f = c.extend({
                                                type: "interval",
                                                _interval: 0,
                                                setExtent: function(n, t) {
                                                    var i = this._extent;
                                                    isNaN(n) || (i[0] = parseFloat(n));
                                                    isNaN(t) || (i[1] = parseFloat(t))
                                                },
                                                unionExtent: function(n) {
                                                    var t = this._extent;
                                                    n[0] < t[0] && (t[0] = n[0]);
                                                    n[1] > t[1] && (t[1] = n[1]);
                                                    f.prototype.setExtent.call(this, t[0], t[1])
                                                },
                                                getInterval: function() {
                                                    return this._interval || this.niceTicks(), this._interval
                                                },
                                                setInterval: function(n) {
                                                    this._interval = n;
                                                    this._niceExtent = this._extent.slice()
                                                },
                                                getTicks: function() {
                                                    var t, o, i;
                                                    this._interval || this.niceTicks();
                                                    var e = this._interval,
                                                        f = this._extent,
                                                        n = [];
                                                    if (e) {
                                                        for (t = this._niceExtent, o = u(e) + 2, f[0] < t[0] && n.push(f[0]), i = t[0]; i <= t[1];)
                                                            if (n.push(i), i = r(i + e, o), n.length > 1e4) return [];
                                                        f[1] > (n.length ? n[n.length - 1] : t[1]) && n.push(f[1])
                                                    }
                                                    return n
                                                },
                                                getTicksLabels: function() {
                                                    for (var t = [], i = this.getTicks(), n = 0; n < i.length; n++) t.push(this.getLabel(i[n]));
                                                    return t
                                                },
                                                getLabel: function(n) {
                                                    return h.addCommas(n)
                                                },
                                                niceTicks: function(n) {
                                                    var t, i;
                                                    if (n = n || 5, t = this._extent, i = t[1] - t[0], isFinite(i)) {
                                                        i < 0 && (i = -i, t.reverse());
                                                        var f = r(e.nice(i / n, !0), Math.max(u(t[0]), u(t[1])) + 2),
                                                            h = u(f) + 2,
                                                            c = [r(s(t[0] / f) * f, h), r(o(t[1] / f) * f, h)];
                                                        this._interval = f;
                                                        this._niceExtent = c
                                                    }
                                                },
                                                niceExtent: function(n, t, i) {
                                                    var u = this._extent,
                                                        e, h, f;
                                                    u[0] === u[1] && (u[0] !== 0 ? (e = u[0], i ? u[0] -= e / 2 : (u[1] += e / 2, u[0] -= e / 2)) : u[1] = 1);
                                                    h = u[1] - u[0];
                                                    isFinite(h) || (u[0] = 0, u[1] = 1);
                                                    this.niceTicks(n);
                                                    f = this._interval;
                                                    t || (u[0] = r(o(u[0] / f) * f));
                                                    i || (u[1] = r(s(u[1] / f) * f))
                                                }
                                            });
                                        f.create = function() {
                                            return new f
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var v = i(4),
                                            o = i(7),
                                            y = i(6),
                                            c = i(117),
                                            p = c.prototype,
                                            l = Math.ceil,
                                            a = Math.floor,
                                            u = 1e3,
                                            f = u * 60,
                                            e = f * 60,
                                            r = e * 24,
                                            w = function(n, t, i, r) {
                                                while (i < r) {
                                                    var u = i + r >>> 1;
                                                    n[u][2] < t ? i = u + 1 : r = u
                                                }
                                                return i
                                            },
                                            s = c.extend({
                                                type: "time",
                                                getLabel: function(n) {
                                                    var t = this._stepLvl,
                                                        i = new Date(n);
                                                    return y.formatTime(t[0], i)
                                                },
                                                niceExtent: function(n, t, i) {
                                                    var u = this._extent,
                                                        e, f;
                                                    u[0] === u[1] && (u[0] -= r, u[1] += r);
                                                    u[1] === -Infinity && u[0] === Infinity && (e = new Date, u[1] = new Date(e.getFullYear(), e.getMonth(), e.getDate()), u[0] = u[1] - r);
                                                    this.niceTicks(n);
                                                    f = this._interval;
                                                    t || (u[0] = o.round(a(u[0] / f) * f));
                                                    i || (u[1] = o.round(l(u[1] / f) * f))
                                                },
                                                niceTicks: function(n) {
                                                    var e, s, c;
                                                    n = n || 10;
                                                    var i = this._extent,
                                                        u = i[1] - i[0],
                                                        v = u / n,
                                                        f = h.length,
                                                        y = w(h, v, 0, f),
                                                        r = h[Math.min(y, f - 1)],
                                                        t = r[2];
                                                    r[0] === "year" && (e = u / t, s = o.nice(e / n, !0), t *= s);
                                                    c = [l(i[0] / t) * t, a(i[1] / t) * t];
                                                    this._stepLvl = r;
                                                    this._interval = t;
                                                    this._niceExtent = c
                                                },
                                                parse: function(n) {
                                                    return +o.parseDate(n)
                                                }
                                            }),
                                            h;
                                        v.each(["contain", "normalize"], function(n) {
                                            s.prototype[n] = function(t) {
                                                return p[n].call(this, this.parse(t))
                                            }
                                        });
                                        h = [
                                            ["hh:mm:ss", 1, u],
                                            ["hh:mm:ss", 5, u * 5],
                                            ["hh:mm:ss", 10, u * 10],
                                            ["hh:mm:ss", 15, u * 15],
                                            ["hh:mm:ss", 30, u * 30],
                                            ["hh:mm\nMM-dd", 1, f],
                                            ["hh:mm\nMM-dd", 5, f * 5],
                                            ["hh:mm\nMM-dd", 10, f * 10],
                                            ["hh:mm\nMM-dd", 15, f * 15],
                                            ["hh:mm\nMM-dd", 30, f * 30],
                                            ["hh:mm\nMM-dd", 1, e],
                                            ["hh:mm\nMM-dd", 2, e * 2],
                                            ["hh:mm\nMM-dd", 6, e * 6],
                                            ["hh:mm\nMM-dd", 12, e * 12],
                                            ["MM-dd\nyyyy", 1, r],
                                            ["week", 7, r * 7],
                                            ["month", 1, r * 31],
                                            ["quarter", 3, r * 95],
                                            ["half-year", 6, r * 190],
                                            ["year", 1, r * 380]
                                        ];
                                        s.create = function() {
                                            return new s
                                        };
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function h(n, t) {
                                            return y(n, v(t))
                                        }
                                        var l = i(4),
                                            c = i(116),
                                            u = i(7),
                                            a = i(117),
                                            f = c.prototype,
                                            e = a.prototype,
                                            v = u.getPrecisionSafe,
                                            y = u.round,
                                            p = Math.floor,
                                            w = Math.ceil,
                                            o = Math.pow,
                                            r = Math.log,
                                            s = c.extend({
                                                type: "log",
                                                base: 10,
                                                $constructor: function() {
                                                    c.apply(this, arguments);
                                                    this._originalScale = new a
                                                },
                                                getTicks: function() {
                                                    var n = this._originalScale,
                                                        t = this._extent,
                                                        i = n.getExtent();
                                                    return l.map(e.getTicks.call(this), function(r) {
                                                        var f = u.round(o(this.base, r));
                                                        return f = r === t[0] && n.__fixMin ? h(f, i[0]) : f, r === t[1] && n.__fixMax ? h(f, i[1]) : f
                                                    }, this)
                                                },
                                                getLabel: e.getLabel,
                                                scale: function(n) {
                                                    return n = f.scale.call(this, n), o(this.base, n)
                                                },
                                                setExtent: function(n, t) {
                                                    var i = this.base;
                                                    n = r(n) / r(i);
                                                    t = r(t) / r(i);
                                                    e.setExtent.call(this, n, t)
                                                },
                                                getExtent: function() {
                                                    var r = this.base,
                                                        n = f.getExtent.call(this),
                                                        t, i;
                                                    return n[0] = o(r, n[0]), n[1] = o(r, n[1]), t = this._originalScale, i = t.getExtent(), t.__fixMin && (n[0] = h(n[0], i[0])), t.__fixMax && (n[1] = h(n[1], i[1])), n
                                                },
                                                unionExtent: function(n) {
                                                    this._originalScale.unionExtent(n);
                                                    var t = this.base;
                                                    n[0] = r(n[0]) / r(t);
                                                    n[1] = r(n[1]) / r(t);
                                                    f.unionExtent.call(this, n)
                                                },
                                                niceTicks: function(n) {
                                                    var i, r, t, f, e;
                                                    if (n = n || 10, i = this._extent, r = i[1] - i[0], r !== Infinity && !(r <= 0)) {
                                                        for (t = u.quantity(r), f = n / r * t, f <= .5 && (t *= 10); !isNaN(t) && Math.abs(t) < 1 && Math.abs(t) > 0;) t *= 10;
                                                        e = [u.round(w(i[0] / t) * t), u.round(p(i[1] / t) * t)];
                                                        this._interval = t;
                                                        this._niceExtent = e
                                                    }
                                                },
                                                niceExtent: function(n, t, i) {
                                                    e.niceExtent.call(this, n, t, i);
                                                    var r = this._originalScale;
                                                    r.__fixMin = t;
                                                    r.__fixMax = i
                                                }
                                            });
                                        l.each(["contain", "normalize"], function(n) {
                                            s.prototype[n] = function(t) {
                                                return t = r(t) / r(this.base), f[n].call(this, t)
                                            }
                                        });
                                        s.create = function() {
                                            return new s
                                        };
                                        n.exports = s
                                    }, function(n, t, i) {
                                        "use strict";

                                        function r(n) {
                                            u.call(this, n)
                                        }
                                        var f = i(4),
                                            u = i(121);
                                        r.prototype = {
                                            constructor: r,
                                            type: "cartesian2d",
                                            dimensions: ["x", "y"],
                                            getBaseAxis: function() {
                                                return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x")
                                            },
                                            containPoint: function(n) {
                                                var t = this.getAxis("x"),
                                                    i = this.getAxis("y");
                                                return t.contain(t.toLocalCoord(n[0])) && i.contain(i.toLocalCoord(n[1]))
                                            },
                                            containData: function(n) {
                                                return this.getAxis("x").containData(n[0]) && this.getAxis("y").containData(n[1])
                                            },
                                            dataToPoints: function(n, t) {
                                                return n.mapArray(["x", "y"], function(n, t) {
                                                    return this.dataToPoint([n, t])
                                                }, t, this)
                                            },
                                            dataToPoint: function(n, t) {
                                                var i = this.getAxis("x"),
                                                    r = this.getAxis("y");
                                                return [i.toGlobalCoord(i.dataToCoord(n[0], t)), r.toGlobalCoord(r.dataToCoord(n[1], t))]
                                            },
                                            pointToData: function(n, t) {
                                                var i = this.getAxis("x"),
                                                    r = this.getAxis("y");
                                                return [i.coordToData(i.toLocalCoord(n[0]), t), r.coordToData(r.toLocalCoord(n[1]), t)]
                                            },
                                            getOtherAxis: function(n) {
                                                return this.getAxis(n.dim === "x" ? "y" : "x")
                                            }
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n) {
                                            return this._axes[n]
                                        }
                                        var u = i(4),
                                            r = function(n) {
                                                this._axes = {};
                                                this._dimList = [];
                                                this.name = n || ""
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            type: "cartesian",
                                            getAxis: function(n) {
                                                return this._axes[n]
                                            },
                                            getAxes: function() {
                                                return u.map(this._dimList, f, this)
                                            },
                                            getAxesByScale: function(n) {
                                                return n = n.toLowerCase(), u.filter(this.getAxes(), function(t) {
                                                    return t.scale.type === n
                                                })
                                            },
                                            addAxis: function(n) {
                                                var t = n.dim;
                                                this._axes[t] = n;
                                                this._dimList.push(t)
                                            },
                                            dataToCoord: function(n) {
                                                return this._dataCoordConvert(n, "dataToCoord")
                                            },
                                            coordToData: function(n) {
                                                return this._dataCoordConvert(n, "coordToData")
                                            },
                                            _dataCoordConvert: function(n, t) {
                                                for (var i, e, u = this._dimList, f = n instanceof Array ? [] : {}, r = 0; r < u.length; r++) i = u[r], e = this._axes[i], f[i] = e[t](n[i]);
                                                return f
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var f = i(4),
                                            u = i(123),
                                            e = i(124),
                                            r = function(n, t, i, r, f) {
                                                u.call(this, n, t, i);
                                                this.type = r || "value";
                                                this.position = f || "bottom"
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            index: 0,
                                            onZero: !1,
                                            model: null,
                                            isHorizontal: function() {
                                                var n = this.position;
                                                return n === "top" || n === "bottom"
                                            },
                                            getGlobalExtent: function() {
                                                var n = this.getExtent();
                                                return n[0] = this.toGlobalCoord(n[0]), n[1] = this.toGlobalCoord(n[1]), n
                                            },
                                            getLabelInterval: function() {
                                                var n = this._labelInterval;
                                                return n || (n = this._labelInterval = e(this)), n
                                            },
                                            isLabelIgnored: function(n) {
                                                if (this.type === "category") {
                                                    var t = this.getLabelInterval();
                                                    return typeof t == "function" && !t(n, this.scale.getLabel(n)) || n % (t + 1)
                                                }
                                            },
                                            toLocalCoord: null,
                                            toGlobalCoord: null
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function o(n, t) {
                                            var r = n[1] - n[0],
                                                u = t,
                                                i = r / u / 2;
                                            n[0] += i;
                                            n[1] -= i
                                        }
                                        var u = i(7),
                                            f = u.linearMap,
                                            e = i(4),
                                            s = [0, 1],
                                            r = function(n, t, i) {
                                                this.dim = n;
                                                this.scale = t;
                                                this._extent = i || [0, 0];
                                                this.inverse = !1;
                                                this.onBand = !1
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            contain: function(n) {
                                                var t = this._extent,
                                                    i = Math.min(t[0], t[1]),
                                                    r = Math.max(t[0], t[1]);
                                                return n >= i && n <= r
                                            },
                                            containData: function(n) {
                                                return this.contain(this.dataToCoord(n))
                                            },
                                            getExtent: function() {
                                                return this._extent.slice()
                                            },
                                            getPixelPrecision: function(n) {
                                                return u.getPixelPrecision(n || this.scale.getExtent(), this._extent)
                                            },
                                            setExtent: function(n, t) {
                                                var i = this._extent;
                                                i[0] = n;
                                                i[1] = t
                                            },
                                            dataToCoord: function(n, t) {
                                                var i = this._extent,
                                                    r = this.scale;
                                                return n = r.normalize(n), this.onBand && r.type === "ordinal" && (i = i.slice(), o(i, r.count())), f(n, s, i, t)
                                            },
                                            coordToData: function(n, t) {
                                                var i = this._extent,
                                                    r = this.scale,
                                                    u;
                                                return this.onBand && r.type === "ordinal" && (i = i.slice(), o(i, r.count())), u = f(n, i, s, t), this.scale.scale(u)
                                            },
                                            getTicksCoords: function(n) {
                                                var i, r, t;
                                                if (this.onBand && !n) {
                                                    for (i = this.getBands(), r = [], t = 0; t < i.length; t++) r.push(i[t][0]);
                                                    return i[t - 1] && r.push(i[t - 1][1]), r
                                                }
                                                return e.map(this.scale.getTicks(), this.dataToCoord, this)
                                            },
                                            getLabelsCoords: function() {
                                                return e.map(this.scale.getTicks(), this.dataToCoord, this)
                                            },
                                            getBands: function() {
                                                for (var r = this.getExtent(), u = [], t = this.scale.count(), i = r[0], e = r[1], f = e - i, n = 0; n < t; n++) u.push([f * n / t + i, f * (n + 1) / t + i]);
                                                return u
                                            },
                                            getBandWidth: function() {
                                                var t = this._extent,
                                                    i = this.scale.getExtent(),
                                                    n = i[1] - i[0] + (this.onBand ? 1 : 0),
                                                    r;
                                                return n === 0 && (n = 1), r = Math.abs(t[1] - t[0]), Math.abs(r) / n
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(4),
                                            u = i(114);
                                        n.exports = function(n) {
                                            var i = n.model,
                                                f = i.getModel("axisLabel"),
                                                t = f.get("interval");
                                            return (n.type === "category" && t === "auto") ? u.getAxisLabelInterval(r.map(n.scale.getTicks(), n.dataToCoord, n), i.getFormattedLabels(), f.getModel("textStyle").getFont(), n.isHorizontal()) : t === "auto" ? 0 : t
                                        }
                                    }, function(n, t, i) {
                                        "use strict";
                                        i(126);
                                        var r = i(19);
                                        n.exports = r.extend({
                                            type: "grid",
                                            dependencies: ["xAxis", "yAxis"],
                                            layoutMode: "box",
                                            coordinateSystem: null,
                                            defaultOption: {
                                                show: !1,
                                                zlevel: 0,
                                                z: 0,
                                                left: "10%",
                                                top: 60,
                                                right: "10%",
                                                bottom: 60,
                                                containLabel: !1,
                                                backgroundColor: "rgba(0,0,0,0)",
                                                borderWidth: 1,
                                                borderColor: "#ccc"
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function o(n, t) {
                                            return t.type || (t.data ? "category" : "value")
                                        }
                                        var s = i(19),
                                            f = i(4),
                                            e = i(127),
                                            r = s.extend({
                                                type: "cartesian2dAxis",
                                                axis: null,
                                                init: function() {
                                                    r.superApply(this, "init", arguments);
                                                    this.resetRange()
                                                },
                                                mergeOption: function() {
                                                    r.superApply(this, "mergeOption", arguments);
                                                    this.resetRange()
                                                },
                                                restoreData: function() {
                                                    r.superApply(this, "restoreData", arguments);
                                                    this.resetRange()
                                                },
                                                findGridModel: function() {
                                                    return this.ecModel.queryComponents({
                                                        mainType: "grid",
                                                        index: this.get("gridIndex"),
                                                        id: this.get("gridId")
                                                    })[0]
                                                }
                                            }),
                                            u;
                                        f.merge(r.prototype, i(129));
                                        f.merge(r.prototype, i(130));
                                        u = {
                                            offset: 0
                                        };
                                        e("x", r, o, u);
                                        e("y", r, o, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var f = i(128),
                                            r = i(4),
                                            e = i(19),
                                            u = i(21),
                                            o = ["value", "category", "time", "log"];
                                        n.exports = function(n, t, i, s) {
                                            r.each(o, function(e) {
                                                t.extend({
                                                    type: n + "Axis." + e,
                                                    mergeDefaultAndTheme: function(t, f) {
                                                        var o = this.layoutMode,
                                                            s = o ? u.getLayoutParams(t) : {},
                                                            h = f.getTheme();
                                                        r.merge(t, h.get(e + "Axis"));
                                                        r.merge(t, this.getDefaultOption());
                                                        t.type = i(n, t);
                                                        o && u.mergeLayoutParam(t, s, o)
                                                    },
                                                    defaultOption: r.mergeAll([{}, f[e + "Axis"], s], !0)
                                                })
                                            });
                                            e.registerSubTypeDefaulter(n + "Axis", r.curry(i, n))
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            f = {
                                                show: !0,
                                                zlevel: 0,
                                                z: 0,
                                                inverse: !1,
                                                name: "",
                                                nameLocation: "end",
                                                nameRotate: null,
                                                nameTruncate: {
                                                    maxWidth: null,
                                                    ellipsis: "...",
                                                    placeholder: "."
                                                },
                                                nameTextStyle: {},
                                                nameGap: 15,
                                                silent: !1,
                                                triggerEvent: !1,
                                                tooltip: {
                                                    show: !1
                                                },
                                                axisLine: {
                                                    show: !0,
                                                    onZero: !0,
                                                    lineStyle: {
                                                        color: "#333",
                                                        width: 1,
                                                        type: "solid"
                                                    }
                                                },
                                                axisTick: {
                                                    show: !0,
                                                    inside: !1,
                                                    length: 5,
                                                    lineStyle: {
                                                        width: 1
                                                    }
                                                },
                                                axisLabel: {
                                                    show: !0,
                                                    inside: !1,
                                                    rotate: 0,
                                                    margin: 8,
                                                    textStyle: {
                                                        fontSize: 12
                                                    }
                                                },
                                                splitLine: {
                                                    show: !0,
                                                    lineStyle: {
                                                        color: ["#ccc"],
                                                        width: 1,
                                                        type: "solid"
                                                    }
                                                },
                                                splitArea: {
                                                    show: !1,
                                                    areaStyle: {
                                                        color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"]
                                                    }
                                                }
                                            },
                                            o = r.merge({
                                                boundaryGap: !0,
                                                splitLine: {
                                                    show: !1
                                                },
                                                axisTick: {
                                                    alignWithLabel: !1,
                                                    interval: "auto"
                                                },
                                                axisLabel: {
                                                    interval: "auto"
                                                }
                                            }, f),
                                            u = r.merge({
                                                boundaryGap: [0, 0],
                                                splitNumber: 5
                                            }, f),
                                            s = r.defaults({
                                                scale: !0,
                                                min: "dataMin",
                                                max: "dataMax"
                                            }, u),
                                            e = r.defaults({
                                                logBase: 10
                                            }, u);
                                        e.scale = !0;
                                        n.exports = {
                                            categoryAxis: o,
                                            valueAxis: u,
                                            timeAxis: s,
                                            logAxis: e
                                        }
                                    }, function(n, t, i) {
                                        function f(n) {
                                            return r.isObject(n) && n.value != null ? n.value : n
                                        }

                                        function e() {
                                            return this.get("type") === "category" && r.map(this.get("data"), f)
                                        }

                                        function o() {
                                            return u.getFormattedLabels(this.axis, this.get("axisLabel.formatter"))
                                        }
                                        var r = i(4),
                                            u = i(114);
                                        n.exports = {
                                            getFormattedLabels: o,
                                            getCategories: e
                                        }
                                    }, function(n) {
                                        n.exports = {
                                            getMin: function() {
                                                var t = this.option,
                                                    n = t.rangeStart != null ? t.rangeStart : t.min;
                                                return n instanceof Date && (n = +n), n
                                            },
                                            getMax: function() {
                                                var t = this.option,
                                                    n = t.rangeEnd != null ? t.rangeEnd : t.max;
                                                return n instanceof Date && (n = +n), n
                                            },
                                            getNeedCrossZero: function() {
                                                var n = this.option;
                                                return n.rangeStart != null || n.rangeEnd != null ? !1 : !n.scale
                                            },
                                            setRange: function(n, t) {
                                                this.option.rangeStart = n;
                                                this.option.rangeEnd = t
                                            },
                                            resetRange: function() {
                                                this.option.rangeStart = this.option.rangeEnd = null
                                            }
                                        }
                                    }, function(n, t, i) {
                                        "use strict";
                                        i(126);
                                        i(132)
                                    }, function(n, t, i) {
                                        function l(n, t) {
                                            function v(n) {
                                                var t = a.getAxis(n);
                                                return t.toGlobalCoord(t.dataToCoord(0))
                                            }
                                            var a = n.coordinateSystem,
                                                e = t.axis,
                                                i = {},
                                                h = e.position,
                                                c = e.onZero ? "onZero" : h,
                                                o = e.dim,
                                                u = a.getRect(),
                                                f = [u.x, u.x + u.width, u.y, u.y + u.height],
                                                s = t.get("offset") || 0,
                                                r = {
                                                    x: {
                                                        top: f[2] - s,
                                                        bottom: f[3] + s
                                                    },
                                                    y: {
                                                        left: f[0] - s,
                                                        right: f[1] + s
                                                    }
                                                },
                                                y, l;
                                            return r.x.onZero = Math.max(Math.min(v("y"), r.x.bottom), r.x.top), r.y.onZero = Math.max(Math.min(v("x"), r.y.right), r.y.left), i.position = [o === "y" ? r.y[c] : f[0], o === "x" ? r.x[c] : f[3]], i.rotation = Math.PI / 2 * (o === "x" ? 0 : 1), y = {
                                                top: -1,
                                                bottom: 1,
                                                left: -1,
                                                right: 1
                                            }, i.labelDirection = i.tickDirection = i.nameDirection = y[h], e.onZero && (i.labelOffset = r[o][h] - r[o].onZero), t.getModel("axisTick").get("inside") && (i.tickDirection = -i.tickDirection), t.getModel("axisLabel").get("inside") && (i.labelDirection = -i.labelDirection), l = t.getModel("axisLabel").get("rotate"), i.labelRotation = c === "top" ? -l : l, i.labelInterval = e.getLabelInterval(), i.z2 = 1, i
                                        }
                                        var r = i(4),
                                            u = i(43),
                                            f = i(133),
                                            e = f.ifIgnoreOnTick,
                                            o = f.getInterval,
                                            h = ["axisLine", "axisLabel", "axisTick", "axisName"],
                                            c = ["splitArea", "splitLine"],
                                            s = i(1).extendComponentView({
                                                type: "axis",
                                                render: function(n) {
                                                    var i;
                                                    if (this.group.removeAll(), i = this._axisGroup, this._axisGroup = new u.Group, this.group.add(this._axisGroup), n.get("show")) {
                                                        var e = n.findGridModel(),
                                                            o = l(e, n),
                                                            t = new f(n, o);
                                                        r.each(h, t.add, t);
                                                        this._axisGroup.add(t.getGroup());
                                                        r.each(c, function(t) {
                                                            n.get(t + ".show") && this["_" + t](n, e, o.labelInterval)
                                                        }, this);
                                                        u.groupTransition(i, this._axisGroup, n)
                                                    }
                                                },
                                                _splitLine: function(n, t, i) {
                                                    var a = n.axis,
                                                        y = n.getModel("splitLine"),
                                                        p = y.getModel("lineStyle"),
                                                        f = p.get("color"),
                                                        k = o(y, i),
                                                        l, v, b;
                                                    f = r.isArray(f) ? f : [f];
                                                    var s = t.coordinateSystem.getRect(),
                                                        d = a.isHorizontal(),
                                                        g = 0,
                                                        w = a.getTicksCoords(),
                                                        nt = a.scale.getTicks(),
                                                        h = [],
                                                        c = [],
                                                        tt = p.getLineStyle();
                                                    for (l = 0; l < w.length; l++) e(a, l, k) || (v = a.toGlobalCoord(w[l]), d ? (h[0] = v, h[1] = s.y, c[0] = v, c[1] = s.y + s.height) : (h[0] = s.x, h[1] = v, c[0] = s.x + s.width, c[1] = v), b = g++ % f.length, this._axisGroup.add(new u.Line(u.subPixelOptimizeLine({
                                                        anid: "line_" + nt[l],
                                                        shape: {
                                                            x1: h[0],
                                                            y1: h[1],
                                                            x2: c[0],
                                                            y2: c[1]
                                                        },
                                                        style: r.defaults({
                                                            stroke: f[b]
                                                        }, tt),
                                                        silent: !0
                                                    }))))
                                                },
                                                _splitArea: function(n, t, i) {
                                                    for (var f = n.axis, b = n.getModel("splitArea"), k = b.getModel("areaStyle"), s = k.get("color"), a = t.coordinateSystem.getRect(), v = f.getTicksCoords(), tt = f.scale.getTicks(), d = f.toGlobalCoord(v[0]), g = f.toGlobalCoord(v[0]), it = 0, rt = o(b, i), ut = k.getAreaStyle(), w, c, l, y, p, nt, s = r.isArray(s) ? s : [s], h = 1; h < v.length; h++) e(f, h, rt) || (w = f.toGlobalCoord(v[h]), f.isHorizontal() ? (c = d, l = a.y, y = w - c, p = a.height) : (c = a.x, l = g, y = a.width, p = w - l), nt = it++ % s.length, this._axisGroup.add(new u.Rect({
                                                        anid: "area_" + tt[h],
                                                        shape: {
                                                            x: c,
                                                            y: l,
                                                            width: y,
                                                            height: p
                                                        },
                                                        style: r.defaults({
                                                            fill: s[nt]
                                                        }, ut),
                                                        silent: !0
                                                    })), d = c + y, g = l + p)
                                                }
                                            });
                                        s.extend({
                                            type: "xAxis"
                                        });
                                        s.extend({
                                            type: "yAxis"
                                        })
                                    }, function(n, t, i) {
                                        function y(n) {
                                            var t = {
                                                componentType: n.mainType
                                            };
                                            return t[n.mainType + "Index"] = n.componentIndex, t
                                        }

                                        function p(n, t, i) {
                                            var r = v(t - n.rotation),
                                                f, e;
                                            return o(r) ? (e = i > 0 ? "top" : "bottom", f = "center") : o(r - u) ? (e = i > 0 ? "bottom" : "top", f = "center") : (e = "middle", f = r > 0 && r < u ? i > 0 ? "right" : "left" : i > 0 ? "left" : "right"), {
                                                rotation: r,
                                                textAlign: f,
                                                verticalAlign: e
                                            }
                                        }

                                        function nt(n, t, i, r) {
                                            var f = v(i - n.rotation),
                                                e, s, c = r[0] > r[1],
                                                h = t === "start" && !c || t !== "start" && c;
                                            return o(f - u / 2) ? (s = h ? "bottom" : "top", e = "center") : o(f - u * 1.5) ? (s = h ? "top" : "bottom", e = "center") : (s = "middle", e = f < u * 1.5 && f > u / 2 ? h ? "left" : "right" : h ? "right" : "left"), {
                                                rotation: f,
                                                textAlign: e,
                                                verticalAlign: s
                                            }
                                        }

                                        function w(n) {
                                            var t = n.get("tooltip");
                                            return n.get("silent") || !(n.get("triggerEvent") || t && t.show)
                                        }
                                        var f = i(4),
                                            k = i(6),
                                            r = i(43),
                                            d = i(12),
                                            a = i(7),
                                            v = a.remRadian,
                                            o = a.isRadianAroundZero,
                                            g = i(10),
                                            s = g.applyTransform,
                                            h = f.retrieve,
                                            u = Math.PI,
                                            e = function(n, t) {
                                                this.opt = t;
                                                this.axisModel = n;
                                                f.defaults(t, {
                                                    labelOffset: 0,
                                                    nameDirection: 1,
                                                    tickDirection: 1,
                                                    labelDirection: 1,
                                                    silent: !0
                                                });
                                                this.group = new r.Group;
                                                var i = new r.Group({
                                                    position: t.position.slice(),
                                                    rotation: t.rotation
                                                });
                                                i.updateTransform();
                                                this._transform = i.transform;
                                                this._dumbGroup = i
                                            },
                                            c, l, b;
                                        e.prototype = {
                                            constructor: e,
                                            hasBuilder: function(n) {
                                                return !!c[n]
                                            },
                                            add: function(n) {
                                                c[n].call(this)
                                            },
                                            getGroup: function() {
                                                return this.group
                                            }
                                        };
                                        c = {
                                            axisLine: function() {
                                                var o = this.opt,
                                                    u = this.axisModel;
                                                if (u.get("axisLine.show")) {
                                                    var e = this.axisModel.axis.getExtent(),
                                                        i = this._transform,
                                                        n = [e[0], 0],
                                                        t = [e[1], 0];
                                                    i && (s(n, n, i), s(t, t, i));
                                                    this.group.add(new r.Line(r.subPixelOptimizeLine({
                                                        anid: "line",
                                                        shape: {
                                                            x1: n[0],
                                                            y1: n[1],
                                                            x2: t[0],
                                                            y2: t[1]
                                                        },
                                                        style: f.extend({
                                                            lineCap: "round"
                                                        }, u.getModel("axisLine.lineStyle").getLineStyle()),
                                                        strokeContainThreshold: o.strokeContainThreshold || 5,
                                                        silent: !0,
                                                        z2: 1
                                                    })))
                                                }
                                            },
                                            axisTick: function() {
                                                var u = this.axisModel,
                                                    i, c;
                                                if (u.get("axisTick.show")) {
                                                    var o = u.axis,
                                                        e = u.getModel("axisTick"),
                                                        a = this.opt,
                                                        y = e.getModel("lineStyle"),
                                                        p = e.get("length"),
                                                        w = b(e, a.labelInterval),
                                                        v = o.getTicksCoords(e.get("alignWithLabel")),
                                                        k = o.scale.getTicks(),
                                                        n = [],
                                                        t = [],
                                                        h = this._transform;
                                                    for (i = 0; i < v.length; i++) l(o, i, w) || (c = v[i], n[0] = c, n[1] = 0, t[0] = c, t[1] = a.tickDirection * p, h && (s(n, n, h), s(t, t, h)), this.group.add(new r.Line(r.subPixelOptimizeLine({
                                                        anid: "tick_" + k[i],
                                                        shape: {
                                                            x1: n[0],
                                                            y1: n[1],
                                                            x2: t[0],
                                                            y2: t[1]
                                                        },
                                                        style: f.defaults(y.getLineStyle(), {
                                                            stroke: u.get("axisLine.lineStyle.color")
                                                        }),
                                                        z2: 2,
                                                        silent: !0
                                                    }))))
                                                }
                                            },
                                            axisLabel: function() {
                                                function ut(n, t) {
                                                    var i = n && n.getBoundingRect().clone(),
                                                        r = t && t.getBoundingRect().clone();
                                                    if (i && r) return i.applyTransform(n.getLocalTransform()), r.applyTransform(t.getLocalTransform()), i.intersect(r)
                                                }
                                                var f = this.opt,
                                                    n = this.axisModel,
                                                    ot = h(f.axisLabelShow, n.get("axisLabel.show")),
                                                    t, o, nt, ft, tt, et;
                                                if (ot) {
                                                    var s = n.axis,
                                                        v = n.getModel("axisLabel"),
                                                        it = v.getModel("textStyle"),
                                                        st = v.get("margin"),
                                                        c = s.scale.getTicks(),
                                                        ht = n.getFormattedLabels(),
                                                        b = h(f.labelRotation, v.get("rotate")) || 0;
                                                    b = b * u / 180;
                                                    var k = p(f, b, f.labelDirection),
                                                        a = n.get("data"),
                                                        e = [],
                                                        ct = w(n),
                                                        lt = n.get("triggerEvent");
                                                    for (t = 0; t < c.length; t++)
                                                        if (!l(s, t, f.labelInterval)) {
                                                            o = it;
                                                            a && a[t] && a[t].textStyle && (o = new d(a[t].textStyle, it, n.ecModel));
                                                            var g = o.getTextColor() || n.get("axisLine.lineStyle.color"),
                                                                at = s.dataToCoord(c[t]),
                                                                vt = [at, f.labelOffset + f.labelDirection * st],
                                                                rt = s.scale.getLabel(c[t]),
                                                                i = new r.Text({
                                                                    anid: "label_" + c[t],
                                                                    style: {
                                                                        text: ht[t],
                                                                        textAlign: o.get("align", !0) || k.textAlign,
                                                                        textVerticalAlign: o.get("baseline", !0) || k.verticalAlign,
                                                                        textFont: o.getFont(),
                                                                        fill: typeof g == "function" ? g(rt) : g
                                                                    },
                                                                    position: vt,
                                                                    rotation: k.rotation,
                                                                    silent: ct,
                                                                    z2: 10
                                                                });
                                                            lt && (i.eventData = y(n), i.eventData.targetType = "axisLabel", i.eventData.value = rt);
                                                            this._dumbGroup.add(i);
                                                            i.updateTransform();
                                                            e.push(i);
                                                            this.group.add(i);
                                                            i.decomposeTransform()
                                                        }
                                                    s.type !== "category" && ((n.getMin ? n.getMin() : n.get("min")) && (nt = e[0], ft = e[1], ut(nt, ft) && (nt.ignore = !0)), (n.getMax ? n.getMax() : n.get("max")) && (tt = e[e.length - 1], et = e[e.length - 2], ut(et, tt) && (tt.ignore = !0)))
                                                }
                                            },
                                            axisName: function() {
                                                var e = this.opt,
                                                    n = this.axisModel,
                                                    t = h(e.axisName, n.get("name")),
                                                    s, i;
                                                if (t) {
                                                    var a = n.get("nameLocation"),
                                                        g = e.nameDirection,
                                                        tt = n.getModel("nameTextStyle"),
                                                        v = n.get("nameGap") || 0,
                                                        o = this.axisModel.axis.getExtent(),
                                                        it = o[0] > o[1] ? -1 : 1,
                                                        ht = [a === "start" ? o[0] - it * v : a === "end" ? o[1] + it * v : (o[0] + o[1]) / 2, a === "middle" ? e.labelOffset + g * v : 0],
                                                        c, l = n.get("nameRotate");
                                                    l != null && (l = l * u / 180);
                                                    a === "middle" ? c = p(e, l != null ? l : e.rotation, g) : (c = nt(e, a, l || 0, o), s = e.axisNameAvailableWidth, s != null && (s = Math.abs(s / Math.sin(c.rotation)), isFinite(s) || (s = null)));
                                                    var rt = tt.getFont(),
                                                        b = n.get("nameTruncate", !0) || {},
                                                        ut = b.ellipsis,
                                                        ft = h(b.maxWidth, s),
                                                        et = ut != null && ft != null ? k.truncateText(t, ft, rt, ut, {
                                                            minChar: 2,
                                                            placeholder: b.placeholder
                                                        }) : t,
                                                        d = n.get("tooltip", !0),
                                                        ot = n.mainType,
                                                        st = {
                                                            componentType: ot,
                                                            name: t,
                                                            $vars: ["name"]
                                                        };
                                                    st[ot + "Index"] = n.componentIndex;
                                                    i = new r.Text({
                                                        anid: "name",
                                                        __fullText: t,
                                                        __truncatedText: et,
                                                        style: {
                                                            text: et,
                                                            textFont: rt,
                                                            fill: tt.getTextColor() || n.get("axisLine.lineStyle.color"),
                                                            textAlign: c.textAlign,
                                                            textVerticalAlign: c.verticalAlign
                                                        },
                                                        position: ht,
                                                        rotation: c.rotation,
                                                        silent: w(n),
                                                        z2: 1,
                                                        tooltip: d && d.show ? f.extend({
                                                            content: t,
                                                            formatter: function() {
                                                                return t
                                                            },
                                                            formatterParams: st
                                                        }, d) : null
                                                    });
                                                    n.get("triggerEvent") && (i.eventData = y(n), i.eventData.targetType = "axisName", i.eventData.name = t);
                                                    this._dumbGroup.add(i);
                                                    i.updateTransform();
                                                    this.group.add(i);
                                                    i.decomposeTransform()
                                                }
                                            }
                                        };
                                        l = e.ifIgnoreOnTick = function(n, t, i) {
                                            var r, u = n.scale;
                                            return u.type === "ordinal" && (typeof i == "function" ? (r = u.getTicks()[t], !i(r, u.getLabel(r))) : t % (i + 1))
                                        };
                                        b = e.getInterval = function(n, t) {
                                            var i = n.get("interval");
                                            return (i == null || i == "auto") && (i = t), i
                                        };
                                        n.exports = e
                                    }, function(n, t, i) {
                                        var f = i(4),
                                            u, r;
                                        i(113);
                                        i(135);
                                        i(136);
                                        u = i(138);
                                        r = i(1);
                                        r.registerLayout(f.curry(u, "bar"));
                                        r.registerVisual(function(n) {
                                            n.eachSeriesByType("bar", function(n) {
                                                var t = n.getData();
                                                t.setVisual("legendSymbol", "roundRect")
                                            })
                                        });
                                        i(112)
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(28),
                                            u = i(101);
                                        n.exports = r.extend({
                                            type: "series.bar",
                                            dependencies: ["grid", "polar"],
                                            getInitialData: function(n, t) {
                                                if (1) {
                                                    var i = n.coordinateSystem;
                                                    if (i !== "cartesian2d") throw new Error("Bar only support cartesian2d coordinateSystem");
                                                }
                                                return u(n.data, this, t)
                                            },
                                            getMarkerPosition: function(n) {
                                                var t = this.coordinateSystem;
                                                if (t) {
                                                    var i = t.dataToPoint(n, !0),
                                                        r = this.getData(),
                                                        u = r.getLayout("offset"),
                                                        f = r.getLayout("size"),
                                                        e = t.getBaseAxis().isHorizontal() ? 0 : 1;
                                                    return i[e] += u + f / 2, i
                                                }
                                                return [NaN, NaN]
                                            },
                                            brushSelector: "rect",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 2,
                                                coordinateSystem: "cartesian2d",
                                                legendHoverLink: !0,
                                                barMinHeight: 0,
                                                itemStyle: {
                                                    normal: {},
                                                    emphasis: {}
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n, t) {
                                            var i = n.width > 0 ? 1 : -1,
                                                r = n.height > 0 ? 1 : -1;
                                            t = Math.min(t, Math.abs(n.width), Math.abs(n.height));
                                            n.x += i * t / 2;
                                            n.y += r * t / 2;
                                            n.width -= i * t;
                                            n.height -= r * t
                                        }
                                        var u = i(4),
                                            r = i(43);
                                        u.extend(i(12).prototype, i(137));
                                        n.exports = i(1).extendChartView({
                                            type: "bar",
                                            render: function(n, t, i) {
                                                var r = n.get("coordinateSystem");
                                                return r === "cartesian2d" && this._renderOnCartesian(n, t, i), this.group
                                            },
                                            dispose: u.noop,
                                            _renderOnCartesian: function(n) {
                                                function h(i, e) {
                                                    var c = t.getItemLayout(i),
                                                        y = t.getItemModel(i).get(s) || 0,
                                                        h;
                                                    if (f(c, y), h = new r.Rect({
                                                            shape: u.extend({}, c)
                                                        }), a) {
                                                        var p = h.shape,
                                                            l = o ? "height" : "width",
                                                            v = {};
                                                        p[l] = 0;
                                                        v[l] = c[l];
                                                        r[e ? "updateProps" : "initProps"](h, {
                                                            shape: v
                                                        }, n, i)
                                                    }
                                                    return h
                                                }
                                                var i = this.group,
                                                    t = n.getData(),
                                                    e = this._data,
                                                    c = n.coordinateSystem,
                                                    l = c.getBaseAxis(),
                                                    o = l.isHorizontal(),
                                                    a = n.get("animation"),
                                                    s = ["itemStyle", "normal", "barBorderWidth"];
                                                t.diff(e).add(function(n) {
                                                    if (t.hasValue(n)) {
                                                        var r = h(n);
                                                        t.setItemGraphicEl(n, r);
                                                        i.add(r)
                                                    }
                                                }).update(function(u, o) {
                                                    var c = e.getItemGraphicEl(o),
                                                        l, a;
                                                    if (!t.hasValue(u)) {
                                                        i.remove(c);
                                                        return
                                                    }
                                                    c || (c = h(u, !0));
                                                    l = t.getItemLayout(u);
                                                    a = t.getItemModel(u).get(s) || 0;
                                                    f(l, a);
                                                    r.updateProps(c, {
                                                        shape: l
                                                    }, n, u);
                                                    t.setItemGraphicEl(u, c);
                                                    i.add(c)
                                                }).remove(function(t) {
                                                    var u = e.getItemGraphicEl(t);
                                                    u && (u.style.text = "", r.updateProps(u, {
                                                        shape: {
                                                            width: 0
                                                        }
                                                    }, n, t, function() {
                                                        i.remove(u)
                                                    }))
                                                }).execute();
                                                this._updateStyle(n, t, o);
                                                this._data = t
                                            },
                                            _updateStyle: function(n, t, i) {
                                                function f(n, t, i, u, f) {
                                                    r.setText(n, t, i);
                                                    n.text = u;
                                                    n.textPosition === "outside" && (n.textPosition = f)
                                                }
                                                t.eachItemGraphicEl(function(e, o) {
                                                    var s = t.getItemModel(o),
                                                        h = t.getItemVisual(o, "color"),
                                                        b = t.getItemVisual(o, "opacity"),
                                                        l = t.getItemLayout(o),
                                                        a = s.getModel("itemStyle.normal"),
                                                        c = s.getModel("itemStyle.emphasis").getBarItemStyle();
                                                    e.setShape("r", a.get("barBorderRadius") || 0);
                                                    e.useStyle(u.defaults({
                                                        fill: h,
                                                        opacity: b
                                                    }, a.getBarItemStyle()));
                                                    var v = i ? l.height > 0 ? "bottom" : "top" : l.width > 0 ? "left" : "right",
                                                        y = s.getModel("label.normal"),
                                                        p = s.getModel("label.emphasis"),
                                                        w = e.style;
                                                    y.get("show") ? f(w, y, h, u.retrieve(n.getFormattedLabel(o, "normal"), n.getRawValue(o)), v) : w.text = "";
                                                    p.get("show") ? f(c, p, h, u.retrieve(n.getFormattedLabel(o, "emphasis"), n.getRawValue(o)), v) : c.text = "";
                                                    r.setHoverStyle(e, c)
                                                })
                                            },
                                            remove: function(n) {
                                                var t = this.group;
                                                n.get("animation") ? this._data && this._data.eachItemGraphicEl(function(i) {
                                                    i.style.text = "";
                                                    r.updateProps(i, {
                                                        shape: {
                                                            width: 0
                                                        }
                                                    }, n, i.dataIndex, function() {
                                                        t.remove(i)
                                                    })
                                                }) : t.removeAll()
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(15)([
                                            ["fill", "color"],
                                            ["stroke", "borderColor"],
                                            ["lineWidth", "borderWidth"],
                                            ["stroke", "barBorderColor"],
                                            ["lineWidth", "barBorderWidth"],
                                            ["opacity"],
                                            ["shadowBlur"],
                                            ["shadowOffsetX"],
                                            ["shadowOffsetY"],
                                            ["shadowColor"]
                                        ]);
                                        n.exports = {
                                            getBarItemStyle: function(n) {
                                                var i = r.call(this, n),
                                                    t;
                                                return this.getBorderLineDash && (t = this.getBorderLineDash(), t && (i.lineDash = t)), i
                                            }
                                        }
                                    }, function(n, t, i) {
                                        "use strict";

                                        function e(n) {
                                            return n.get("stack") || "__ec_stack_" + n.seriesIndex
                                        }

                                        function f(n) {
                                            return n.dim + n.index
                                        }

                                        function s(n) {
                                            var i = {},
                                                t;
                                            return r.each(n, function(n) {
                                                var p = n.getData(),
                                                    w = n.coordinateSystem,
                                                    s = w.getBaseAxis(),
                                                    l = s.getExtent(),
                                                    c = s.type === "category" ? s.getBandWidth() : Math.abs(l[1] - l[0]) / p.count(),
                                                    t = i[f(s)] || {
                                                        bandWidth: c,
                                                        remainedWidth: c,
                                                        autoWidthCount: 0,
                                                        categoryGap: "20%",
                                                        gap: "30%",
                                                        stacks: {}
                                                    },
                                                    o = t.stacks,
                                                    r;
                                                i[f(s)] = t;
                                                r = e(n);
                                                o[r] || t.autoWidthCount++;
                                                o[r] = o[r] || {
                                                    width: 0,
                                                    maxWidth: 0
                                                };
                                                var h = u(n.get("barWidth"), c),
                                                    a = u(n.get("barMaxWidth"), c),
                                                    v = n.get("barGap"),
                                                    y = n.get("barCategoryGap");
                                                h && !o[r].width && (h = Math.min(t.remainedWidth, h), o[r].width = h, t.remainedWidth -= h);
                                                a && (o[r].maxWidth = a);
                                                v != null && (t.gap = v);
                                                y != null && (t.categoryGap = y)
                                            }), t = {}, r.each(i, function(n, i) {
                                                var h, l, a;
                                                t[i] = {};
                                                var c = n.stacks,
                                                    y = n.bandWidth,
                                                    v = u(n.categoryGap, y),
                                                    e = u(n.gap, 1),
                                                    s = n.remainedWidth,
                                                    o = n.autoWidthCount,
                                                    f = (s - v) / (o + (o - 1) * e);
                                                f = Math.max(f, 0);
                                                r.each(c, function(n) {
                                                    var t = n.maxWidth;
                                                    !n.width && t && t < f && (t = Math.min(t, s), s -= t, n.width = t, o--)
                                                });
                                                f = (s - v) / (o + (o - 1) * e);
                                                f = Math.max(f, 0);
                                                h = 0;
                                                r.each(c, function(n) {
                                                    n.width || (n.width = f);
                                                    l = n;
                                                    h += n.width * (1 + e)
                                                });
                                                l && (h -= l.width * e);
                                                a = -h / 2;
                                                r.each(c, function(n, r) {
                                                    t[i][r] = t[i][r] || {
                                                        offset: a,
                                                        width: n.width
                                                    };
                                                    a += n.width * (1 + e)
                                                })
                                            }), t
                                        }

                                        function h(n, t) {
                                            var o = s(r.filter(t.getSeriesByType(n), function(n) {
                                                    return !t.isSeriesFiltered(n) && n.coordinateSystem && n.coordinateSystem.type === "cartesian2d"
                                                })),
                                                i = {},
                                                u = {};
                                            t.eachSeriesByType(n, function(n) {
                                                var s = n.getData(),
                                                    l = n.coordinateSystem,
                                                    a = l.getBaseAxis(),
                                                    t = e(n),
                                                    p = o[f(a)][t],
                                                    v = p.offset,
                                                    y = p.width,
                                                    r = l.getOtherAxis(a),
                                                    h = n.get("barMinHeight") || 0,
                                                    c = a.onZero ? r.toGlobalCoord(r.dataToCoord(0)) : r.getGlobalExtent()[0],
                                                    w = l.dataToPoints(s, !0);
                                                i[t] = i[t] || [];
                                                u[t] = u[t] || [];
                                                s.setLayout({
                                                    offset: v,
                                                    size: y
                                                });
                                                s.each(r.dim, function(n, f) {
                                                    if (!isNaN(n)) {
                                                        i[t][f] || (i[t][f] = {
                                                            p: c,
                                                            n: c
                                                        }, u[t][f] = {
                                                            p: c,
                                                            n: c
                                                        });
                                                        var l = n >= 0 ? "p" : "n",
                                                            a = w[f],
                                                            k = i[t][f][l],
                                                            d = u[t][f][l],
                                                            p, b, e, o;
                                                        r.isHorizontal() ? (p = k, b = a[1] + v, e = a[0] - d, o = y, u[t][f][l] += e, Math.abs(e) < h && (e = (e < 0 ? -1 : 1) * h), i[t][f][l] += e) : (p = a[0] + v, b = k, e = y, o = a[1] - d, u[t][f][l] += o, Math.abs(o) < h && (o = (o <= 0 ? -1 : 1) * h), i[t][f][l] += o);
                                                        s.setItemLayout(f, {
                                                            x: p,
                                                            y: b,
                                                            width: e,
                                                            height: o
                                                        })
                                                    }
                                                }, !0)
                                            }, this)
                                        }
                                        var r = i(4),
                                            o = i(7),
                                            u = o.parsePercent;
                                        n.exports = h
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(1);
                                        i(140);
                                        i(142);
                                        i(143)("pie", [{
                                            type: "pieToggleSelect",
                                            event: "pieselectchanged",
                                            method: "toggleSelected"
                                        }, {
                                            type: "pieSelect",
                                            event: "pieselected",
                                            method: "select"
                                        }, {
                                            type: "pieUnSelect",
                                            event: "pieunselected",
                                            method: "unSelect"
                                        }]);
                                        u.registerVisual(r.curry(i(144), "pie"));
                                        u.registerLayout(r.curry(i(145), "pie"));
                                        u.registerProcessor(r.curry(i(147), "pie"))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(97),
                                            f = i(4),
                                            e = i(5),
                                            o = i(102),
                                            s = i(141),
                                            r = i(1).extendSeriesModel({
                                                type: "series.pie",
                                                init: function(n) {
                                                    r.superApply(this, "init", arguments);
                                                    this.legendDataProvider = function() {
                                                        return this._dataBeforeProcessed
                                                    };
                                                    this.updateSelectedMap(n.data);
                                                    this._defaultLabelLine(n)
                                                },
                                                mergeOption: function(n) {
                                                    r.superCall(this, "mergeOption", n);
                                                    this.updateSelectedMap(this.option.data)
                                                },
                                                getInitialData: function(n) {
                                                    var i = o(["value"], n.data),
                                                        t = new u(i, this);
                                                    return t.initData(n.data), t
                                                },
                                                getDataParams: function(n) {
                                                    var i = this._data,
                                                        t = r.superCall(this, "getDataParams", n),
                                                        u = i.getSum("value");
                                                    return t.percent = u ? +(i.get("value", n) / u * 100).toFixed(2) : 0, t.$vars.push("percent"), t
                                                },
                                                _defaultLabelLine: function(n) {
                                                    e.defaultEmphasis(n.labelLine, ["show"]);
                                                    var t = n.labelLine.normal,
                                                        i = n.labelLine.emphasis;
                                                    t.show = t.show && n.label.normal.show;
                                                    i.show = i.show && n.label.emphasis.show
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    legendHoverLink: !0,
                                                    hoverAnimation: !0,
                                                    center: ["50%", "50%"],
                                                    radius: [0, "75%"],
                                                    clockwise: !0,
                                                    startAngle: 90,
                                                    minAngle: 0,
                                                    selectedOffset: 10,
                                                    avoidLabelOverlap: !0,
                                                    label: {
                                                        normal: {
                                                            rotate: !1,
                                                            show: !0,
                                                            position: "outer"
                                                        },
                                                        emphasis: {}
                                                    },
                                                    labelLine: {
                                                        normal: {
                                                            show: !0,
                                                            length: 15,
                                                            length2: 15,
                                                            smooth: !1,
                                                            lineStyle: {
                                                                width: 1,
                                                                type: "solid"
                                                            }
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            borderWidth: 1
                                                        },
                                                        emphasis: {}
                                                    },
                                                    animationEasing: "cubicOut",
                                                    data: []
                                                }
                                            });
                                        f.mixin(r, s);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = {
                                            updateSelectedMap: function(n) {
                                                this._selectTargetMap = r.reduce(n || [], function(n, t) {
                                                    return n[t.name] = t, n
                                                }, {})
                                            },
                                            select: function(n) {
                                                var t = this._selectTargetMap,
                                                    i = t[n],
                                                    u = this.get("selectedMode");
                                                u === "single" && r.each(t, function(n) {
                                                    n.selected = !1
                                                });
                                                i && (i.selected = !0)
                                            },
                                            unSelect: function(n) {
                                                var t = this._selectTargetMap[n];
                                                t && (t.selected = !1)
                                            },
                                            toggleSelected: function(n) {
                                                var t = this._selectTargetMap[n];
                                                if (t != null) return this[t.selected ? "unSelect" : "select"](n), t.selected
                                            },
                                            isSelected: function(n) {
                                                var t = this._selectTargetMap[n];
                                                return t && t.selected
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function c(n, t, i, r) {
                                            var u = t.getData(),
                                                f = this.dataIndex,
                                                o = u.getName(f),
                                                s = t.get("selectedOffset");
                                            r.dispatchAction({
                                                type: "pieToggleSelect",
                                                from: n,
                                                name: o,
                                                seriesId: t.id
                                            });
                                            u.each(function(n) {
                                                e(u.getItemGraphicEl(n), u.getItemLayout(n), t.isSelected(u.getName(n)), s, i)
                                            })
                                        }

                                        function e(n, t, i, r, u) {
                                            var f = (t.startAngle + t.endAngle) / 2,
                                                s = Math.cos(f),
                                                h = Math.sin(f),
                                                e = i ? r : 0,
                                                o = [s * e, h * e];
                                            u ? n.animate().when(200, {
                                                position: o
                                            }).start("bounceOut") : n.attr("position", o)
                                        }

                                        function f(n, t) {
                                            function f() {
                                                i.ignore = i.hoverIgnore;
                                                u.ignore = u.hoverIgnore
                                            }

                                            function e() {
                                                i.ignore = i.normalIgnore;
                                                u.ignore = u.normalIgnore
                                            }
                                            r.Group.call(this);
                                            var o = new r.Sector({
                                                    z2: 2
                                                }),
                                                i = new r.Polyline,
                                                u = new r.Text;
                                            this.add(o);
                                            this.add(i);
                                            this.add(u);
                                            this.updateData(n, t, !0);
                                            this.on("emphasis", f).on("normal", e).on("mouseover", f).on("mouseout", e)
                                        }

                                        function s(n, t, i, r, f) {
                                            var e = r.getModel("textStyle"),
                                                o = f === "inside" || f === "inner";
                                            return {
                                                fill: e.getTextColor() || (o ? "#fff" : n.getItemVisual(t, "color")),
                                                opacity: n.getItemVisual(t, "opacity"),
                                                textFont: e.getFont(),
                                                text: u.retrieve(n.hostModel.getFormattedLabel(t, i), n.getName(t))
                                            }
                                        }
                                        var r = i(43),
                                            u = i(4),
                                            o = f.prototype,
                                            h;
                                        o.updateData = function(n, t, i) {
                                            function v() {
                                                f.stopAnimation(!0);
                                                f.animateTo({
                                                    shape: {
                                                        r: s.r + 10
                                                    }
                                                }, 300, "elasticOut")
                                            }

                                            function y() {
                                                f.stopAnimation(!0);
                                                f.animateTo({
                                                    shape: {
                                                        r: s.r
                                                    }
                                                }, 300, "elasticOut")
                                            }
                                            var f = this.childAt(0),
                                                o = n.hostModel,
                                                h = n.getItemModel(t),
                                                s = n.getItemLayout(t),
                                                c = u.extend({}, s),
                                                l, a;
                                            if (c.label = null, i ? (f.setShape(c), f.shape.endAngle = s.startAngle, r.updateProps(f, {
                                                    shape: {
                                                        endAngle: s.endAngle
                                                    }
                                                }, o, t)) : r.updateProps(f, {
                                                    shape: c
                                                }, o, t), l = h.getModel("itemStyle"), a = n.getItemVisual(t, "color"), f.useStyle(u.defaults({
                                                    lineJoin: "bevel",
                                                    fill: a
                                                }, l.getModel("normal").getItemStyle())), f.hoverStyle = l.getModel("emphasis").getItemStyle(), e(this, n.getItemLayout(t), h.get("selected"), o.get("selectedOffset"), o.get("animation")), f.off("mouseover").off("mouseout").off("emphasis").off("normal"), h.get("hoverAnimation") && o.ifEnableAnimation()) f.on("mouseover", v).on("mouseout", y).on("emphasis", v).on("normal", y);
                                            this._updateLabel(n, t);
                                            r.setHoverStyle(this)
                                        };
                                        o._updateLabel = function(n, t) {
                                            var u = this.childAt(1),
                                                f = this.childAt(2),
                                                a = n.hostModel,
                                                o = n.getItemModel(t),
                                                p = n.getItemLayout(t),
                                                i = p.label,
                                                w = n.getItemVisual(t, "color"),
                                                e;
                                            r.updateProps(u, {
                                                shape: {
                                                    points: i.linePoints || [
                                                        [i.x, i.y],
                                                        [i.x, i.y],
                                                        [i.x, i.y]
                                                    ]
                                                }
                                            }, a, t);
                                            r.updateProps(f, {
                                                style: {
                                                    x: i.x,
                                                    y: i.y
                                                }
                                            }, a, t);
                                            f.attr({
                                                style: {
                                                    textVerticalAlign: i.verticalAlign,
                                                    textAlign: i.textAlign,
                                                    textFont: i.font
                                                },
                                                rotation: i.rotation,
                                                origin: [i.x, i.y],
                                                z2: 10
                                            });
                                            var h = o.getModel("label.normal"),
                                                c = o.getModel("label.emphasis"),
                                                l = o.getModel("labelLine.normal"),
                                                v = o.getModel("labelLine.emphasis"),
                                                y = h.get("position") || c.get("position");
                                            f.setStyle(s(n, t, "normal", h, y));
                                            f.ignore = f.normalIgnore = !h.get("show");
                                            f.hoverIgnore = !c.get("show");
                                            u.ignore = u.normalIgnore = !l.get("show");
                                            u.hoverIgnore = !v.get("show");
                                            u.setStyle({
                                                stroke: w,
                                                opacity: n.getItemVisual(t, "opacity")
                                            });
                                            u.setStyle(l.getModel("lineStyle").getLineStyle());
                                            f.hoverStyle = s(n, t, "emphasis", c, y);
                                            u.hoverStyle = v.getModel("lineStyle").getLineStyle();
                                            e = l.get("smooth");
                                            e && e === !0 && (e = .4);
                                            u.setShape({
                                                smooth: e
                                            })
                                        };
                                        u.inherits(f, r.Group);
                                        h = i(42).extend({
                                            type: "pie",
                                            init: function() {
                                                var n = new r.Group;
                                                this._sectorGroup = n
                                            },
                                            render: function(n, t, i, r) {
                                                if (!r || r.from !== this.uid) {
                                                    var e = n.getData(),
                                                        s = this._data,
                                                        o = this.group,
                                                        l = t.get("animation"),
                                                        a = !s,
                                                        v = u.curry(c, this.uid, n, l, i),
                                                        y = n.get("selectedMode");
                                                    if (e.diff(s).add(function(n) {
                                                            var t = new f(e, n);
                                                            a && t.eachChild(function(n) {
                                                                n.stopAnimation(!0)
                                                            });
                                                            y && t.on("click", v);
                                                            e.setItemGraphicEl(n, t);
                                                            o.add(t)
                                                        }).update(function(n, t) {
                                                            var i = s.getItemGraphicEl(t);
                                                            i.updateData(e, n);
                                                            i.off("click");
                                                            y && i.on("click", v);
                                                            o.add(i);
                                                            e.setItemGraphicEl(n, i)
                                                        }).remove(function(n) {
                                                            var t = s.getItemGraphicEl(n);
                                                            o.remove(t)
                                                        }).execute(), l && a && e.count() > 0) {
                                                        var h = e.getItemLayout(0),
                                                            p = Math.max(i.getWidth(), i.getHeight()) / 2,
                                                            w = u.bind(o.removeClipPath, o);
                                                        o.setClipPath(this._createClipPath(h.cx, h.cy, p, h.startAngle, h.clockwise, w, n))
                                                    }
                                                    this._data = e
                                                }
                                            },
                                            dispose: function() {},
                                            _createClipPath: function(n, t, i, u, f, e, o) {
                                                var s = new r.Sector({
                                                    shape: {
                                                        cx: n,
                                                        cy: t,
                                                        r0: 0,
                                                        r: i,
                                                        startAngle: u,
                                                        endAngle: u,
                                                        clockwise: f
                                                    }
                                                });
                                                return r.initProps(s, {
                                                    shape: {
                                                        endAngle: u + (f ? 1 : -1) * Math.PI * 2
                                                    }
                                                }, o, e), s
                                            },
                                            containPoint: function(n, t) {
                                                var e = t.getData(),
                                                    i = e.getItemLayout(0);
                                                if (i) {
                                                    var r = n[0] - i.cx,
                                                        u = n[1] - i.cy,
                                                        f = Math.sqrt(r * r + u * u);
                                                    return f <= i.r && f >= i.r0
                                                }
                                            }
                                        });
                                        n.exports = h
                                    }, function(n, t, i) {
                                        var r = i(1),
                                            u = i(4);
                                        n.exports = function(n, t) {
                                            u.each(t, function(t) {
                                                t.update = "updateView";
                                                r.registerAction(t, function(i, r) {
                                                    var u = {};
                                                    return r.eachComponent({
                                                        mainType: "series",
                                                        subType: n,
                                                        query: i
                                                    }, function(n) {
                                                        n[t.method] && n[t.method](i.name);
                                                        var r = n.getData();
                                                        r.each(function(t) {
                                                            var i = r.getName(t);
                                                            u[i] = n.isSelected(i) || !1
                                                        })
                                                    }), {
                                                        name: i.name,
                                                        selected: u
                                                    }
                                                })
                                            })
                                        }
                                    }, function(n) {
                                        n.exports = function(n, t) {
                                            var i = {};
                                            t.eachRawSeriesByType(n, function(n) {
                                                var r = n.getRawData(),
                                                    f = {},
                                                    u;
                                                t.isSeriesFiltered(n) || (u = n.getData(), u.each(function(n) {
                                                    var t = u.getRawIndex(n);
                                                    f[t] = n
                                                }), r.each(function(t) {
                                                    var h = r.getItemModel(t),
                                                        e = f[t],
                                                        s = e != null && u.getItemVisual(e, "color", !0),
                                                        o;
                                                    s ? r.setItemVisual(t, "color", s) : (o = h.get("itemStyle.normal.color") || n.getColorFromPalette(r.getName(t), i), r.setItemVisual(t, "color", o), e != null && u.setItemVisual(e, "color", o))
                                                }))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var f = i(7),
                                            r = f.parsePercent,
                                            s = i(146),
                                            e = i(4),
                                            u = Math.PI * 2,
                                            o = Math.PI / 180;
                                        n.exports = function(n, t, i) {
                                            t.eachSeriesByType(n, function(n) {
                                                var c = n.get("center"),
                                                    l = n.get("radius"),
                                                    g;
                                                e.isArray(l) || (l = [0, l]);
                                                e.isArray(c) || (c = [c, c]);
                                                var b = i.getWidth(),
                                                    k = i.getHeight(),
                                                    nt = Math.min(b, k),
                                                    ot = r(c[0], b),
                                                    st = r(c[1], k),
                                                    tt = r(l[0], nt / 2),
                                                    d = r(l[1], nt / 2),
                                                    t = n.getData(),
                                                    v = -n.get("startAngle") * o,
                                                    a = n.get("minAngle") * o,
                                                    it = t.getSum("value"),
                                                    y = Math.PI / (it || t.count()) * 2,
                                                    rt = n.get("clockwise"),
                                                    ut = n.get("roseType"),
                                                    ft = t.getDataExtent("value");
                                                ft[0] = 0;
                                                var p = u,
                                                    et = 0,
                                                    h = v,
                                                    w = rt ? 1 : -1;
                                                t.each("value", function(n, i) {
                                                    var r, e;
                                                    r = ut !== "area" ? it === 0 ? y : n * y : u / (t.count() || 1);
                                                    r < a ? (r = a, p -= a) : et += n;
                                                    e = h + w * r;
                                                    t.setItemLayout(i, {
                                                        angle: r,
                                                        startAngle: h,
                                                        endAngle: e,
                                                        clockwise: rt,
                                                        cx: ot,
                                                        cy: st,
                                                        r0: tt,
                                                        r: ut ? f.linearMap(n, ft, [tt, d]) : d
                                                    });
                                                    h = e
                                                }, !0);
                                                p < u && (p <= .001 ? (g = u / t.count(), t.each(function(n) {
                                                    var i = t.getItemLayout(n);
                                                    i.startAngle = v + w * n * g;
                                                    i.endAngle = v + w * (n + 1) * g
                                                })) : (y = p / et, h = v, t.each("value", function(n, i) {
                                                    var r = t.getItemLayout(i),
                                                        u = r.angle === a ? a : n * y;
                                                    r.startAngle = h;
                                                    r.endAngle = h + w * u;
                                                    h += u
                                                })));
                                                s(n, d, b, k)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        "use strict";

                                        function r(n, t, i, r, u, f, e) {
                                            function p(t, i, r) {
                                                for (var u = t; u < i; u++)
                                                    if (n[u].y += r, u > t && u + 1 < i && n[u + 1].y > n[u].y + n[u].height) {
                                                        c(u, r / 2);
                                                        return
                                                    }
                                                c(i - 1, r / 2)
                                            }

                                            function c(t, i) {
                                                for (var r = t; r >= 0; r--)
                                                    if (n[r].y -= i, r > 0 && n[r].y > n[r - 1].y + n[r - 1].height) break
                                            }

                                            function a(n, t, i, r, u, f) {
                                                for (var s = f > 0 ? t ? Number.MAX_VALUE : 0 : t ? Number.MAX_VALUE : 0, e = 0, a = n.length; e < a; e++)
                                                    if (n[e].position !== "center") {
                                                        var h = Math.abs(n[e].y - r),
                                                            c = n[e].len,
                                                            l = n[e].len2,
                                                            o = h < u + c ? Math.sqrt((u + c + l) * (u + c + l) - h * h) : Math.abs(n[e].x - i);
                                                        t && o >= s && (o = s - 10);
                                                        !t && o <= s && (o = s + 10);
                                                        n[e].x = i + o * f;
                                                        s = o
                                                    }
                                            }
                                            var o;
                                            n.sort(function(n, t) {
                                                return n.y - t.y
                                            });
                                            var s = 0,
                                                l, h = n.length,
                                                v = [],
                                                y = [];
                                            for (o = 0; o < h; o++) l = n[o].y - s, l < 0 && p(o, h, -l, u), s = n[o].y + n[o].height;
                                            for (e - s < 0 && c(h - 1, s - e), o = 0; o < h; o++) n[o].y >= i ? y.push(n[o]) : v.push(n[o]);
                                            a(v, !1, t, i, r, u);
                                            a(y, !0, t, i, r, u)
                                        }

                                        function f(n, t, i, u, f, e) {
                                            for (var s, l, h = [], c = [], o = 0; o < n.length; o++) n[o].x < t ? h.push(n[o]) : c.push(n[o]);
                                            for (r(c, t, i, u, 1, f, e), r(h, t, i, u, -1, f, e), o = 0; o < n.length; o++) s = n[o].linePoints, s && (l = s[1][0] - s[2][0], s[2][0] = n[o].x < t ? n[o].x + 3 : n[o].x - 3, s[1][1] = s[2][1] = n[o].y, s[1][0] = s[2][0] + l)
                                        }
                                        var u = i(8);
                                        n.exports = function(n, t, i, r) {
                                            var e = n.getData(),
                                                h = [],
                                                o, s, c = !1;
                                            e.each(function(i) {
                                                var r = e.getItemLayout(i),
                                                    g = e.getItemModel(i),
                                                    nt = g.getModel("label.normal"),
                                                    a = nt.get("position") || g.get("label.emphasis.position"),
                                                    it = g.getModel("labelLine.normal"),
                                                    tt = it.get("length"),
                                                    rt = it.get("length2"),
                                                    v = (r.startAngle + r.endAngle) / 2,
                                                    f = Math.cos(v),
                                                    y = Math.sin(v),
                                                    p, w, ut, b, l, k, d;
                                                if (o = r.cx, s = r.cy, l = a === "inside" || a === "inner", a === "center") p = r.cx, w = r.cy, b = "center";
                                                else {
                                                    if (k = (l ? (r.r + r.r0) / 2 * f : r.r * f) + o, d = (l ? (r.r + r.r0) / 2 * y : r.r * y) + s, p = k + f * 3, w = d + y * 3, !l) {
                                                        var ft = k + f * (tt + t - r.r),
                                                            et = d + y * (tt + t - r.r),
                                                            ot = ft + (f < 0 ? -1 : 1) * rt,
                                                            st = et;
                                                        p = ot + (f < 0 ? -5 : 5);
                                                        w = st;
                                                        ut = [
                                                            [k, d],
                                                            [ft, et],
                                                            [ot, st]
                                                        ]
                                                    }
                                                    b = l ? "center" : f > 0 ? "left" : "right"
                                                }
                                                var ht = nt.getModel("textStyle").getFont(),
                                                    ct = nt.get("rotate") ? f < 0 ? -v + Math.PI : -v : 0,
                                                    lt = n.getFormattedLabel(i, "normal") || e.getName(i),
                                                    at = u.getBoundingRect(lt, ht, b, "top");
                                                c = !!ct;
                                                r.label = {
                                                    x: p,
                                                    y: w,
                                                    position: a,
                                                    height: at.height,
                                                    len: tt,
                                                    len2: rt,
                                                    linePoints: ut,
                                                    textAlign: b,
                                                    verticalAlign: "middle",
                                                    font: ht,
                                                    rotation: ct
                                                };
                                                l || h.push(r.label)
                                            });
                                            !c && n.get("avoidLabelOverlap") && f(h, o, s, t, i, r)
                                        }
                                    }, function(n) {
                                        n.exports = function(n, t) {
                                            var i = t.findComponents({
                                                mainType: "legend"
                                            });
                                            i && i.length && t.eachSeriesByType(n, function(n) {
                                                var t = n.getData();
                                                t.filterSelf(function(n) {
                                                    for (var u = t.getName(n), r = 0; r < i.length; r++)
                                                        if (!i[r].isSelected(u)) return !1;
                                                    return !0
                                                }, this)
                                            }, this)
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(1);
                                        i(149);
                                        i(150);
                                        u.registerVisual(r.curry(i(109), "scatter", "circle", null));
                                        u.registerLayout(r.curry(i(110), "scatter"));
                                        i(112)
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(101),
                                            u = i(28);
                                        n.exports = u.extend({
                                            type: "series.scatter",
                                            dependencies: ["grid", "polar"],
                                            getInitialData: function(n, t) {
                                                return r(n.data, this, t)
                                            },
                                            brushSelector: "point",
                                            defaultOption: {
                                                coordinateSystem: "cartesian2d",
                                                zlevel: 0,
                                                z: 2,
                                                legendHoverLink: !0,
                                                hoverAnimation: !0,
                                                symbolSize: 10,
                                                large: !1,
                                                largeThreshold: 2e3,
                                                itemStyle: {
                                                    normal: {
                                                        opacity: .8
                                                    }
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(104),
                                            u = i(151);
                                        i(1).extendChartView({
                                            type: "scatter",
                                            init: function() {
                                                this._normalSymbolDraw = new r;
                                                this._largeSymbolDraw = new u
                                            },
                                            render: function(n) {
                                                var r = n.getData(),
                                                    i = this._largeSymbolDraw,
                                                    u = this._normalSymbolDraw,
                                                    f = this.group,
                                                    t = n.get("large") && r.count() > n.get("largeThreshold") ? i : u;
                                                this._symbolDraw = t;
                                                t.updateData(r);
                                                f.add(t.group);
                                                f.remove(t === i ? u.group : i.group)
                                            },
                                            updateLayout: function(n) {
                                                this._symbolDraw.updateLayout(n)
                                            },
                                            remove: function(n, t) {
                                                this._symbolDraw && this._symbolDraw.remove(t, !0)
                                            },
                                            dispose: function() {}
                                        })
                                    }, function(n, t, i) {
                                        function f() {
                                            this.group = new u.Group;
                                            this._symbolEl = new o({})
                                        }
                                        var u = i(43),
                                            e = i(106),
                                            o = u.extendShape({
                                                shape: {
                                                    points: null,
                                                    sizes: null
                                                },
                                                symbolProxy: null,
                                                buildPath: function(n, t) {
                                                    for (var u, i, e = t.points, s = t.sizes, o = this.symbolProxy, r = o.shape, f = 0; f < e.length; f++) u = e[f], i = s[f], i[0] < 4 ? n.rect(u[0] - i[0] / 2, u[1] - i[1] / 2, i[0], i[1]) : (r.x = u[0] - i[0] / 2, r.y = u[1] - i[1] / 2, r.width = i[0], r.height = i[1], o.buildPath(n, r, !0))
                                                },
                                                findDataIndex: function(n, t) {
                                                    for (var u = this.shape, f = u.points, h = u.sizes, i = f.length - 1; i >= 0; i--) {
                                                        var e = f[i],
                                                            r = h[i],
                                                            o = e[0] - r[0] / 2,
                                                            s = e[1] - r[1] / 2;
                                                        if (n >= o && t >= s && n <= o + r[0] && t <= s + r[1]) return i
                                                    }
                                                    return -1
                                                }
                                            }),
                                            r = f.prototype;
                                        r.updateData = function(n) {
                                            var t, i, r;
                                            this.group.removeAll();
                                            t = this._symbolEl;
                                            i = n.hostModel;
                                            t.setShape({
                                                points: n.mapArray(n.getItemLayout),
                                                sizes: n.mapArray(function(t) {
                                                    var i = n.getItemVisual(t, "symbolSize");
                                                    return i instanceof Array || (i = [i, i]), i
                                                })
                                            });
                                            t.symbolProxy = e.createSymbol(n.getVisual("symbol"), 0, 0, 0, 0);
                                            t.setColor = t.symbolProxy.setColor;
                                            t.useStyle(i.getModel("itemStyle.normal").getItemStyle(["color"]));
                                            r = n.getVisual("color");
                                            r && t.setColor(r);
                                            t.seriesIndex = i.seriesIndex;
                                            t.on("mousemove", function(n) {
                                                t.dataIndex = null;
                                                var i = t.findDataIndex(n.offsetX, n.offsetY);
                                                i > 0 && (t.dataIndex = i)
                                            });
                                            this.group.add(t)
                                        };
                                        r.updateLayout = function(n) {
                                            var t = n.getData();
                                            this._symbolEl.setShape({
                                                points: t.mapArray(t.getItemLayout)
                                            })
                                        };
                                        r.remove = function() {
                                            this.group.removeAll()
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            r = i(1);
                                        i(153);
                                        i(158);
                                        i(159);
                                        r.registerVisual(u.curry(i(144), "radar"));
                                        r.registerVisual(u.curry(i(109), "radar", "circle", null));
                                        r.registerLayout(i(160));
                                        r.registerProcessor(u.curry(i(147), "radar"));
                                        r.registerPreprocessor(i(161))
                                    }, function(n, t, i) {
                                        i(154);
                                        i(156);
                                        i(157)
                                    }, function(n, t, i) {
                                        function r(n, t, i) {
                                            this._model = n;
                                            this.dimensions = [];
                                            this._indicatorAxes = u.map(n.getIndicatorModels(), function(n, t) {
                                                var r = "indicator_" + t,
                                                    i = new o(r, new s);
                                                return i.name = n.get("name"), i.model = n, n.axis = i, this.dimensions.push(r), i
                                            }, this);
                                            this.resize(n, i);
                                            this.cx;
                                            this.cy;
                                            this.r;
                                            this.startAngle
                                        }
                                        var u = i(4),
                                            o = i(155),
                                            s = i(117),
                                            f = i(7),
                                            e = i(114);
                                        r.prototype.getIndicatorAxes = function() {
                                            return this._indicatorAxes
                                        };
                                        r.prototype.dataToPoint = function(n, t) {
                                            var i = this._indicatorAxes[t];
                                            return this.coordToPoint(i.dataToCoord(n), t)
                                        };
                                        r.prototype.coordToPoint = function(n, t) {
                                            var r = this._indicatorAxes[t],
                                                i = r.angle,
                                                u = this.cx + n * Math.cos(i),
                                                f = this.cy - n * Math.sin(i);
                                            return [u, f]
                                        };
                                        r.prototype.pointToData = function(n) {
                                            var i = n[0] - this.cx,
                                                r = n[1] - this.cy,
                                                u = Math.sqrt(i * i + r * r),
                                                t, e, o;
                                            i /= u;
                                            r /= u;
                                            var c = Math.atan2(-r, i),
                                                s = Infinity,
                                                f, h = -1;
                                            for (t = 0; t < this._indicatorAxes.length; t++) e = this._indicatorAxes[t], o = Math.abs(c - e.angle), o < s && (f = e, h = t, s = o);
                                            return [h, +(f && f.coodToData(u))]
                                        };
                                        r.prototype.resize = function(n, t) {
                                            var i = n.get("center"),
                                                r = t.getWidth(),
                                                e = t.getHeight(),
                                                o = Math.min(r, e) / 2;
                                            this.cx = f.parsePercent(i[0], r);
                                            this.cy = f.parsePercent(i[1], e);
                                            this.startAngle = n.get("startAngle") * Math.PI / 180;
                                            this.r = f.parsePercent(n.get("radius"), o);
                                            u.each(this._indicatorAxes, function(n, t) {
                                                n.setExtent(0, this.r);
                                                var i = this.startAngle + t * Math.PI * 2 / this._indicatorAxes.length;
                                                i = Math.atan2(Math.sin(i), Math.cos(i));
                                                n.angle = i
                                            }, this)
                                        };
                                        r.prototype.update = function(n) {
                                            function r(n) {
                                                var i = Math.pow(10, Math.floor(Math.log(n) / Math.LN10)),
                                                    t = n / i;
                                                return t === 2 ? t = 5 : t *= 2, t * i
                                            }
                                            var i = this._indicatorAxes,
                                                o = this._model,
                                                t;
                                            u.each(i, function(n) {
                                                n.scale.setExtent(Infinity, -Infinity)
                                            });
                                            n.eachSeriesByType("radar", function(t) {
                                                if (t.get("coordinateSystem") === "radar" && n.getComponent("radar", t.get("radarIndex")) === o) {
                                                    var r = t.getData();
                                                    u.each(i, function(n) {
                                                        n.scale.unionExtent(r.getDataExtent(n.dim))
                                                    })
                                                }
                                            }, this);
                                            t = o.get("splitNumber");
                                            u.each(i, function(n) {
                                                var o = e.getScaleExtent(n, n.model),
                                                    c, l, p, a, v;
                                                e.niceScaleExtent(n, n.model);
                                                var y = n.model,
                                                    u = n.scale,
                                                    s = y.get("min"),
                                                    h = y.get("max"),
                                                    i = u.getInterval();
                                                if (s != null && h != null) u.setInterval((h - s) / t);
                                                else if (s != null) {
                                                    do c = s + i * t, u.setExtent(+s, c), u.setInterval(i), i = r(i); while (c < o[1] && isFinite(c) && isFinite(o[1]))
                                                } else if (h != null) {
                                                    do l = h - i * t, u.setExtent(l, +h), u.setInterval(i), i = r(i); while (l > o[0] && isFinite(l) && isFinite(o[0]))
                                                } else p = u.getTicks().length - 1, p > t && (i = r(i)), a = Math.round((o[0] + o[1]) / 2 / i) * i, v = Math.round(t / 2), u.setExtent(f.round(a - v * i), f.round(a + (t - v) * i)), u.setInterval(i)
                                            })
                                        };
                                        r.dimensions = [];
                                        r.create = function(n, t) {
                                            var i = [];
                                            return n.eachComponent("radar", function(u) {
                                                var f = new r(u, n, t);
                                                i.push(f);
                                                u.coordinateSystem = f
                                            }), n.eachSeriesByType("radar", function(n) {
                                                n.get("coordinateSystem") === "radar" && (n.coordinateSystem = i[n.get("radarIndex") || 0])
                                            }), i
                                        };
                                        i(26).register("radar", r);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function u(n, t, i) {
                                            r.call(this, n, t, i);
                                            this.type = "value";
                                            this.angle = 0;
                                            this.name = "";
                                            this.model
                                        }
                                        var f = i(4),
                                            r = i(123);
                                        f.inherits(u, r);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function f(n, t) {
                                            return r.defaults({
                                                show: t
                                            }, n)
                                        }
                                        var e = i(128),
                                            u = e.valueAxis,
                                            o = i(12),
                                            r = i(4),
                                            s = i(129),
                                            h = i(1).extendComponentModel({
                                                type: "radar",
                                                optionUpdated: function() {
                                                    var t = this.get("boundaryGap"),
                                                        i = this.get("splitNumber"),
                                                        u = this.get("scale"),
                                                        f = this.get("axisLine"),
                                                        e = this.get("axisTick"),
                                                        h = this.get("axisLabel"),
                                                        c = this.get("name.textStyle"),
                                                        l = this.get("name.show"),
                                                        n = this.get("name.formatter"),
                                                        a = this.get("nameGap"),
                                                        v = this.get("triggerEvent"),
                                                        y = r.map(this.get("indicator") || [], function(y) {
                                                            y.max != null && y.max > 0 && !y.min ? y.min = 0 : y.min != null && y.min < 0 && !y.max && (y.max = 0);
                                                            y = r.merge(r.clone(y), {
                                                                boundaryGap: t,
                                                                splitNumber: i,
                                                                scale: u,
                                                                axisLine: f,
                                                                axisTick: e,
                                                                axisLabel: h,
                                                                name: y.text,
                                                                nameLocation: "end",
                                                                nameGap: a,
                                                                nameTextStyle: c,
                                                                triggerEvent: v
                                                            }, !1);
                                                            l || (y.name = "");
                                                            typeof n == "string" ? y.name = n.replace("{value}", y.name) : typeof n == "function" && (y.name = n(y.name, y));
                                                            var p = r.extend(new o(y, null, this.ecModel), s);
                                                            return p.mainType = "radar", p.componentIndex = this.componentIndex, p
                                                        }, this);
                                                    this.getIndicatorModels = function() {
                                                        return y
                                                    }
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 0,
                                                    center: ["50%", "50%"],
                                                    radius: "75%",
                                                    startAngle: 90,
                                                    name: {
                                                        show: !0
                                                    },
                                                    boundaryGap: [0, 0],
                                                    splitNumber: 5,
                                                    nameGap: 15,
                                                    scale: !1,
                                                    shape: "polygon",
                                                    axisLine: r.merge({
                                                        lineStyle: {
                                                            color: "#bbb"
                                                        }
                                                    }, u.axisLine),
                                                    axisLabel: f(u.axisLabel, !1),
                                                    axisTick: f(u.axisTick, !1),
                                                    splitLine: f(u.splitLine, !0),
                                                    splitArea: f(u.splitArea, !0),
                                                    indicator: []
                                                }
                                            });
                                        n.exports = h
                                    }, function(n, t, i) {
                                        var f = i(133),
                                            r = i(4),
                                            u = i(43),
                                            e = ["axisLine", "axisLabel", "axisTick", "axisName"];
                                        n.exports = i(1).extendComponentView({
                                            type: "radar",
                                            render: function(n) {
                                                var t = this.group;
                                                t.removeAll();
                                                this._buildAxes(n);
                                                this._buildSplitLineAndArea(n)
                                            },
                                            _buildAxes: function(n) {
                                                var t = n.coordinateSystem,
                                                    i = t.getIndicatorAxes(),
                                                    u = r.map(i, function(n) {
                                                        return new f(n.model, {
                                                            position: [t.cx, t.cy],
                                                            rotation: n.angle,
                                                            labelDirection: -1,
                                                            tickDirection: -1,
                                                            nameDirection: 1
                                                        })
                                                    });
                                                r.each(u, function(n) {
                                                    r.each(e, n.add, n);
                                                    this.group.add(n.getGroup())
                                                }, this)
                                            },
                                            _buildSplitLineAndArea: function(n) {
                                                function v(n, t, i) {
                                                    var r = i % t.length;
                                                    return n[r] = n[r] || [], r
                                                }
                                                var l = n.coordinateSystem,
                                                    et = n.get("splitNumber"),
                                                    a = l.getIndicatorAxes(),
                                                    s, h, rt, y, t, o, p, e, ut, ft;
                                                if (a.length) {
                                                    var ot = n.get("shape"),
                                                        w = n.getModel("splitLine"),
                                                        b = n.getModel("splitArea"),
                                                        k = w.getModel("lineStyle"),
                                                        d = b.getModel("areaStyle"),
                                                        g = w.get("show"),
                                                        nt = b.get("show"),
                                                        i = k.get("color"),
                                                        f = d.get("color");
                                                    if (i = r.isArray(i) ? i : [i], f = r.isArray(f) ? f : [f], s = [], h = [], ot === "circle") {
                                                        var c = a[0].getTicksCoords(),
                                                            tt = l.cx,
                                                            it = l.cy;
                                                        for (t = 0; t < c.length; t++) g && (e = v(s, i, t), s[e].push(new u.Circle({
                                                            shape: {
                                                                cx: tt,
                                                                cy: it,
                                                                r: c[t]
                                                            }
                                                        }))), nt && t < c.length - 1 && (e = v(h, f, t), h[e].push(new u.Ring({
                                                            shape: {
                                                                cx: tt,
                                                                cy: it,
                                                                r0: c[t],
                                                                r: c[t + 1]
                                                            }
                                                        })))
                                                    } else
                                                        for (rt = r.map(a, function(n, t) {
                                                                var i = n.getTicksCoords();
                                                                return r.map(i, function(n) {
                                                                    return l.coordToPoint(n, t)
                                                                })
                                                            }), y = [], t = 0; t <= et; t++) {
                                                            for (o = [], p = 0; p < a.length; p++) o.push(rt[p][t]);
                                                            o[0] ? o.push(o[0].slice()) : !0 && console.error("Can't draw value axis " + t);
                                                            g && (e = v(s, i, t), s[e].push(new u.Polyline({
                                                                shape: {
                                                                    points: o
                                                                }
                                                            })));
                                                            nt && y && (e = v(h, f, t - 1), h[e].push(new u.Polygon({
                                                                shape: {
                                                                    points: o.concat(y)
                                                                }
                                                            })));
                                                            y = o.slice().reverse()
                                                        }
                                                    ut = k.getLineStyle();
                                                    ft = d.getAreaStyle();
                                                    r.each(h, function(n, t) {
                                                        this.group.add(u.mergePath(n, {
                                                            style: r.defaults({
                                                                stroke: "none",
                                                                fill: f[t % f.length]
                                                            }, ft),
                                                            silent: !0
                                                        }))
                                                    }, this);
                                                    r.each(s, function(n, t) {
                                                        this.group.add(u.mergePath(n, {
                                                            style: r.defaults({
                                                                fill: "none",
                                                                stroke: i[t % i.length]
                                                            }, ut),
                                                            silent: !0
                                                        }))
                                                    }, this)
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(28),
                                            f = i(97),
                                            e = i(102),
                                            o = i(4),
                                            r = u.extend({
                                                type: "series.radar",
                                                dependencies: ["radar"],
                                                init: function() {
                                                    r.superApply(this, "init", arguments);
                                                    this.legendDataProvider = function() {
                                                        return this._dataBeforeProcessed
                                                    }
                                                },
                                                getInitialData: function(n) {
                                                    var t = n.data || [],
                                                        r = e([], t, [], "indicator_"),
                                                        i = new f(r, this);
                                                    return i.initData(t), i
                                                },
                                                formatTooltip: function(n) {
                                                    var t = this.getRawValue(n),
                                                        i = this.coordinateSystem,
                                                        r = i.getIndicatorAxes();
                                                    return (this._data.getName(n) == "" ? this.name : this._data.getName(n)) + "<br/>" + o.map(r, function(n, i) {
                                                        return n.name + " : " + t[i]
                                                    }).join("<br />")
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "radar",
                                                    legendHoverLink: !0,
                                                    radarIndex: 0,
                                                    lineStyle: {
                                                        normal: {
                                                            width: 2,
                                                            type: "solid"
                                                        }
                                                    },
                                                    label: {
                                                        normal: {
                                                            position: "top"
                                                        }
                                                    },
                                                    symbol: "emptyCircle",
                                                    symbolSize: 4
                                                }
                                            });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function e(n) {
                                            return u.isArray(n) || (n = [+n, +n]), n
                                        }
                                        var r = i(43),
                                            u = i(4),
                                            f = i(106);
                                        n.exports = i(1).extendChartView({
                                            type: "radar",
                                            render: function(n) {
                                                function l(n, t) {
                                                    var r = n.getItemVisual(t, "symbol") || "circle",
                                                        u = n.getItemVisual(t, "color"),
                                                        i;
                                                    if (r !== "none") return i = f.createSymbol(r, -.5, -.5, 1, 1, u), i.attr({
                                                        style: {
                                                            strokeNoScale: !0
                                                        },
                                                        z2: 100,
                                                        scale: e(n.getItemVisual(t, "symbolSize"))
                                                    }), i
                                                }

                                                function h(t, i, u, f, e, o) {
                                                    var s, h;
                                                    for (u.removeAll(), s = 0; s < i.length - 1; s++) h = l(f, e), h && (h.__dimIdx = s, t[s] ? (h.attr("position", t[s]), r[o ? "initProps" : "updateProps"](h, {
                                                        position: i[s]
                                                    }, n, e)) : h.attr("position", i[s]), u.add(h))
                                                }

                                                function c(n) {
                                                    return u.map(n, function() {
                                                        return [o.cx, o.cy]
                                                    })
                                                }
                                                var o = n.coordinateSystem,
                                                    s = this.group,
                                                    t = n.getData(),
                                                    i = this._data;
                                                t.diff(i).add(function(i) {
                                                    var u = t.getItemLayout(i),
                                                        f, s;
                                                    if (u) {
                                                        var o = new r.Polygon,
                                                            e = new r.Polyline,
                                                            l = {
                                                                shape: {
                                                                    points: u
                                                                }
                                                            };
                                                        o.shape.points = c(u);
                                                        e.shape.points = c(u);
                                                        r.initProps(o, l, n, i);
                                                        r.initProps(e, l, n, i);
                                                        f = new r.Group;
                                                        s = new r.Group;
                                                        f.add(e);
                                                        f.add(o);
                                                        f.add(s);
                                                        h(e.shape.points, u, s, t, i, !0);
                                                        t.setItemGraphicEl(i, f)
                                                    }
                                                }).update(function(u, f) {
                                                    var e = i.getItemGraphicEl(f),
                                                        s = e.childAt(0),
                                                        c = e.childAt(1),
                                                        l = e.childAt(2),
                                                        o = {
                                                            shape: {
                                                                points: t.getItemLayout(u)
                                                            }
                                                        };
                                                    o.shape.points && (h(s.shape.points, o.shape.points, l, t, u, !1), r.updateProps(s, o, n), r.updateProps(c, o, n), t.setItemGraphicEl(u, e))
                                                }).remove(function(n) {
                                                    s.remove(i.getItemGraphicEl(n))
                                                }).execute();
                                                t.eachItemGraphicEl(function(i, f) {
                                                    function b() {
                                                        o.attr("ignore", v)
                                                    }

                                                    function k() {
                                                        o.attr("ignore", a)
                                                    }
                                                    var e = t.getItemModel(f),
                                                        y = i.childAt(0),
                                                        o = i.childAt(1),
                                                        d = i.childAt(2),
                                                        h = t.getItemVisual(f, "color");
                                                    s.add(i);
                                                    y.useStyle(u.defaults(e.getModel("lineStyle.normal").getLineStyle(), {
                                                        fill: "none",
                                                        stroke: h
                                                    }));
                                                    y.hoverStyle = e.getModel("lineStyle.emphasis").getLineStyle();
                                                    var c = e.getModel("areaStyle.normal"),
                                                        l = e.getModel("areaStyle.emphasis"),
                                                        a = c.isEmpty() && c.parentModel.isEmpty(),
                                                        v = l.isEmpty() && l.parentModel.isEmpty();
                                                    v = v && a;
                                                    o.ignore = a;
                                                    o.useStyle(u.defaults(c.getAreaStyle(), {
                                                        fill: h,
                                                        opacity: .7
                                                    }));
                                                    o.hoverStyle = l.getAreaStyle();
                                                    var g = e.getModel("itemStyle.normal").getItemStyle(["color"]),
                                                        nt = e.getModel("itemStyle.emphasis").getItemStyle(),
                                                        p = e.getModel("label.normal"),
                                                        w = e.getModel("label.emphasis");
                                                    d.eachChild(function(i) {
                                                        i.setStyle(g);
                                                        i.hoverStyle = u.clone(nt);
                                                        var e = t.get(t.dimensions[i.__dimIdx], f);
                                                        r.setText(i.style, p, h);
                                                        i.setStyle({
                                                            text: p.get("show") ? u.retrieve(n.getFormattedLabel(f, "normal", null, i.__dimIdx), e) : ""
                                                        });
                                                        r.setText(i.hoverStyle, w, h);
                                                        i.hoverStyle.text = w.get("show") ? u.retrieve(n.getFormattedLabel(f, "emphasis", null, i.__dimIdx), e) : ""
                                                    });
                                                    i.off("mouseover").off("mouseout").off("normal").off("emphasis");
                                                    i.on("emphasis", b).on("mouseover", b).on("normal", k).on("mouseout", k);
                                                    r.setHoverStyle(i)
                                                });
                                                this._data = t
                                            },
                                            remove: function() {
                                                this.group.removeAll();
                                                this._data = null
                                            },
                                            dispose: function() {}
                                        })
                                    }, function(n) {
                                        n.exports = function(n) {
                                            n.eachSeriesByType("radar", function(n) {
                                                function e(n, r) {
                                                    t[r] = t[r] || [];
                                                    t[r][i] = u.dataToPoint(n, i)
                                                }
                                                var r = n.getData(),
                                                    t = [],
                                                    u = n.coordinateSystem,
                                                    i, f;
                                                if (u) {
                                                    for (i = 0; i < u.getIndicatorAxes().length; i++) f = r.dimensions[i], r.each(f, e);
                                                    r.each(function(n) {
                                                        t[n][0] && t[n].push(t[n][0].slice());
                                                        r.setItemLayout(n, t[n])
                                                    })
                                                }
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = function(n) {
                                            var t = n.polar,
                                                i;
                                            t && (r.isArray(t) || (t = [t]), i = [], r.each(t, function(t) {
                                                t.indicator ? (t.type && !t.shape && (t.shape = t.type), n.radar = n.radar || [], r.isArray(n.radar) || (n.radar = [n.radar]), n.radar.push(t)) : i.push(t)
                                            }), n.polar = i);
                                            r.each(n.series, function(n) {
                                                n.type === "radar" && n.polarIndex && (n.radarIndex = n.polarIndex)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1),
                                            u = r.PRIORITY;
                                        i(163);
                                        i(173);
                                        i(177);
                                        i(164);
                                        r.registerLayout(i(179));
                                        r.registerVisual(i(180));
                                        r.registerProcessor(u.PROCESSOR.STATISTIC, i(181));
                                        r.registerPreprocessor(i(182));
                                        i(143)("map", [{
                                            type: "mapToggleSelect",
                                            event: "mapselectchanged",
                                            method: "toggleSelected"
                                        }, {
                                            type: "mapSelect",
                                            event: "mapselected",
                                            method: "select"
                                        }, {
                                            type: "mapUnSelect",
                                            event: "mapunselected",
                                            method: "unSelect"
                                        }])
                                    }, function(n, t, i) {
                                        var e = i(97),
                                            o = i(28),
                                            u = i(4),
                                            s = i(102),
                                            f = i(6),
                                            h = f.encodeHTML,
                                            c = f.addCommas,
                                            l = i(141),
                                            a = i(164),
                                            r = o.extend({
                                                type: "series.map",
                                                layoutMode: "box",
                                                needsDrawMap: !1,
                                                seriesGroup: [],
                                                init: function(n) {
                                                    n = this._fillOption(n, n.map);
                                                    this.option = n;
                                                    r.superApply(this, "init", arguments);
                                                    this.updateSelectedMap(n.data)
                                                },
                                                getInitialData: function(n) {
                                                    var i = s(["value"], n.data || []),
                                                        t = new e(i, this);
                                                    return t.initData(n.data), t
                                                },
                                                mergeOption: function(n) {
                                                    n.data && (n = this._fillOption(n, this.option.map));
                                                    r.superCall(this, "mergeOption", n);
                                                    this.updateSelectedMap(this.option.data)
                                                },
                                                _fillOption: function(n, t) {
                                                    return n = u.extend({}, n), n.data = a.getFilledRegions(n.data, t), n
                                                },
                                                getRawValue: function(n) {
                                                    return this._data.get("value", n)
                                                },
                                                getRegionModel: function(n) {
                                                    var t = this.getData();
                                                    return t.getItemModel(t.indexOfName(n))
                                                },
                                                formatTooltip: function(n) {
                                                    for (var f, e = this.getData(), o = c(this.getRawValue(n)), r = e.getName(n), i = this.seriesGroup, u = [], t = 0; t < i.length; t++) f = i[t].originalData.indexOfName(r), isNaN(i[t].originalData.get("value", f)) || u.push(h(i[t].name));
                                                    return u.join(", ") + "<br />" + r + " : " + o
                                                },
                                                getTooltipPosition: function(n) {
                                                    if (n != null) {
                                                        var r = this.getData().getName(n),
                                                            t = this.coordinateSystem,
                                                            i = t.getRegion(r);
                                                        return i && t.dataToPoint(i.center)
                                                    }
                                                },
                                                setZoom: function(n) {
                                                    this.option.zoom = n
                                                },
                                                setCenter: function(n) {
                                                    this.option.center = n
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "geo",
                                                    map: "china",
                                                    left: "center",
                                                    top: "center",
                                                    aspectScale: .75,
                                                    showLegendSymbol: !0,
                                                    dataRangeHoverLink: !0,
                                                    center: null,
                                                    zoom: 1,
                                                    scaleLimit: null,
                                                    label: {
                                                        normal: {
                                                            show: !1,
                                                            textStyle: {
                                                                color: "#000"
                                                            }
                                                        },
                                                        emphasis: {
                                                            show: !0,
                                                            textStyle: {
                                                                color: "rgb(100,0,0)"
                                                            }
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            borderWidth: .5,
                                                            borderColor: "#444",
                                                            areaColor: "#eee"
                                                        },
                                                        emphasis: {
                                                            areaColor: "rgba(255,215,0,0.8)"
                                                        }
                                                    }
                                                }
                                            });
                                        u.mixin(r, l);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function c(n, t) {
                                            var c = this.getBoundingRect(),
                                                e, r = n.get("layoutCenter"),
                                                u = n.get("layoutSize"),
                                                o = t.getWidth(),
                                                s = t.getHeight(),
                                                v = n.get("aspectScale") || .75,
                                                f = c.width / c.height * v,
                                                l = !1,
                                                i;
                                            r && u && (r = [h.parsePercent(r[0], o), h.parsePercent(r[1], s)], u = h.parsePercent(u, Math.min(o, s)), isNaN(r[0]) || isNaN(r[1]) || isNaN(u) ? !0 && console.warn("Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.") : l = !0);
                                            l ? (i = {}, f > 1 ? (i.width = u, i.height = u / f) : (i.height = u, i.width = u * f), i.y = r[1] - i.height / 2, i.x = r[0] - i.width / 2) : (e = n.getBoxLayoutParams(), e.aspect = f, i = a.getLayoutRect(e, {
                                                width: o,
                                                height: s
                                            }));
                                            this.setViewRect(i.x, i.y, i.width, i.height);
                                            this.setCenter(n.get("center"));
                                            this.setZoom(n.get("zoom"))
                                        }

                                        function l(n, t) {
                                            r.each(t.get("geoCoord"), function(t, i) {
                                                n.addGeoCoord(i, t)
                                            })
                                        }
                                        var s = i(165),
                                            a = i(21),
                                            r = i(4),
                                            h = i(7),
                                            e = {},
                                            o, u, f;
                                        !0 && (o = function(n) {
                                            console.error("Map " + n + " not exists. You can download map file on http://echarts.baidu.com/download-map.html")
                                        });
                                        u = {
                                            dimensions: s.prototype.dimensions,
                                            create: function(n, t) {
                                                var u = [],
                                                    i;
                                                return n.eachComponent("geo", function(n, i) {
                                                    var h = n.get("map"),
                                                        f = e[h],
                                                        r;
                                                    !0 && (f || o(h));
                                                    r = new s(h + i, h, f && f.geoJson, f && f.specialAreas, n.get("nameMap"));
                                                    r.zoomLimit = n.get("scaleLimit");
                                                    u.push(r);
                                                    l(r, n);
                                                    n.coordinateSystem = r;
                                                    r.model = n;
                                                    r.resize = c;
                                                    r.resize(n, t)
                                                }), n.eachSeries(function(n) {
                                                    var i = n.get("coordinateSystem"),
                                                        t;
                                                    i === "geo" && (t = n.get("geoIndex") || 0, n.coordinateSystem = u[t])
                                                }), i = {}, n.eachSeriesByType("map", function(n) {
                                                    var t = n.get("map");
                                                    i[t] = i[t] || [];
                                                    i[t].push(n)
                                                }), r.each(i, function(n, i) {
                                                    var h = e[i],
                                                        a, f;
                                                    !0 && (h || o(n[0].get("map")));
                                                    a = r.map(n, function(n) {
                                                        return n.get("nameMap")
                                                    });
                                                    f = new s(i, i, h && h.geoJson, h && h.specialAreas, r.mergeAll(a));
                                                    f.zoomLimit = r.retrieve.apply(null, r.map(n, function(n) {
                                                        return n.get("scaleLimit")
                                                    }));
                                                    u.push(f);
                                                    f.resize = c;
                                                    f.resize(n[0], t);
                                                    r.each(n, function(n) {
                                                        n.coordinateSystem = f;
                                                        l(f, n)
                                                    })
                                                }), u
                                            },
                                            registerMap: function(n, t, i) {
                                                t.geoJson && !t.features && (i = t.specialAreas, t = t.geoJson);
                                                typeof t == "string" && (t = typeof JSON != "undefined" && JSON.parse ? JSON.parse(t) : new Function("return (" + t + ");")());
                                                e[n] = {
                                                    geoJson: t,
                                                    specialAreas: i
                                                }
                                            },
                                            getMap: function(n) {
                                                return e[n]
                                            },
                                            getFilledRegions: function(n, t) {
                                                var r = (n || []).slice(),
                                                    h = u.getMap(t),
                                                    c = h && h.geoJson,
                                                    f, e, i, s;
                                                if (!c) return !0 && o(t), n;
                                                for (f = {}, e = c.features, i = 0; i < r.length; i++) f[r[i].name] = r[i];
                                                for (i = 0; i < e.length; i++) s = e[i].properties.name, f[s] || r.push({
                                                    name: s
                                                });
                                                return r
                                            }
                                        };
                                        f = i(1);
                                        f.registerMap = u.registerMap;
                                        f.getMap = u.getMap;
                                        f.loadMap = function() {};
                                        f.registerCoordinateSystem("geo", u);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function u(n, t, i, r, u) {
                                            f.call(this, n);
                                            this.map = t;
                                            this._nameCoordMap = {};
                                            this.loadGeoJson(i, r, u)
                                        }

                                        function o(n, t, i, r) {
                                            var f = i.geoModel,
                                                u = i.seriesModel,
                                                e = f ? f.coordinateSystem : u ? u.coordinateSystem || (u.getReferringComponents("geo")[0] || {}).coordinateSystem : null;
                                            return e === this ? e[n](r) : null
                                        }
                                        var s = i(166),
                                            r = i(4),
                                            e = i(9),
                                            f = i(169),
                                            h = [i(170), i(171), i(172)];
                                        u.prototype = {
                                            constructor: u,
                                            type: "geo",
                                            dimensions: ["lng", "lat"],
                                            containCoord: function(n) {
                                                for (var i = this.regions, t = 0; t < i.length; t++)
                                                    if (i[t].contain(n)) return !0;
                                                return !1
                                            },
                                            loadGeoJson: function(n, t, i) {
                                                var e, c, u, f, o;
                                                try {
                                                    this.regions = n ? s(n) : []
                                                } catch (l) {
                                                    throw "Invalid geoJson format\n" + l;
                                                }
                                                for (t = t || {}, i = i || {}, e = this.regions, c = {}, u = 0; u < e.length; u++) f = e[u].name, f = i[f] || f, e[u].name = f, c[f] = e[u], this.addGeoCoord(f, e[u].center), o = t[f], o && e[u].transformTo(o.left, o.top, o.width, o.height);
                                                this._regionsMap = c;
                                                this._rect = null;
                                                r.each(h, function(n) {
                                                    n(this)
                                                }, this)
                                            },
                                            transformTo: function(n, t, i, r) {
                                                var u = this.getBoundingRect(),
                                                    f, o;
                                                u = u.clone();
                                                u.y = -u.y - u.height;
                                                f = this._viewTransform;
                                                f.transform = u.calculateTransform(new e(n, t, i, r));
                                                f.decomposeTransform();
                                                o = f.scale;
                                                o[1] = -o[1];
                                                f.updateTransform();
                                                this._updateTransform()
                                            },
                                            getRegion: function(n) {
                                                return this._regionsMap[n]
                                            },
                                            getRegionByCoord: function(n) {
                                                for (var i = this.regions, t = 0; t < i.length; t++)
                                                    if (i[t].contain(n)) return i[t]
                                            },
                                            addGeoCoord: function(n, t) {
                                                this._nameCoordMap[n] = t
                                            },
                                            getGeoCoord: function(n) {
                                                return this._nameCoordMap[n]
                                            },
                                            getBoundingRect: function() {
                                                var n, i, t, r;
                                                if (this._rect) return this._rect;
                                                for (i = this.regions, t = 0; t < i.length; t++) r = i[t].getBoundingRect(), n = n || r.clone(), n.union(r);
                                                return this._rect = n || new e(0, 0, 0, 0)
                                            },
                                            dataToPoints: function(n) {
                                                var t = [];
                                                return n.mapArray(["lng", "lat"], function(n, i) {
                                                    return t[0] = n, t[1] = i, this.dataToPoint(t)
                                                }, this)
                                            },
                                            dataToPoint: function(n) {
                                                return typeof n == "string" && (n = this.getGeoCoord(n)), n ? f.prototype.dataToPoint.call(this, n) : void 0
                                            },
                                            convertToPixel: r.curry(o, "dataToPoint"),
                                            convertFromPixel: r.curry(o, "pointToData")
                                        };
                                        r.mixin(u, f);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function e(n) {
                                            var o, f, t, r, i, c;
                                            if (!n.UTF8Encoding) return n;
                                            for (o = n.features, f = 0; f < o.length; f++) {
                                                var l = o[f],
                                                    e = l.geometry,
                                                    s = e.coordinates,
                                                    h = e.encodeOffsets;
                                                for (t = 0; t < s.length; t++)
                                                    if (r = s[t], e.type === "Polygon") s[t] = u(r, h[t]);
                                                    else if (e.type === "MultiPolygon")
                                                    for (i = 0; i < r.length; i++) c = r[i], r[i] = u(c, h[t][i])
                                            }
                                            return n.UTF8Encoding = !1, n
                                        }

                                        function u(n, t) {
                                            for (var i, r, f = [], e = t[0], o = t[1], u = 0; u < n.length; u += 2) i = n.charCodeAt(u) - 64, r = n.charCodeAt(u + 1) - 64, i = i >> 1 ^ -(i & 1), r = r >> 1 ^ -(r & 1), i += e, r += o, e = i, o = r, f.push([i / 1024, r / 1024]);
                                            return f
                                        }

                                        function o(n) {
                                            for (var i, r = [], t = 0; t < n.length; t++)
                                                for (i = 0; i < n[t].length; i++) r.push(n[t][i]);
                                            return r
                                        }
                                        var r = i(4),
                                            f = i(167);
                                        n.exports = function(n) {
                                            return e(n), r.map(r.filter(n.features, function(n) {
                                                return n.geometry && n.properties
                                            }), function(n) {
                                                var i = n.properties,
                                                    r = n.geometry,
                                                    t = r.coordinates;
                                                return r.type === "MultiPolygon" && (t = o(t)), new f(i.name, t, i.cp)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function u(n, t, i) {
                                            if (this.name = n, this.contours = t, i) i = [i[0], i[1]];
                                            else {
                                                var r = this.getBoundingRect();
                                                i = [r.x + r.width / 2, r.y + r.height / 2]
                                            }
                                            this.center = i
                                        }
                                        var e = i(168),
                                            f = i(9),
                                            o = i(51),
                                            r = i(10);
                                        u.prototype = {
                                            constructor: u,
                                            getBoundingRect: function() {
                                                var e = this._rect,
                                                    i;
                                                if (e) return e;
                                                var u = Number.MAX_VALUE,
                                                    n = [u, u],
                                                    t = [-u, -u],
                                                    s = [],
                                                    h = [],
                                                    c = this.contours;
                                                for (i = 0; i < c.length; i++) o.fromPoints(c[i], s, h), r.min(n, n, s), r.max(t, t, h);
                                                return i === 0 && (n[0] = n[1] = t[0] = t[1] = 0), this._rect = new f(n[0], n[1], t[0] - n[0], t[1] - n[1])
                                            },
                                            contain: function(n) {
                                                var u = this.getBoundingRect(),
                                                    i = this.contours,
                                                    t, r;
                                                if (u.contain(n[0], n[1]))
                                                    for (t = 0, r = i.length; t < r; t++)
                                                        if (e.contain(i[t], n[0], n[1])) return !0;
                                                return !1
                                            },
                                            transformTo: function(n, t, i, u) {
                                                var e = this.getBoundingRect(),
                                                    c = e.width / e.height,
                                                    o, s;
                                                i ? u || (u = i / c) : i = c * u;
                                                var l = new f(n, t, i, u),
                                                    a = e.calculateTransform(l),
                                                    h = this.contours;
                                                for (o = 0; o < h.length; o++)
                                                    for (s = 0; s < h[o].length; s++) r.applyTransform(h[o][s], h[o][s], a);
                                                e = this._rect;
                                                e.copy(l);
                                                this.center = [e.x + e.width / 2, e.y + e.height / 2]
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function u(n, t) {
                                            return Math.abs(n - t) < f
                                        }

                                        function e(n, t, i) {
                                            var h = 0,
                                                f = n[0],
                                                o, s, e;
                                            if (!f) return !1;
                                            for (o = 1; o < n.length; o++) s = n[o], h += r(f[0], f[1], s[0], s[1], t, i), f = s;
                                            return e = n[0], u(f[0], e[0]) && u(f[1], e[1]) || (h += r(f[0], f[1], e[0], e[1], t, i)), h !== 0
                                        }
                                        var r = i(58),
                                            f = 1e-8;
                                        n.exports = {
                                            contain: e
                                        }
                                    }, function(n, t, i) {
                                        function s() {
                                            r.call(this)
                                        }

                                        function f(n) {
                                            this.name = n;
                                            this.zoomLimit;
                                            r.call(this);
                                            this._roamTransform = new s;
                                            this._viewTransform = new s;
                                            this._center;
                                            this._zoom
                                        }

                                        function l(n, t, i, r) {
                                            var u = i.seriesModel,
                                                f = u ? u.coordinateSystem : null;
                                            return f === this ? f[n](r) : null
                                        }
                                        var e = i(10),
                                            h = i(11),
                                            r = i(34),
                                            u = i(4),
                                            o = i(9),
                                            c = e.applyTransform;
                                        u.mixin(s, r);
                                        f.prototype = {
                                            constructor: f,
                                            type: "view",
                                            dimensions: ["x", "y"],
                                            setBoundingRect: function(n, t, i, r) {
                                                return this._rect = new o(n, t, i, r), this._rect
                                            },
                                            getBoundingRect: function() {
                                                return this._rect
                                            },
                                            setViewRect: function(n, t, i, r) {
                                                this.transformTo(n, t, i, r);
                                                this._viewRect = new o(n, t, i, r)
                                            },
                                            transformTo: function(n, t, i, r) {
                                                var f = this.getBoundingRect(),
                                                    u = this._viewTransform;
                                                u.transform = f.calculateTransform(new o(n, t, i, r));
                                                u.decomposeTransform();
                                                this._updateTransform()
                                            },
                                            setCenter: function(n) {
                                                n && (this._center = n, this._updateCenterAndZoom())
                                            },
                                            setZoom: function(n) {
                                                n = n || 1;
                                                var t = this.zoomLimit;
                                                t && (t.max != null && (n = Math.min(t.max, n)), t.min != null && (n = Math.max(t.min, n)));
                                                this._zoom = n;
                                                this._updateCenterAndZoom()
                                            },
                                            getDefaultCenter: function() {
                                                var n = this.getBoundingRect(),
                                                    t = n.x + n.width / 2,
                                                    i = n.y + n.height / 2;
                                                return [t, i]
                                            },
                                            getCenter: function() {
                                                return this._center || this.getDefaultCenter()
                                            },
                                            getZoom: function() {
                                                return this._zoom || 1
                                            },
                                            getRoamTransform: function() {
                                                return this._roamTransform
                                            },
                                            _updateCenterAndZoom: function() {
                                                var r = this._viewTransform.getLocalTransform(),
                                                    i = this._roamTransform,
                                                    t = this.getDefaultCenter(),
                                                    n = this.getCenter(),
                                                    u = this.getZoom();
                                                n = e.applyTransform([], n, r);
                                                t = e.applyTransform([], t, r);
                                                i.origin = n;
                                                i.position = [t[0] - n[0], t[1] - n[1]];
                                                i.scale = [u, u];
                                                this._updateTransform()
                                            },
                                            _updateTransform: function() {
                                                var t = this._roamTransform,
                                                    n = this._viewTransform;
                                                n.parent = t;
                                                t.updateTransform();
                                                n.updateTransform();
                                                n.transform && h.copy(this.transform || (this.transform = []), n.transform);
                                                this.transform ? (this.invTransform = this.invTransform || [], h.invert(this.invTransform, this.transform)) : this.invTransform = null;
                                                this.decomposeTransform()
                                            },
                                            getViewRect: function() {
                                                return this._viewRect
                                            },
                                            getViewRectAfterRoam: function() {
                                                var n = this.getBoundingRect().clone();
                                                return n.applyTransform(this.transform), n
                                            },
                                            dataToPoint: function(n) {
                                                var t = this.transform;
                                                return t ? c([], n, t) : [n[0], n[1]]
                                            },
                                            pointToData: function(n) {
                                                var t = this.invTransform;
                                                return t ? c([], n, t) : [n[0], n[1]]
                                            },
                                            convertToPixel: u.curry(l, "dataToPoint"),
                                            convertFromPixel: u.curry(l, "pointToData"),
                                            containPoint: function(n) {
                                                return this.getViewRect().contain(n[0], n[1])
                                            }
                                        };
                                        u.mixin(f, r);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        for (var f, o = i(167), e = [126, 25], r = [
                                                [
                                                    [0, 3.5],
                                                    [7, 11.2],
                                                    [15, 11.9],
                                                    [30, 7],
                                                    [42, .7],
                                                    [52, .7],
                                                    [56, 7.7],
                                                    [59, .7],
                                                    [64, .7],
                                                    [64, 0],
                                                    [5, 0],
                                                    [0, 3.5]
                                                ],
                                                [
                                                    [13, 16.1],
                                                    [19, 14.7],
                                                    [16, 21.7],
                                                    [11, 23.1],
                                                    [13, 16.1]
                                                ],
                                                [
                                                    [12, 32.2],
                                                    [14, 38.5],
                                                    [15, 38.5],
                                                    [13, 32.2],
                                                    [12, 32.2]
                                                ],
                                                [
                                                    [16, 47.6],
                                                    [12, 53.2],
                                                    [13, 53.2],
                                                    [18, 47.6],
                                                    [16, 47.6]
                                                ],
                                                [
                                                    [6, 64.4],
                                                    [8, 70],
                                                    [9, 70],
                                                    [8, 64.4],
                                                    [6, 64.4]
                                                ],
                                                [
                                                    [23, 82.6],
                                                    [29, 79.8],
                                                    [30, 79.8],
                                                    [25, 82.6],
                                                    [23, 82.6]
                                                ],
                                                [
                                                    [37, 70.7],
                                                    [43, 62.3],
                                                    [44, 62.3],
                                                    [39, 70.7],
                                                    [37, 70.7]
                                                ],
                                                [
                                                    [48, 51.1],
                                                    [51, 45.5],
                                                    [53, 45.5],
                                                    [50, 51.1],
                                                    [48, 51.1]
                                                ],
                                                [
                                                    [51, 35],
                                                    [51, 28.7],
                                                    [53, 28.7],
                                                    [53, 35],
                                                    [51, 35]
                                                ],
                                                [
                                                    [52, 22.4],
                                                    [55, 17.5],
                                                    [56, 17.5],
                                                    [53, 22.4],
                                                    [52, 22.4]
                                                ],
                                                [
                                                    [58, 12.6],
                                                    [62, 7],
                                                    [63, 7],
                                                    [60, 12.6],
                                                    [58, 12.6]
                                                ],
                                                [
                                                    [0, 3.5],
                                                    [0, 93.1],
                                                    [64, 93.1],
                                                    [64, 0],
                                                    [63, 0],
                                                    [63, 92.4],
                                                    [1, 92.4],
                                                    [1, 3.5],
                                                    [0, 3.5]
                                                ]
                                            ], u = 0; u < r.length; u++)
                                            for (f = 0; f < r[u].length; f++) r[u][f][0] /= 10.5, r[u][f][1] /= -10.5 / .75, r[u][f][0] += e[0], r[u][f][1] += e[1];
                                        n.exports = function(n) {
                                            n.map === "china" && n.regions.push(new o("南海诸岛", r, e))
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = {
                                                "南海诸岛": [32, 80],
                                                "广东": [0, -10],
                                                "香港": [10, 5],
                                                "澳门": [-10, 10],
                                                "天津": [5, 5]
                                            };
                                        n.exports = function(n) {
                                            r.each(n.regions, function(n) {
                                                var t = u[n.name],
                                                    i;
                                                t && (i = n.center, i[0] += t[0] / 10.5, i[1] += -t[1] / (10.5 / .75))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = {
                                                Russia: [100, 60],
                                                "United States of America": [-99, 38]
                                            };
                                        n.exports = function(n) {
                                            r.each(n.regions, function(n) {
                                                var t = u[n.name],
                                                    i;
                                                t && (i = n.center, i[0] = t[0], i[1] = t[1])
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(43),
                                            u = i(174);
                                        i(1).extendChartView({
                                            type: "map",
                                            render: function(n, t, i, r) {
                                                var e, f;
                                                r && r.type === "mapToggleSelect" && r.from === this.uid || (e = this.group, e.removeAll(), r && r.type === "geoRoam" && r.componentType === "series" && r.seriesId === n.id ? (f = this._mapDraw, f && e.add(f.group)) : n.needsDrawMap ? (f = this._mapDraw || new u(i, !0), e.add(f.group), f.draw(n, t, i, this, r), this._mapDraw = f) : (this._mapDraw && this._mapDraw.remove(), this._mapDraw = null), n.get("showLegendSymbol") && t.getComponent("legend") && this._renderSymbols(n, t, i))
                                            },
                                            remove: function() {
                                                this._mapDraw && this._mapDraw.remove();
                                                this._mapDraw = null;
                                                this.group.removeAll()
                                            },
                                            dispose: function() {
                                                this._mapDraw && this._mapDraw.remove();
                                                this._mapDraw = null
                                            },
                                            _renderSymbols: function(n) {
                                                var t = n.originalData,
                                                    i = this.group;
                                                t.each("value", function(u, f) {
                                                    var e, h, s;
                                                    if (!isNaN(u) && (e = t.getItemLayout(f), e && e.point)) {
                                                        var c = e.point,
                                                            l = e.offset,
                                                            o = new r.Circle({
                                                                style: {
                                                                    fill: n.getData().getVisual("color")
                                                                },
                                                                shape: {
                                                                    cx: c[0] + l * 9,
                                                                    cy: c[1],
                                                                    r: 3
                                                                },
                                                                silent: !0,
                                                                z2: 10
                                                            });
                                                        if (!l) {
                                                            var a = n.mainSeries.getData(),
                                                                v = t.getName(f),
                                                                y = v,
                                                                g = a.indexOfName(v),
                                                                p = t.getItemModel(f),
                                                                w = p.getModel("label.normal"),
                                                                b = p.getModel("label.emphasis"),
                                                                k = w.getModel("textStyle"),
                                                                d = b.getModel("textStyle"),
                                                                nt = a.getItemGraphicEl(g);
                                                            o.setStyle({
                                                                textPosition: "bottom"
                                                            });
                                                            h = function() {
                                                                o.setStyle({
                                                                    text: b.get("show") ? y : "",
                                                                    textFill: d.getTextColor(),
                                                                    textFont: d.getFont()
                                                                })
                                                            };
                                                            s = function() {
                                                                o.setStyle({
                                                                    text: w.get("show") ? y : "",
                                                                    textFill: k.getTextColor(),
                                                                    textFont: k.getFont()
                                                                })
                                                            };
                                                            nt.on("mouseover", h).on("mouseout", s).on("emphasis", h).on("normal", s);
                                                            s()
                                                        }
                                                        i.add(o)
                                                    }
                                                })
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function e(n) {
                                            var t = n.getItemStyle(),
                                                i = n.get("areaColor");
                                            return i && (t.fill = i), t
                                        }

                                        function h(n, t, i, r) {
                                            t.off("click");
                                            n.get("selectedMode") && t.on("click", function(u) {
                                                for (var f = u.target, s, e; !f.__region;) f = f.parent;
                                                f && (s = f.__region, e = {
                                                    type: (n.mainType === "geo" ? "geo" : "map") + "ToggleSelect",
                                                    name: s.name,
                                                    from: r.uid
                                                }, e[n.mainType + "Id"] = n.id, i.dispatchAction(e), o(n, t))
                                            })
                                        }

                                        function o(n, t) {
                                            t.eachChild(function(t) {
                                                t.__region && t.trigger(n.isSelected(t.__region.name) ? "emphasis" : "normal")
                                            })
                                        }

                                        function f(n, t) {
                                            var i = new r.Group;
                                            this._controller = new s(n.getZr(), t ? i : null, null);
                                            this.group = i;
                                            this._updateGroup = t
                                        }
                                        var s = i(175),
                                            r = i(43),
                                            u = i(4);
                                        f.prototype = {
                                            constructor: f,
                                            draw: function(n, t, i, f, s) {
                                                var c = n.getData && n.getData(),
                                                    v = n.coordinateSystem,
                                                    l = this.group,
                                                    a = v.scale,
                                                    y = {
                                                        position: v.position,
                                                        scale: a
                                                    };
                                                !l.childAt(0) || s ? l.attr(y) : r.updateProps(l, y, n);
                                                l.removeAll();
                                                var p = ["itemStyle", "normal"],
                                                    w = ["itemStyle", "emphasis"],
                                                    b = ["label", "normal"],
                                                    k = ["label", "emphasis"];
                                                u.each(v.regions, function(t) {
                                                    var f = new r.Group,
                                                        o = new r.CompoundPath({
                                                            shape: {
                                                                paths: []
                                                            }
                                                        }),
                                                        h, v, y, i;
                                                    f.add(o);
                                                    var i = n.getRegionModel(t.name) || n,
                                                        ft = i.getModel(p),
                                                        et = i.getModel(w),
                                                        d = e(ft, a),
                                                        ot = e(et, a),
                                                        g = i.getModel(b),
                                                        nt = i.getModel(k),
                                                        s;
                                                    c && (s = c.indexOfName(t.name), h = c.getItemVisual(s, "color", !0), h && (d.fill = h));
                                                    v = g.getModel("textStyle");
                                                    y = nt.getModel("textStyle");
                                                    u.each(t.contours, function(n) {
                                                        var t = new r.Polygon({
                                                            shape: {
                                                                points: n
                                                            }
                                                        });
                                                        o.shape.paths.push(t)
                                                    });
                                                    o.setStyle(d);
                                                    o.style.strokeNoScale = !0;
                                                    o.culling = !0;
                                                    var tt = g.get("show"),
                                                        it = nt.get("show"),
                                                        st = c && isNaN(c.get("value", s)),
                                                        rt = c && c.getItemLayout(s);
                                                    if (!c || st && (tt || it) || rt && rt.showLabel) {
                                                        var ut = c ? s : t.name,
                                                            ht = n.getFormattedLabel(ut, "normal"),
                                                            ct = n.getFormattedLabel(ut, "emphasis"),
                                                            lt = new r.Text({
                                                                style: {
                                                                    text: tt ? ht || t.name : "",
                                                                    fill: v.getTextColor(),
                                                                    textFont: v.getFont(),
                                                                    textAlign: "center",
                                                                    textVerticalAlign: "middle"
                                                                },
                                                                hoverStyle: {
                                                                    text: it ? ct || t.name : "",
                                                                    fill: y.getTextColor(),
                                                                    textFont: y.getFont()
                                                                },
                                                                position: t.center.slice(),
                                                                scale: [1 / a[0], 1 / a[1]],
                                                                z2: 10,
                                                                silent: !0
                                                            });
                                                        f.add(lt)
                                                    }
                                                    c ? c.setItemGraphicEl(s, f) : (i = n.getRegionModel(t.name), o.eventData = {
                                                        componentType: "geo",
                                                        geoIndex: n.componentIndex,
                                                        name: t.name,
                                                        region: i && i.option || {}
                                                    });
                                                    f.__region = t;
                                                    r.setHoverStyle(f, ot);
                                                    l.add(f)
                                                });
                                                this._updateController(n, t, i);
                                                h(n, l, i, f);
                                                o(n, l)
                                            },
                                            remove: function() {
                                                this.group.removeAll();
                                                this._controller.dispose()
                                            },
                                            _updateController: function(n, t, i) {
                                                function o() {
                                                    var t = {
                                                        type: "geoRoam",
                                                        componentType: f
                                                    };
                                                    return t[f + "Id"] = n.id, t
                                                }
                                                var e = n.coordinateSystem,
                                                    r = this._controller,
                                                    f;
                                                r.zoomLimit = n.get("scaleLimit");
                                                r.zoom = e.getZoom();
                                                r.enable(n.get("roam") || !1);
                                                f = n.mainType;
                                                r.off("pan").on("pan", function(n, t) {
                                                    i.dispatchAction(u.extend(o(), {
                                                        dx: n,
                                                        dy: t
                                                    }))
                                                });
                                                r.off("zoom").on("zoom", function(n, t, r) {
                                                    if (i.dispatchAction(u.extend(o(), {
                                                            zoom: n,
                                                            originX: t,
                                                            originY: r
                                                        })), this._updateGroup) {
                                                        var f = this.group,
                                                            e = f.scale;
                                                        f.traverse(function(n) {
                                                            n.type === "text" && n.attr("scale", [1 / e[0], 1 / e[1]])
                                                        })
                                                    }
                                                }, this);
                                                r.setContainsPoint(function(n, t) {
                                                    return e.getViewRectAfterRoam().contain(n, t)
                                                })
                                            }
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function h(n) {
                                            if (!n.target || !n.target.draggable) {
                                                var t = n.offsetX,
                                                    i = n.offsetY;
                                                this.containsPoint && this.containsPoint(t, i) && (this._x = t, this._y = i, this._dragging = !0)
                                            }
                                        }

                                        function c(n) {
                                            var t, f;
                                            if (this._dragging && (r.stop(n.event), n.gestureEvent !== "pinch")) {
                                                if (e.isTaken(this._zr, "globalPan")) return;
                                                var i = n.offsetX,
                                                    u = n.offsetY,
                                                    o = this._x,
                                                    s = this._y,
                                                    h = i - o,
                                                    c = u - s;
                                                this._x = i;
                                                this._y = u;
                                                t = this.target;
                                                t && (f = t.position, f[0] += h, f[1] += c, t.dirty());
                                                r.stop(n.event);
                                                this.trigger("pan", h, c, o, s, i, u)
                                            }
                                        }

                                        function l() {
                                            this._dragging = !1
                                        }

                                        function a(n) {
                                            var t = n.wheelDelta > 0 ? 1.1 : 1 / 1.1;
                                            o.call(this, n, t, n.offsetX, n.offsetY)
                                        }

                                        function v(n) {
                                            if (!e.isTaken(this._zr, "globalPan")) {
                                                var t = n.pinchScale > 1 ? 1.1 : 1 / 1.1;
                                                o.call(this, n, t, n.pinchX, n.pinchY)
                                            }
                                        }

                                        function o(n, t, i, u) {
                                            var f, s, l, a, o;
                                            if (this.containsPoint && this.containsPoint(i, u)) {
                                                if (r.stop(n.event), f = this.target, s = this.zoomLimit, f) {
                                                    var h = f.position,
                                                        c = f.scale,
                                                        e = this.zoom = this.zoom || 1;
                                                    e *= t;
                                                    s && (l = s.min || 0, a = s.max || Infinity, e = Math.max(Math.min(a, e), l));
                                                    o = e / this.zoom;
                                                    this.zoom = e;
                                                    h[0] -= (i - h[0]) * (o - 1);
                                                    h[1] -= (u - h[1]) * (o - 1);
                                                    c[0] *= o;
                                                    c[1] *= o;
                                                    f.dirty()
                                                }
                                                this.trigger("zoom", t, i, u)
                                            }
                                        }

                                        function s(n, t) {
                                            this.target = t;
                                            this.containsPoint;
                                            this.zoomLimit;
                                            this.zoom;
                                            this._zr = n;
                                            var i = f.bind,
                                                r = i(h, this),
                                                e = i(c, this),
                                                o = i(l, this),
                                                s = i(a, this),
                                                y = i(v, this);
                                            u.call(this);
                                            this.setContainsPoint = function(n) {
                                                this.containsPoint = n
                                            };
                                            this.enable = function(t) {
                                                if (this.disable(), t == null && (t = !0), t === !0 || t === "move" || t === "pan") {
                                                    n.on("mousedown", r);
                                                    n.on("mousemove", e);
                                                    n.on("mouseup", o)
                                                }
                                                if (t === !0 || t === "scale" || t === "zoom") {
                                                    n.on("mousewheel", s);
                                                    n.on("pinch", y)
                                                }
                                            };
                                            this.disable = function() {
                                                n.off("mousedown", r);
                                                n.off("mousemove", e);
                                                n.off("mouseup", o);
                                                n.off("mousewheel", s);
                                                n.off("pinch", y)
                                            };
                                            this.dispose = this.disable;
                                            this.isDragging = function() {
                                                return this._dragging
                                            };
                                            this.isPinching = function() {
                                                return this._pinching
                                            }
                                        }
                                        var u = i(33),
                                            f = i(4),
                                            r = i(87),
                                            e = i(176);
                                        f.mixin(s, u);
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function r(n) {
                                            return n[u] || (n[u] = {})
                                        }
                                        var u = '\0_ec_interaction_mutex',
                                            f = {
                                                take: function(n, t, i) {
                                                    var u = r(n);
                                                    u[t] = i
                                                },
                                                release: function(n, t, i) {
                                                    var u = r(n),
                                                        f = u[t];
                                                    f === i && (u[t] = null)
                                                },
                                                isTaken: function(n, t) {
                                                    return !!r(n)[t]
                                                }
                                            };
                                        i(1).registerAction({
                                            type: "takeGlobalCursor",
                                            event: "globalCursorTaken",
                                            update: "update"
                                        }, function() {});
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(178),
                                            f = i(1);
                                        f.registerAction({
                                            type: "geoRoam",
                                            event: "geoRoam",
                                            update: "updateLayout"
                                        }, function(n, t) {
                                            var i = n.componentType || "series";
                                            t.eachComponent({
                                                mainType: i,
                                                query: n
                                            }, function(t) {
                                                var e = t.coordinateSystem,
                                                    f;
                                                e.type === "geo" && (f = u.updateCenterAndZoom(e, n, t.get("scaleLimit")), t.setCenter && t.setCenter(f.center), t.setZoom && t.setZoom(f.zoom), i === "series" && r.each(t.seriesGroup, function(n) {
                                                    n.setCenter(f.center);
                                                    n.setZoom(f.zoom)
                                                }))
                                            })
                                        })
                                    }, function(n) {
                                        var t = {};
                                        t.updateCenterAndZoom = function(n, t, i) {
                                            var o = n.getZoom(),
                                                u = n.getCenter(),
                                                r = t.zoom,
                                                f = n.dataToPoint(u),
                                                s, h;
                                            if (t.dx != null && t.dy != null && (f[0] -= t.dx, f[1] -= t.dy, u = n.pointToData(f), n.setCenter(u)), r != null) {
                                                i && (s = i.min || 0, h = i.max || Infinity, r = Math.max(Math.min(o * r, h), s) / o);
                                                n.scale[0] *= r;
                                                n.scale[1] *= r;
                                                var e = n.position,
                                                    c = (t.originX - e[0]) * (r - 1),
                                                    l = (t.originY - e[1]) * (r - 1);
                                                e[0] -= c;
                                                e[1] -= l;
                                                n.updateTransform();
                                                u = n.pointToData(f);
                                                n.setCenter(u);
                                                n.setZoom(r * o)
                                            }
                                            return {
                                                center: n.getCenter(),
                                                zoom: n.getZoom()
                                            }
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = function(n) {
                                            var t = {};
                                            n.eachSeriesByType("map", function(i) {
                                                var e = i.get("map"),
                                                    f, u;
                                                t[e] || (f = {}, r.each(i.seriesGroup, function(t) {
                                                    var r = t.coordinateSystem,
                                                        i = t.originalData;
                                                    t.get("showLegendSymbol") && n.getComponent("legend") && i.each("value", function(n, t) {
                                                        var u = i.getName(t),
                                                            o = r.getRegion(u),
                                                            e, s;
                                                        o && !isNaN(n) && (e = f[u] || 0, s = r.dataToPoint(o.center), f[u] = e + 1, i.setItemLayout(t, {
                                                            point: s,
                                                            offset: e
                                                        }))
                                                    })
                                                }), u = i.getData(), u.each(function(n) {
                                                    var i = u.getName(n),
                                                        t = u.getItemLayout(n) || {};
                                                    t.showLabel = !f[i];
                                                    u.setItemLayout(n, t)
                                                }), t[e] = !0)
                                            })
                                        }
                                    }, function(n) {
                                        n.exports = function(n) {
                                            n.eachSeriesByType("map", function(n) {
                                                var t = n.get("color"),
                                                    i = n.getModel("itemStyle.normal"),
                                                    r = i.get("areaColor"),
                                                    u = i.get("color") || t[n.seriesIndex % t.length];
                                                n.getData().setVisual({
                                                    areaColor: r,
                                                    color: u
                                                })
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function u(n, t) {
                                            for (var i = {}, u = ["value"], r = 0; r < n.length; r++) n[r].each(u, function(t, u) {
                                                var f = n[r].getName(u);
                                                i[f] = i[f] || [];
                                                isNaN(t) || i[f].push(t)
                                            });
                                            return n[0].map(u, function(r, u) {
                                                for (var l, e = n[0].getName(u), o = 0, s = Infinity, h = -Infinity, c = i[e].length, f = 0; f < c; f++) s = Math.min(s, i[e][f]), h = Math.max(h, i[e][f]), o += i[e][f];
                                                return l = t === "min" ? s : t === "max" ? h : t === "average" ? o / c : o, c === 0 ? NaN : l
                                            })
                                        }
                                        var r = i(4);
                                        n.exports = function(n) {
                                            var t = {};
                                            n.eachSeriesByType("map", function(n) {
                                                var i = n.get("map");
                                                t[i] = t[i] || [];
                                                t[i].push(n)
                                            });
                                            r.each(t, function(n) {
                                                for (var i = u(r.map(n, function(n) {
                                                        return n.getData()
                                                    }), n[0].get("mapValueCalculation")), t = 0; t < n.length; t++) n[t].originalData = n[t].getData();
                                                for (t = 0; t < n.length; t++) n[t].seriesGroup = n, n[t].needsDrawMap = t === 0, n[t].setData(i.cloneShallow()), n[t].mainSeries = n[0]
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = function(n) {
                                            var t = [];
                                            r.each(n.series, function(n) {
                                                n.type === "map" && t.push(n)
                                            });
                                            r.each(t, function(n) {
                                                n.map = n.map || n.mapType;
                                                r.defaults(n, n.mapLocation)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        i(184);
                                        i(188);
                                        i(191);
                                        r.registerVisual(i(192));
                                        r.registerLayout(i(194))
                                    }, function(n, t, i) {
                                        function o(n, t) {
                                            var u = 0,
                                                i;
                                            r.each(n.children, function(n) {
                                                o(n, t);
                                                var i = n.value;
                                                r.isArray(i) && (i = i[0]);
                                                u += i
                                            });
                                            i = n.value;
                                            t >= 0 && (r.isArray(i) ? i = i[0] : n.value = new Array(t));
                                            (i == null || isNaN(i)) && (i = u);
                                            i < 0 && (i = 0);
                                            t >= 0 ? n.value[0] = i : n.value = i
                                        }

                                        function a(n, t) {
                                            var i = t.get("color"),
                                                u, f;
                                            if (i) return n = n || [], r.each(n, function(n) {
                                                var t = new h(n),
                                                    i = t.get("color");
                                                (t.get("itemStyle.normal.color") || i && i !== "none") && (u = !0)
                                            }), u || (f = n[0] || (n[0] = {}), f.color = i.slice()), n
                                        }
                                        var u = i(28),
                                            s = i(185),
                                            r = i(4),
                                            h = i(12),
                                            f = i(6),
                                            c = i(187),
                                            l = f.encodeHTML,
                                            e = f.addCommas;
                                        n.exports = u.extend({
                                            type: "series.treemap",
                                            dependencies: ["grid", "polar"],
                                            _viewRoot: null,
                                            defaultOption: {
                                                progressive: 0,
                                                hoverLayerThreshold: Infinity,
                                                left: "center",
                                                top: "middle",
                                                right: null,
                                                bottom: null,
                                                width: "80%",
                                                height: "80%",
                                                sort: !0,
                                                clipWindow: "origin",
                                                squareRatio: .5 * (1 + Math.sqrt(5)),
                                                leafDepth: null,
                                                drillDownIcon: "▶",
                                                visualDimension: 0,
                                                zoomToNodeRatio: .32 * .32,
                                                roam: !0,
                                                nodeClick: "zoomToNode",
                                                animation: !0,
                                                animationDurationUpdate: 900,
                                                animationEasing: "quinticInOut",
                                                breadcrumb: {
                                                    show: !0,
                                                    height: 22,
                                                    left: "center",
                                                    top: "bottom",
                                                    emptyItemWidth: 25,
                                                    itemStyle: {
                                                        normal: {
                                                            color: "rgba(0,0,0,0.7)",
                                                            borderColor: "rgba(255,255,255,0.7)",
                                                            borderWidth: 1,
                                                            shadowColor: "rgba(150,150,150,1)",
                                                            shadowBlur: 3,
                                                            shadowOffsetX: 0,
                                                            shadowOffsetY: 0,
                                                            textStyle: {
                                                                color: "#fff"
                                                            }
                                                        },
                                                        emphasis: {
                                                            textStyle: {}
                                                        }
                                                    }
                                                },
                                                label: {
                                                    normal: {
                                                        show: !0,
                                                        position: "inside",
                                                        textStyle: {
                                                            color: "#fff",
                                                            ellipsis: !0
                                                        }
                                                    }
                                                },
                                                itemStyle: {
                                                    normal: {
                                                        color: null,
                                                        colorAlpha: null,
                                                        colorSaturation: null,
                                                        borderWidth: 0,
                                                        gapWidth: 0,
                                                        borderColor: "#fff",
                                                        borderColorSaturation: null
                                                    },
                                                    emphasis: {}
                                                },
                                                color: [],
                                                colorAlpha: null,
                                                colorSaturation: null,
                                                colorMappingBy: "index",
                                                visibleMin: 10,
                                                childrenVisibleMin: null,
                                                levels: []
                                            },
                                            getInitialData: function(n, t) {
                                                var h = n.data || [],
                                                    u = n.name,
                                                    f, e, i;
                                                return u == null && (u = n.name), f = {
                                                    name: u,
                                                    children: n.data
                                                }, e = (h[0] || {}).value, o(f, r.isArray(e) ? e.length : -1), i = n.levels || [], i = n.levels = a(i, t), s.createTree(f, this, i).data
                                            },
                                            optionUpdated: function() {
                                                this.resetViewRoot()
                                            },
                                            formatTooltip: function(n) {
                                                var i = this.getData(),
                                                    t = this.getRawValue(n),
                                                    u = r.isArray(t) ? e(t[0]) : e(t),
                                                    f = i.getName(n);
                                                return l(f) + ": " + u
                                            },
                                            getDataParams: function(n) {
                                                var t = u.prototype.getDataParams.apply(this, arguments),
                                                    i = this.getData().tree.getNodeByDataIndex(n);
                                                return t.treePathInfo = c.wrapTreePathInfo(i, this), t
                                            },
                                            setLayoutInfo: function(n) {
                                                this.layoutInfo = this.layoutInfo || {};
                                                r.extend(this.layoutInfo, n)
                                            },
                                            mapIdToIndex: function(n) {
                                                var t = this._idIndexMap,
                                                    i;
                                                return t || (t = this._idIndexMap = {}, this._idIndexMapCount = 0), i = t[n], i == null && (t[n] = i = this._idIndexMapCount++), i
                                            },
                                            getViewRoot: function() {
                                                return this._viewRoot
                                            },
                                            resetViewRoot: function(n) {
                                                n ? this._viewRoot = n : n = this._viewRoot;
                                                var t = this.getData().tree.root;
                                                n && (n === t || t.contains(n)) || (this._viewRoot = t)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function r(n, t) {
                                            this.root;
                                            this.data;
                                            this._nodes = [];
                                            this.hostModel = n;
                                            this.levelModels = f.map(t || [], function(t) {
                                                return new e(t, n, n.ecModel)
                                            })
                                        }

                                        function c(n, t) {
                                            var i = t.children;
                                            n.parentNode !== t && (i.push(n), n.parentNode = t)
                                        }
                                        var f = i(4),
                                            e = i(12),
                                            o = i(97),
                                            s = i(186),
                                            h = i(102),
                                            u = function(n, t) {
                                                this.name = n || "";
                                                this.depth = 0;
                                                this.height = 0;
                                                this.parentNode = null;
                                                this.dataIndex = -1;
                                                this.children = [];
                                                this.viewChildren = [];
                                                this.hostTree = t
                                            };
                                        u.prototype = {
                                            constructor: u,
                                            isRemoved: function() {
                                                return this.dataIndex < 0
                                            },
                                            eachNode: function(n, t, i) {
                                                var u, e, o, r;
                                                for (typeof n == "function" && (i = t, t = n, n = null), n = n || {}, f.isString(n) && (n = {
                                                        order: n
                                                    }), u = n.order || "preorder", e = this[n.attr || "children"], u === "preorder" && (o = t.call(i, this)), r = 0; !o && r < e.length; r++) e[r].eachNode(n, t, i);
                                                u === "postorder" && t.call(i, this)
                                            },
                                            updateDepthAndHeight: function(n) {
                                                var r = 0,
                                                    t, i;
                                                for (this.depth = n, t = 0; t < this.children.length; t++) i = this.children[t], i.updateDepthAndHeight(n + 1), i.height > r && (r = i.height);
                                                this.height = r + 1
                                            },
                                            getNodeById: function(n) {
                                                var i;
                                                if (this.getId() === n) return this;
                                                for (var t = 0, r = this.children, u = r.length; t < u; t++)
                                                    if (i = r[t].getNodeById(n), i) return i
                                            },
                                            contains: function(n) {
                                                var i;
                                                if (n === this) return !0;
                                                for (var t = 0, r = this.children, u = r.length; t < u; t++)
                                                    if (i = r[t].contains(n), i) return i
                                            },
                                            getAncestors: function(n) {
                                                for (var i = [], t = n ? this : this.parentNode; t;) i.push(t), t = t.parentNode;
                                                return i.reverse(), i
                                            },
                                            getValue: function(n) {
                                                var t = this.hostTree.data;
                                                return t.get(t.getDimension(n || "value"), this.dataIndex)
                                            },
                                            setLayout: function(n, t) {
                                                this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, n, t)
                                            },
                                            getLayout: function() {
                                                return this.hostTree.data.getItemLayout(this.dataIndex)
                                            },
                                            getModel: function(n) {
                                                if (!(this.dataIndex < 0)) {
                                                    var t = this.hostTree,
                                                        i = t.data.getItemModel(this.dataIndex),
                                                        r = this.getLevelModel();
                                                    return i.getModel(n, (r || t.hostModel).getModel(n))
                                                }
                                            },
                                            getLevelModel: function() {
                                                return (this.hostTree.levelModels || [])[this.depth]
                                            },
                                            setVisual: function(n, t) {
                                                this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, n, t)
                                            },
                                            getVisual: function(n, t) {
                                                return this.hostTree.data.getItemVisual(this.dataIndex, n, t)
                                            },
                                            getRawIndex: function() {
                                                return this.hostTree.data.getRawIndex(this.dataIndex)
                                            },
                                            getId: function() {
                                                return this.hostTree.data.getId(this.dataIndex)
                                            }
                                        };
                                        r.prototype = {
                                            constructor: r,
                                            type: "tree",
                                            eachNode: function(n, t, i) {
                                                this.root.eachNode(n, t, i)
                                            },
                                            getNodeByDataIndex: function(n) {
                                                var t = this.data.getRawIndex(n);
                                                return this._nodes[t]
                                            },
                                            getNodeByName: function(n) {
                                                return this.root.getNodeByName(n)
                                            },
                                            update: function() {
                                                for (var r = this.data, t = this._nodes, n = 0, i = t.length; n < i; n++) t[n].dataIndex = -1;
                                                for (n = 0, i = r.count(); n < i; n++) t[r.getRawIndex(n)].dataIndex = n
                                            },
                                            clearLayouts: function() {
                                                this.data.clearItemLayouts()
                                            }
                                        };
                                        r.createTree = function(n, t, i) {
                                            function a(n, t) {
                                                var i, r, o;
                                                if (e.push(n), i = new u(n.name, f), t ? c(i, t) : f.root = i, f._nodes.push(i), r = n.children, r)
                                                    for (o = 0; o < r.length; o++) a(r[o], i)
                                            }
                                            var f = new r(t, i),
                                                e = [],
                                                v, l;
                                            return a(n), f.root.updateDepthAndHeight(0), v = h([{
                                                name: "value"
                                            }], e), l = new o(v, t), l.initData(e), s({
                                                mainData: l,
                                                struct: f,
                                                structAttr: "tree"
                                            }), f.update(), f
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function h(n) {
                                            var t = n.mainData,
                                                i = n.datas;
                                            i || (i = {
                                                main: t
                                            }, n.datasAttr = {
                                                main: "data"
                                            });
                                            n.datas = n.mainData = null;
                                            s(t, i, n);
                                            u(i, function(i) {
                                                u(t.TRANSFERABLE_METHODS, function(t) {
                                                    i.wrapMethod(t, r.curry(c, n))
                                                })
                                            });
                                            t.wrapMethod("cloneShallow", r.curry(a, n));
                                            u(t.CHANGABLE_METHODS, function(i) {
                                                t.wrapMethod(i, r.curry(l, n))
                                            });
                                            r.assert(i[t.dataType] === t)
                                        }

                                        function c(n, t) {
                                            if (y(this)) {
                                                var i = r.extend({}, this[f]);
                                                i[this.dataType] = t;
                                                s(t, i, n)
                                            } else o(t, this.dataType, this[e], n);
                                            return t
                                        }

                                        function l(n, t) {
                                            return n.struct && n.struct.update(this), t
                                        }

                                        function a(n, t) {
                                            return u(t[f], function(i, r) {
                                                i !== t && o(i.cloneShallow(), r, t, n)
                                            }), t
                                        }

                                        function v(n) {
                                            var t = this[e];
                                            return n == null || t == null ? t : t[f][n]
                                        }

                                        function y(n) {
                                            return n[e] === n
                                        }

                                        function s(n, t, i) {
                                            n[f] = {};
                                            u(t, function(t, r) {
                                                o(t, r, n, i)
                                            })
                                        }

                                        function o(n, t, i, r) {
                                            i[f][t] = n;
                                            n[e] = i;
                                            n.dataType = t;
                                            r.struct && (n[r.structAttr] = r.struct, r.struct[r.datasAttr[t]] = n);
                                            n.getLinkedData = v
                                        }
                                        var r = i(4),
                                            u = r.each,
                                            f = '\0__link_datas',
                                            e = '\0__link_mainData';
                                        n.exports = h
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            r = {
                                                retrieveTargetInfo: function(n, t) {
                                                    var r, i, u;
                                                    if (n && (n.type === "treemapZoomToNode" || n.type === "treemapRootToNode")) {
                                                        if (r = t.getData().tree.root, i = n.targetNode, i && r.contains(i)) return {
                                                            node: i
                                                        };
                                                        if (u = n.targetNodeId, u != null && (i = r.getNodeById(u))) return {
                                                            node: i
                                                        }
                                                    }
                                                },
                                                getPathToRoot: function(n) {
                                                    for (var t = []; n;) n = n.parentNode, n && t.push(n);
                                                    return t.reverse()
                                                },
                                                aboveViewRoot: function(n, t) {
                                                    var i = r.getPathToRoot(n);
                                                    return u.indexOf(i, t) >= 0
                                                },
                                                wrapTreePathInfo: function(n, t) {
                                                    for (var i = [], r; n;) r = n.dataIndex, i.push({
                                                        name: n.name,
                                                        dataIndex: r,
                                                        value: t.getRawValue(r)
                                                    }), n = n.parentNode;
                                                    return i.reverse(), i
                                                }
                                            };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function f() {
                                            return {
                                                nodeGroup: [],
                                                background: [],
                                                content: []
                                            }
                                        }

                                        function it(n, t, i, r, f, o, s, h, c, v) {
                                            function lt(t) {
                                                var r;
                                                p.dataIndex = s.dataIndex;
                                                p.seriesIndex = n.seriesIndex;
                                                var i = y.borderWidth,
                                                    u = Math.max(g - 2 * i, 0),
                                                    f = Math.max(it - 2 * i, 0);
                                                p.culling = !0;
                                                p.setShape({
                                                    x: i,
                                                    y: i,
                                                    width: u,
                                                    height: f
                                                });
                                                r = s.getVisual("color", !0);
                                                ht(p, function() {
                                                    var n = {
                                                            fill: r
                                                        },
                                                        t = s.getModel("itemStyle.emphasis").getItemStyle();
                                                    at(n, t, r, u, f);
                                                    p.setStyle(n);
                                                    e.setHoverStyle(p, t)
                                                });
                                                t.add(p)
                                            }

                                            function ht(n, t) {
                                                st ? n.invisible || o.push(n) : (t(), n.__tmWillVisible || (n.invisible = !1))
                                            }

                                            function at(t, i, r, u, f) {
                                                var o = s.getModel(),
                                                    e = o.get("name"),
                                                    h;
                                                y.isLeafRoot && (h = n.get("drillDownIcon", !0), e = h ? h + " " + e : e);
                                                ct(e, t, o, k, r, u, f);
                                                ct(e, i, o, d, r, u, f)
                                            }

                                            function ct(n, t, i, r, u, f, o) {
                                                var h = i.getModel(r),
                                                    s = h.getModel("textStyle"),
                                                    c;
                                                e.setText(t, h, u);
                                                t.textAlign = s.get("align");
                                                t.textVerticalAlign = s.get("baseline");
                                                c = s.getTextRect(n);
                                                t.text = !h.getShallow("show") || c.height > o ? "" : c.width > f ? s.get("ellipsis") ? s.truncateText(n, f, null, {
                                                    minChar: 2
                                                }) : "" : n
                                            }

                                            function ot(n, r, u, e) {
                                                var o = ft != null && i[n][ft],
                                                    s = f[n];
                                                return o ? (i[n][ft] = null, vt(s, o, n)) : st || (o = new r({
                                                    z: rt(u, e)
                                                }), o.__tmDepth = u, o.__tmStorageName = n, yt(s, o, n)), t[n][ut] = o
                                            }

                                            function vt(n, t, i) {
                                                var r = n[ut] = {};
                                                r.old = i === "nodeGroup" ? t.position.slice() : u.extend({}, t.shape)
                                            }

                                            function yt(n, t, i) {
                                                var o = n[ut] = {},
                                                    h = s.parentNode;
                                                if (h && (!r || r.direction === "drillDown")) {
                                                    var c = 0,
                                                        e = 0,
                                                        u = f.background[h.getRawIndex()];
                                                    !r && u && u.old && (c = u.old.width, e = u.old.height);
                                                    o.old = i === "nodeGroup" ? [0, e] : {
                                                        x: c,
                                                        y: e,
                                                        width: 0,
                                                        height: 0
                                                    }
                                                }
                                                o.fadein = i !== "nodeGroup"
                                            }
                                            var y, b, et, p;
                                            if (s && (y = s.getLayout(), y && y.isInView)) {
                                                var g = y.width,
                                                    it = y.height,
                                                    st = y.invisible,
                                                    ut = s.getRawIndex(),
                                                    ft = h && h.getRawIndex(),
                                                    w = ot("nodeGroup", l);
                                                if (w) return (c.add(w), w.attr("position", [y.x || 0, y.y || 0]), w.__tmNodeWidth = g, w.__tmNodeHeight = it, y.isAboveViewRoot) ? w : (b = ot("background", a, v, nt), b && (b.setShape({
                                                    x: 0,
                                                    y: 0,
                                                    width: g,
                                                    height: it
                                                }), ht(b, function() {
                                                    b.setStyle("fill", s.getVisual("borderColor", !0))
                                                }), w.add(b)), et = s.viewChildren, et && et.length || (p = ot("content", a, v, tt), p && lt(w)), w)
                                            }
                                        }

                                        function rt(n, t) {
                                            var i = n * g + t;
                                            return (i - 1) / i
                                        }
                                        var u = i(4),
                                            e = i(43),
                                            y = i(98),
                                            h = i(187),
                                            p = i(189),
                                            w = i(175),
                                            c = i(9),
                                            o = i(11),
                                            b = i(190),
                                            s = u.bind,
                                            l = e.Group,
                                            a = e.Rect,
                                            r = u.each,
                                            v = 3,
                                            k = ["label", "normal"],
                                            d = ["label", "emphasis"],
                                            g = 10,
                                            nt = 1,
                                            tt = 2;
                                        n.exports = i(1).extendChartView({
                                            type: "treemap",
                                            init: function() {
                                                this._containerGroup;
                                                this._storage = f();
                                                this._oldTree;
                                                this._breadcrumb;
                                                this._controller;
                                                this._state = "ready";
                                                this._mayClick
                                            },
                                            render: function(n, t, i, r) {
                                                var a = t.findComponents({
                                                    mainType: "series",
                                                    subType: "treemap",
                                                    query: r
                                                });
                                                if (!(u.indexOf(a, n) < 0)) {
                                                    this.seriesModel = n;
                                                    this.api = i;
                                                    this.ecModel = t;
                                                    var e = h.retrieveTargetInfo(r, n),
                                                        f = r && r.type,
                                                        v = n.layoutInfo,
                                                        y = !this._oldTree,
                                                        o = this._storage,
                                                        s = f === "treemapRootToNode" && e && o ? {
                                                            rootNodeGroup: o.nodeGroup[e.node.getRawIndex()],
                                                            direction: r.direction
                                                        } : null,
                                                        c = this._giveContainerGroup(v),
                                                        l = this._doRender(c, n, s);
                                                    !y && (!f || f === "treemapZoomToNode" || f === "treemapRootToNode") ? this._doAnimation(c, l, n, s) : l.renderFinally();
                                                    this._resetController(i);
                                                    this._renderBreadcrumb(n, i, e)
                                                }
                                            },
                                            _giveContainerGroup: function(n) {
                                                var t = this._containerGroup;
                                                return t || (t = this._containerGroup = new l, this._initEvents(t), this.group.add(t)), t.attr("position", [n.x, n.y]), t
                                            },
                                            _doRender: function(n, t, i) {
                                                function v(n, t, i, f, e) {
                                                    function s(n) {
                                                        return n.getId()
                                                    }

                                                    function o(r, u) {
                                                        var o = r != null ? n[r] : null,
                                                            s = u != null ? t[u] : null,
                                                            h = p(o, s, i, e);
                                                        h && v(o && o.viewChildren || [], s && s.viewChildren || [], h, f, e + 1)
                                                    }
                                                    f ? (t = n, r(n, function(n, t) {
                                                        n.isRemoved() || o(t, t)
                                                    })) : new y(t, n, s, s).add(o).update(o).remove(u.curry(o, null)).execute()
                                                }

                                                function w(n) {
                                                    var t = f();
                                                    return n && r(n, function(n, i) {
                                                        var u = t[i];
                                                        r(n, function(n) {
                                                            n && (u.push(n), n.__tmWillDelete = 1)
                                                        })
                                                    }), t
                                                }

                                                function b() {
                                                    r(s, function(n) {
                                                        r(n, function(n) {
                                                            n.parent && n.parent.remove(n)
                                                        })
                                                    });
                                                    r(a, function(n) {
                                                        n.invisible = !0;
                                                        n.dirty()
                                                    })
                                                }
                                                var o = t.getData().tree,
                                                    e = this._oldTree,
                                                    h = f(),
                                                    c = f(),
                                                    l = this._storage,
                                                    a = [],
                                                    p = u.curry(it, t, c, l, i, h, a),
                                                    s;
                                                return v(o.root ? [o.root] : [], e && e.root ? [e.root] : [], n, o === e || !e, 0), s = w(l), this._oldTree = o, this._storage = c, {
                                                    lastsForAnimation: h,
                                                    willDeleteEls: s,
                                                    renderFinally: b
                                                }
                                            },
                                            _doAnimation: function(n, t, i, f) {
                                                if (i.get("animation")) {
                                                    var o = i.get("animationDurationUpdate"),
                                                        h = i.get("animationEasing"),
                                                        e = b.createWrap();
                                                    r(t.willDeleteEls, function(n, t) {
                                                        r(n, function(n) {
                                                            var i, r, u, s;
                                                            n.invisible || (i = n.parent, f && f.direction === "drillDown" ? r = i === f.rootNodeGroup ? {
                                                                shape: {
                                                                    x: 0,
                                                                    y: 0,
                                                                    width: i.__tmNodeWidth,
                                                                    height: i.__tmNodeHeight
                                                                },
                                                                style: {
                                                                    opacity: 0
                                                                }
                                                            } : {
                                                                style: {
                                                                    opacity: 0
                                                                }
                                                            } : (u = 0, s = 0, i.__tmWillDelete || (u = i.__tmNodeWidth / 2, s = i.__tmNodeHeight / 2), r = t === "nodeGroup" ? {
                                                                position: [u, s],
                                                                style: {
                                                                    opacity: 0
                                                                }
                                                            } : {
                                                                shape: {
                                                                    x: u,
                                                                    y: s,
                                                                    width: 0,
                                                                    height: 0
                                                                },
                                                                style: {
                                                                    opacity: 0
                                                                }
                                                            }), r && e.add(n, r, o, h))
                                                        })
                                                    });
                                                    r(this._storage, function(n, i) {
                                                        r(n, function(n, r) {
                                                            var f = t.lastsForAnimation[i][r],
                                                                s = {};
                                                            f && (i === "nodeGroup" ? f.old && (s.position = n.position.slice(), n.attr("position", f.old)) : (f.old && (s.shape = u.extend({}, n.shape), n.setShape(f.old)), f.fadein ? (n.setStyle("opacity", 0), s.style = {
                                                                opacity: 1
                                                            }) : n.style.opacity !== 1 && (s.style = {
                                                                opacity: 1
                                                            })), e.add(n, s, o, h))
                                                        })
                                                    }, this);
                                                    this._state = "animating";
                                                    e.done(s(function() {
                                                        this._state = "ready";
                                                        t.renderFinally()
                                                    }, this)).start()
                                                }
                                            },
                                            _resetController: function(n) {
                                                var t = this._controller,
                                                    i;
                                                if (!t) {
                                                    t = this._controller = new w(n.getZr());
                                                    t.enable(this.seriesModel.get("roam"));
                                                    t.on("pan", s(this._onPan, this));
                                                    t.on("zoom", s(this._onZoom, this))
                                                }
                                                i = new c(0, 0, n.getWidth(), n.getHeight());
                                                t.setContainsPoint(function(n, t) {
                                                    return i.contain(n, t)
                                                })
                                            },
                                            _clearController: function() {
                                                var n = this._controller;
                                                n && (n.dispose(), n = null)
                                            },
                                            _onPan: function(n, t) {
                                                var r, i;
                                                if (this._mayClick = !1, this._state !== "animating" && (Math.abs(n) > v || Math.abs(t) > v)) {
                                                    if (r = this.seriesModel.getData().tree.root, !r) return;
                                                    if (i = r.getLayout(), !i) return;
                                                    this.api.dispatchAction({
                                                        type: "treemapMove",
                                                        from: this.uid,
                                                        seriesId: this.seriesModel.id,
                                                        rootRect: {
                                                            x: i.x + n,
                                                            y: i.y + t,
                                                            width: i.width,
                                                            height: i.height
                                                        }
                                                    })
                                                }
                                            },
                                            _onZoom: function(n, t, i) {
                                                var e, u, f, s, r;
                                                if (this._mayClick = !1, this._state !== "animating") {
                                                    if (e = this.seriesModel.getData().tree.root, !e) return;
                                                    if (u = e.getLayout(), !u) return;
                                                    f = new c(u.x, u.y, u.width, u.height);
                                                    s = this.seriesModel.layoutInfo;
                                                    t -= s.x;
                                                    i -= s.y;
                                                    r = o.create();
                                                    o.translate(r, r, [-t, -i]);
                                                    o.scale(r, r, [n, n]);
                                                    o.translate(r, r, [t, i]);
                                                    f.applyTransform(r);
                                                    this.api.dispatchAction({
                                                        type: "treemapRender",
                                                        from: this.uid,
                                                        seriesId: this.seriesModel.id,
                                                        rootRect: {
                                                            x: f.x,
                                                            y: f.y,
                                                            width: f.width,
                                                            height: f.height
                                                        }
                                                    })
                                                }
                                            },
                                            _initEvents: function(n) {
                                                function t(n) {
                                                    var r = this.seriesModel.get("nodeClick", !0),
                                                        t, i;
                                                    if (r && (t = this.findTarget(n.offsetX, n.offsetY), t))
                                                        if (i = t.node, i.getLayout().isLeafRoot) this._rootToNode(t);
                                                        else if (r === "zoomToNode") this._zoomToNode(t);
                                                    else if (r === "link") {
                                                        var u = i.hostTree.data.getItemModel(i.dataIndex),
                                                            f = u.get("link", !0),
                                                            e = u.get("target", !0) || "blank";
                                                        f && window.open(f, e)
                                                    }
                                                }
                                                n.on("mousedown", function() {
                                                    this._state === "ready" && (this._mayClick = !0)
                                                }, this);
                                                n.on("mouseup", function(n) {
                                                    this._mayClick && (this._mayClick = !1, this._state === "ready" && t.call(this, n))
                                                }, this)
                                            },
                                            _renderBreadcrumb: function(n, t, i) {
                                                function r(t) {
                                                    this._state !== "animating" && (h.aboveViewRoot(n.getViewRoot(), t) ? this._rootToNode({
                                                        node: t
                                                    }) : this._zoomToNode({
                                                        node: t
                                                    }))
                                                }
                                                i || (i = n.get("leafDepth", !0) != null ? {
                                                    node: n.getViewRoot()
                                                } : this.findTarget(t.getWidth() / 2, t.getHeight() / 2), i || (i = {
                                                    node: n.getData().tree.root
                                                }));
                                                (this._breadcrumb || (this._breadcrumb = new p(this.group))).render(n, t, i.node, s(r, this))
                                            },
                                            remove: function() {
                                                this._clearController();
                                                this._containerGroup && this._containerGroup.removeAll();
                                                this._storage = f();
                                                this._state = "ready";
                                                this._breadcrumb && this._breadcrumb.remove()
                                            },
                                            dispose: function() {
                                                this._clearController()
                                            },
                                            _zoomToNode: function(n) {
                                                this.api.dispatchAction({
                                                    type: "treemapZoomToNode",
                                                    from: this.uid,
                                                    seriesId: this.seriesModel.id,
                                                    targetNode: n.node
                                                })
                                            },
                                            _rootToNode: function(n) {
                                                this.api.dispatchAction({
                                                    type: "treemapRootToNode",
                                                    from: this.uid,
                                                    seriesId: this.seriesModel.id,
                                                    targetNode: n.node
                                                })
                                            },
                                            findTarget: function(n, t) {
                                                var i, r = this.seriesModel.getViewRoot();
                                                return r.eachNode({
                                                    attr: "viewChildren",
                                                    order: "preorder"
                                                }, function(r) {
                                                    var e = this._storage.background[r.getRawIndex()],
                                                        u, f;
                                                    if (e)
                                                        if (u = e.transformCoordToLocal(n, t), f = e.shape, f.x <= u[0] && u[0] <= f.x + f.width && f.y <= u[1] && u[1] <= f.y + f.height) i = {
                                                            node: r,
                                                            offsetX: u[0],
                                                            offsetY: u[1]
                                                        };
                                                        else return !1
                                                }, this), i
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function u(n) {
                                            this.group = new f.Group;
                                            n.add(this.group)
                                        }

                                        function l(n, t, i, u, f, e) {
                                            var o = [
                                                [f ? n : n - r, t],
                                                [n + i, t],
                                                [n + i, t + u],
                                                [f ? n : n - r, t + u]
                                            ];
                                            return e || o.splice(2, 0, [n + i + r, t + u / 2]), f || o.push([n, t + u / 2]), o
                                        }

                                        function a(n, t, i) {
                                            n.eventData = {
                                                componentType: "series",
                                                componentSubType: "treemap",
                                                seriesIndex: t.componentIndex,
                                                seriesName: t.name,
                                                seriesType: "treemap",
                                                selfType: "breadcrumb",
                                                nodeData: {
                                                    dataIndex: i && i.dataIndex,
                                                    name: i && i.name
                                                },
                                                treePathInfo: i && h.wrapTreePathInfo(i, t)
                                            }
                                        }
                                        var f = i(43),
                                            e = i(21),
                                            o = i(4),
                                            h = i(187),
                                            c = 8,
                                            s = 8,
                                            r = 5;
                                        u.prototype = {
                                            constructor: u,
                                            render: function(n, t, i, r) {
                                                var u = n.getModel("breadcrumb"),
                                                    o = this.group;
                                                if (o.removeAll(), u.get("show") && i) {
                                                    var s = u.getModel("itemStyle.normal"),
                                                        h = s.getModel("textStyle"),
                                                        f = {
                                                            pos: {
                                                                left: u.get("left"),
                                                                right: u.get("right"),
                                                                top: u.get("top"),
                                                                bottom: u.get("bottom")
                                                            },
                                                            box: {
                                                                width: t.getWidth(),
                                                                height: t.getHeight()
                                                            },
                                                            emptyItemWidth: u.get("emptyItemWidth"),
                                                            totalWidth: 0,
                                                            renderList: []
                                                        };
                                                    this._prepare(i, f, h);
                                                    this._renderContent(n, f, s, h, r);
                                                    e.positionGroup(o, f.pos, f.box)
                                                }
                                            },
                                            _prepare: function(n, t, i) {
                                                for (var r = n; r; r = r.parentNode) {
                                                    var u = r.getModel().get("name"),
                                                        e = i.getTextRect(u),
                                                        f = Math.max(e.width + c * 2, t.emptyItemWidth);
                                                    t.totalWidth += f + s;
                                                    t.renderList.push({
                                                        node: r,
                                                        text: u,
                                                        width: f
                                                    })
                                                }
                                            },
                                            _renderContent: function(n, t, i, r, u) {
                                                for (var p, w = 0, b = t.emptyItemWidth, nt = n.get("breadcrumb.height"), tt = e.getAvailableSize(t.pos, t.box), k = t.totalWidth, v = t.renderList, h = v.length - 1; h >= 0; h--) {
                                                    var y = v[h],
                                                        d = y.node,
                                                        c = y.width,
                                                        g = y.text;
                                                    k > tt.width && (k -= c - b, c = b, g = "");
                                                    p = new f.Polygon({
                                                        shape: {
                                                            points: l(w, 0, c, nt, h === v.length - 1, h === 0)
                                                        },
                                                        style: o.defaults(i.getItemStyle(), {
                                                            lineJoin: "bevel",
                                                            text: g,
                                                            textFill: r.getTextColor(),
                                                            textFont: r.getFont()
                                                        }),
                                                        z: 10,
                                                        onclick: o.curry(u, d)
                                                    });
                                                    this.group.add(p);
                                                    a(p, n, d);
                                                    w += c + s
                                                }
                                            },
                                            remove: function() {
                                                this.group.removeAll()
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function u() {
                                            var n = [],
                                                t = {},
                                                i;
                                            return {
                                                add: function(i, u, f, e, o) {
                                                    return (r.isString(e) && (o = e, e = 0), t[i.id]) ? !1 : (t[i.id] = 1, n.push({
                                                        el: i,
                                                        target: u,
                                                        time: f,
                                                        delay: e,
                                                        easing: o
                                                    }), !0)
                                                },
                                                done: function(n) {
                                                    return i = n, this
                                                },
                                                start: function() {
                                                    function o() {
                                                        f--;
                                                        f || (n.length = 0, t = {}, i && i())
                                                    }
                                                    for (var r, f = n.length, u = 0, e = n.length; u < e; u++) r = n[u], r.el.animateTo(r.target, r.time, r.delay, r.easing, o);
                                                    return this
                                                }
                                            }
                                        }
                                        var r = i(4);
                                        n.exports = {
                                            createWrap: u
                                        }
                                    }, function(n, t, i) {
                                        for (var u = i(1), f = i(187), o = function() {}, e = ["treemapZoomToNode", "treemapRender", "treemapMove"], r = 0; r < e.length; r++) u.registerAction({
                                            type: e[r],
                                            update: "updateView"
                                        }, o);
                                        u.registerAction({
                                            type: "treemapRootToNode",
                                            update: "updateView"
                                        }, function(n, t) {
                                            function i(t) {
                                                var i = f.retrieveTargetInfo(n, t),
                                                    r;
                                                i && (r = t.getViewRoot(), r && (n.direction = f.aboveViewRoot(r, i.node) ? "rollUp" : "drillDown"), t.resetViewRoot(i.node))
                                            }
                                            t.eachComponent({
                                                mainType: "series",
                                                subType: "treemap",
                                                query: n
                                            }, i)
                                        })
                                    }, function(n, t, i) {
                                        function s(n, t, i, u, e, o) {
                                            var d = n.getModel(),
                                                l = n.getLayout(),
                                                c, tt;
                                            if (l && !l.invisible && l.isInView) {
                                                var w = n.getModel(f),
                                                    it = i[n.depth],
                                                    b = a(w, t, it, u),
                                                    g = w.get("borderColor"),
                                                    nt = w.get("borderColorSaturation"),
                                                    k;
                                                nt != null && (k = h(b, n), g = v(nt, k));
                                                n.setVisual("borderColor", g);
                                                c = n.viewChildren;
                                                c && c.length ? (tt = y(n, d, l, w, b, c), r.each(c, function(n, t) {
                                                    if (n.depth >= e.length || n === e[n.depth]) {
                                                        var r = p(d, b, n, t, tt, o);
                                                        s(n, r, i, u, e, o)
                                                    }
                                                })) : (k = h(b, n), n.setVisual("color", k))
                                            }
                                        }

                                        function a(n, t, i, u) {
                                            var f = r.extend({}, t);
                                            return r.each(["color", "colorAlpha", "colorSaturation"], function(r) {
                                                var e = n.get(r, !0);
                                                e == null && i && (e = i[r]);
                                                e == null && (e = t[r]);
                                                e == null && (e = u.get(r));
                                                e != null && (f[r] = e)
                                            }), f
                                        }

                                        function h(n) {
                                            var t = e(n, "color"),
                                                i, r;
                                            if (t) return i = e(n, "colorAlpha"), r = e(n, "colorSaturation"), r && (t = u.modifyHSL(t, null, null, r)), i && (t = u.modifyAlpha(t, i)), t
                                        }

                                        function v(n, t) {
                                            return t != null ? u.modifyHSL(t, null, null, n) : null
                                        }

                                        function e(n, t) {
                                            var i = n[t];
                                            if (i != null && i !== "none") return i
                                        }

                                        function y(n, t, i, r, u, f) {
                                            var s, h, e, l;
                                            if (f && f.length) return (s = o(t, "color") || u.color != null && u.color !== "none" && (o(t, "colorAlpha") || o(t, "colorSaturation")), !s) ? void 0 : (h = t.get("colorMappingBy"), e = {
                                                type: s.name,
                                                dataExtent: i.dataExtent,
                                                visual: s.range
                                            }, e.type === "color" && (h === "index" || h === "id") ? (e.mappingMethod = "category", e.loop = !0) : e.mappingMethod = "linear", l = new c(e), l.__drColorMappingBy = h, l)
                                        }

                                        function o(n, t) {
                                            var i = n.get(t);
                                            return l(i) && i.length ? {
                                                name: t,
                                                range: i
                                            } : null
                                        }

                                        function p(n, t, i, u, f, e) {
                                            var o = r.extend({}, t);
                                            if (f) {
                                                var s = f.type,
                                                    h = s === "color" && f.__drColorMappingBy,
                                                    c = h === "index" ? u : h === "id" ? e.mapIdToIndex(i.getId()) : i.getValue(n.get("visualDimension"));
                                                o[s] = f.mapValueToVisual(c)
                                            }
                                            return o
                                        }
                                        var c = i(193),
                                            u = i(39),
                                            r = i(4),
                                            l = r.isArray,
                                            f = "itemStyle.normal";
                                        n.exports = function(n, t, i) {
                                            var u = {
                                                mainType: "series",
                                                subType: "treemap",
                                                query: i
                                            };
                                            n.eachComponent(u, function(n) {
                                                var t = n.getData().tree,
                                                    i = t.root,
                                                    e = n.getModel(f),
                                                    u;
                                                i.isRemoved() || (u = r.map(t.levelModels, function(n) {
                                                    return n ? n.get(f) : null
                                                }), s(i, {}, u, e, n.getViewRoot().getAncestors(), n))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function nt(n) {
                                            var t = n.pieceList;
                                            n.hasSpecialVisual = !1;
                                            r.each(t, function(t, i) {
                                                t.originIndex = i;
                                                t.visual != null && (n.hasSpecialVisual = !0)
                                            })
                                        }

                                        function tt(n) {
                                            var u = n.categories,
                                                t = n.visual,
                                                e = n.categoryMap = {},
                                                f, i;
                                            for (o(u, function(n, t) {
                                                    e[n] = t
                                                }), r.isArray(t) || (f = [], r.isObject(t) ? o(t, function(n, t) {
                                                    var i = e[t];
                                                    f[i != null ? i : h] = n
                                                }) : f[h] = t, t = n.visual = f), i = u.length - 1; i >= 0; i--) t[i] == null && (delete e[u[i]], u.pop())
                                        }

                                        function v(n, t) {
                                            var u = n.visual,
                                                i = [],
                                                f;
                                            r.isObject(u) ? o(u, function(n) {
                                                i.push(n)
                                            }) : u != null && i.push(u);
                                            f = {
                                                color: 1,
                                                symbol: 1
                                            };
                                            t || i.length !== 1 || f.hasOwnProperty(n.type) || (i[1] = i[0]);
                                            n.visual = i
                                        }

                                        function c(n) {
                                            return {
                                                applyVisual: function(t, i, r) {
                                                    t = this.mapValueToVisual(t);
                                                    r("color", n(i("color"), t))
                                                },
                                                _doMap: w([0, 1])
                                            }
                                        }

                                        function d(n, t) {
                                            var i = this.option.visual;
                                            return i[Math.round(e(t, [0, 1], [0, i.length - 1], !0))] || {}
                                        }

                                        function y(n) {
                                            return function(t, i, r) {
                                                r(n, this.mapValueToVisual(t))
                                            }
                                        }

                                        function l(n) {
                                            var t = this.option.visual;
                                            return t[this.option.loop && n !== h ? n % t.length : n]
                                        }

                                        function p() {
                                            return this.option.visual[0]
                                        }

                                        function w(n) {
                                            return {
                                                linear: function(t) {
                                                    return e(t, n, this.option.visual, !0)
                                                },
                                                category: l,
                                                piecewise: function(t, i) {
                                                    var r = b.call(this, i);
                                                    return r == null && (r = e(t, n, this.option.visual, !0)), r
                                                },
                                                fixed: p
                                            }
                                        }

                                        function b(n) {
                                            var i = this.option,
                                                r = i.pieceList,
                                                f, t;
                                            if (i.hasSpecialVisual && (f = u.findPieceIndex(n, r), t = r[f], t && t.visual)) return t.visual[this.type]
                                        }

                                        function a(n, t, i) {
                                            return n ? t <= i : t < i
                                        }
                                        var r = i(4),
                                            f = i(39),
                                            e = i(7).linearMap,
                                            o = r.each,
                                            k = r.isObject,
                                            h = -1,
                                            u = function(n) {
                                                var i = n.mappingMethod,
                                                    f = n.type,
                                                    t = this.option = r.clone(n),
                                                    u;
                                                this.type = f;
                                                this.mappingMethod = i;
                                                this._normalizeData = g[i];
                                                u = s[f];
                                                this.applyVisual = u.applyVisual;
                                                this.getColorMapper = u.getColorMapper;
                                                this._doMap = u._doMap[i];
                                                i === "piecewise" ? (v(t), nt(t)) : i === "category" ? t.categories ? tt(t) : v(t, !0) : (r.assert(i !== "linear" || t.dataExtent), v(t))
                                            },
                                            s, g;
                                        u.prototype = {
                                            constructor: u,
                                            mapValueToVisual: function(n) {
                                                var t = this._normalizeData(n);
                                                return this._doMap(t, n)
                                            },
                                            getNormalizer: function() {
                                                return r.bind(this._normalizeData, this)
                                            }
                                        };
                                        s = u.visualHandlers = {
                                            color: {
                                                applyVisual: y("color"),
                                                getColorMapper: function() {
                                                    var n = this.option,
                                                        t = r.map(n.visual, f.parse);
                                                    return r.bind(n.mappingMethod === "category" ? function(n, t) {
                                                        return t || (n = this._normalizeData(n)), l(this, n)
                                                    } : function(n, i, u) {
                                                        var e = !!u;
                                                        return i || (n = this._normalizeData(n)), u = f.fastMapToColor(n, t, u), e ? u : r.stringify(u, "rgba")
                                                    }, this)
                                                },
                                                _doMap: {
                                                    linear: function(n) {
                                                        return f.mapToColor(n, this.option.visual)
                                                    },
                                                    category: l,
                                                    piecewise: function(n, t) {
                                                        var i = b.call(this, t);
                                                        return i == null && (i = f.mapToColor(n, this.option.visual)), i
                                                    },
                                                    fixed: p
                                                }
                                            },
                                            colorHue: c(function(n, t) {
                                                return f.modifyHSL(n, t)
                                            }),
                                            colorSaturation: c(function(n, t) {
                                                return f.modifyHSL(n, null, t)
                                            }),
                                            colorLightness: c(function(n, t) {
                                                return f.modifyHSL(n, null, null, t)
                                            }),
                                            colorAlpha: c(function(n, t) {
                                                return f.modifyAlpha(n, t)
                                            }),
                                            opacity: {
                                                applyVisual: y("opacity"),
                                                _doMap: w([0, 1])
                                            },
                                            symbol: {
                                                applyVisual: function(n, t, i) {
                                                    var u = this.mapValueToVisual(n),
                                                        f;
                                                    if (r.isString(u)) i("symbol", u);
                                                    else if (k(u))
                                                        for (f in u) u.hasOwnProperty(f) && i(f, u[f])
                                                },
                                                _doMap: {
                                                    linear: d,
                                                    category: l,
                                                    piecewise: function(n, t) {
                                                        var i = b.call(this, t);
                                                        return i == null && (i = d.call(this, n)), i
                                                    },
                                                    fixed: p
                                                }
                                            },
                                            symbolSize: {
                                                applyVisual: y("symbolSize"),
                                                _doMap: w([0, 1])
                                            }
                                        };
                                        g = {
                                            linear: function(n) {
                                                return e(n, this.option.dataExtent, [0, 1], !0)
                                            },
                                            piecewise: function(n) {
                                                var t = this.option.pieceList,
                                                    i = u.findPieceIndex(n, t, !0);
                                                if (i != null) return e(i, [0, t.length - 1], [0, 1], !0)
                                            },
                                            category: function(n) {
                                                var t = this.option.categories ? this.option.categoryMap[n] : n;
                                                return t == null ? h : t
                                            },
                                            fixed: r.noop
                                        };
                                        u.addVisualHandler = function(n, t) {
                                            s[n] = t
                                        };
                                        u.isValidType = function(n) {
                                            return s.hasOwnProperty(n)
                                        };
                                        u.eachVisual = function(n, t, i) {
                                            r.isObject(n) ? r.each(n, t, i) : t.call(i, n)
                                        };
                                        u.mapVisual = function(n, t, i) {
                                            var e, f = r.isArray(n) ? [] : r.isObject(n) ? {} : (e = !0, null);
                                            return u.eachVisual(n, function(n, r) {
                                                var u = t.call(i, n, r);
                                                e ? f = u : f[r] = u
                                            }), f
                                        };
                                        u.retrieveVisuals = function(n) {
                                            var t = {},
                                                i;
                                            return n && o(s, function(r, u) {
                                                n.hasOwnProperty(u) && (t[u] = n[u], i = !0)
                                            }), i ? t : null
                                        };
                                        u.prepareVisualTypes = function(n) {
                                            if (k(n)) {
                                                var t = [];
                                                o(n, function(n, i) {
                                                    t.push(i)
                                                });
                                                n = t
                                            } else if (r.isArray(n)) n = n.slice();
                                            else return [];
                                            return n.sort(function(n, t) {
                                                return t === "color" && n !== "color" && n.indexOf("color") === 0 ? 1 : -1
                                            }), n
                                        };
                                        u.dependsOn = function(n, t) {
                                            return t === "color" ? !!(n && n.indexOf(t) === 0) : n === t
                                        };
                                        u.findPieceIndex = function(n, t, i) {
                                            function s(t, i) {
                                                var r = Math.abs(t - n);
                                                r < c && (c = r, h = i)
                                            }
                                            for (var f, h, c = Infinity, r = 0, o = t.length; r < o; r++)
                                                if (f = t[r].value, f != null) {
                                                    if (f === n) return r;
                                                    i && s(f, r)
                                                }
                                            for (r = 0, o = t.length; r < o; r++) {
                                                var l = t[r],
                                                    u = l.interval,
                                                    e = l.close;
                                                if (u) {
                                                    if (u[0] === -Infinity) {
                                                        if (a(e[1], n, u[1])) return r
                                                    } else if (u[1] === Infinity) {
                                                        if (a(e[0], u[0], n)) return r
                                                    } else if (a(e[0], u[0], n) && a(e[1], n, u[1])) return r;
                                                    i && s(u[0], r);
                                                    i && s(u[1], r)
                                                }
                                            }
                                            if (i) return n === Infinity ? t.length - 1 : n === -Infinity ? 0 : h
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function w(n, t, i) {
                                            var r = {
                                                mainType: "series",
                                                subType: "treemap",
                                                query: i
                                            };
                                            n.eachComponent(r, function(n) {
                                                var rt = t.getWidth(),
                                                    ut = t.getHeight(),
                                                    f = n.option,
                                                    ft = f.size || [],
                                                    et = c(l(f.width, ft[0]), rt),
                                                    ot = c(l(f.height, ft[1]), ut),
                                                    w = p.getLayoutRect(n.getBoxLayoutParams(), {
                                                        width: t.getWidth(),
                                                        height: t.getHeight()
                                                    }),
                                                    b = i && i.type,
                                                    st = s.retrieveTargetInfo(i, n),
                                                    k = b === "treemapRender" || b === "treemapMove" ? i.rootRect : null,
                                                    r = n.getViewRoot(),
                                                    g = s.getPathToRoot(r),
                                                    v, e, ht, d, nt;
                                                b !== "treemapMove" && (v = b === "treemapZoomToNode" ? tt(n, st, r, et, ot) : k ? [k.width, k.height] : [et, ot], e = f.sort, e && e !== "asc" && e !== "desc" && (e = "desc"), ht = {
                                                    squareRatio: f.squareRatio,
                                                    sort: e,
                                                    leafDepth: f.leafDepth
                                                }, r.hostTree.clearLayouts(), d = {
                                                    x: 0,
                                                    y: 0,
                                                    width: v[0],
                                                    height: v[1],
                                                    area: v[0] * v[1]
                                                }, r.setLayout(d), a(r, ht, !1, 0), d = r.getLayout(), o(g, function(n, t) {
                                                    var i = (g[t + 1] || r).getValue();
                                                    n.setLayout(u.extend({
                                                        dataExtent: [i, i],
                                                        borderWidth: 0
                                                    }, d))
                                                }));
                                                nt = n.getData().tree.root;
                                                nt.setLayout(it(w, k, st), !0);
                                                n.setLayoutInfo(w);
                                                y(nt, new h(-w.x, -w.y, rt, ut), g, r, 0)
                                            })
                                        }

                                        function a(n, t, i, u) {
                                            var s, h, k, g, c, it, rt, ut, o, w;
                                            if (!n.isRemoved()) {
                                                k = n.getLayout();
                                                s = k.width;
                                                h = k.height;
                                                var ft = n.getModel("itemStyle.normal"),
                                                    et = ft.get("borderWidth"),
                                                    d = ft.get("gapWidth") / 2,
                                                    l = et - d,
                                                    ot = n.getModel();
                                                if (n.setLayout({
                                                        borderWidth: et
                                                    }, !0), s = r(s - 2 * l, 0), h = r(h - 2 * l, 0), g = s * h, c = b(n, ot, g, t, i, u), c.length) {
                                                    var y = {
                                                            x: l,
                                                            y: l,
                                                            width: s,
                                                            height: h
                                                        },
                                                        p = f(s, h),
                                                        tt = Infinity,
                                                        e = [];
                                                    for (e.area = 0, o = 0, w = c.length; o < w;) it = c[o], e.push(it), e.area += it.getLayout().area, rt = nt(e, p, t.squareRatio), rt <= tt ? (o++, tt = rt) : (e.area -= e.pop().getLayout().area, v(e, p, y, d, !1), p = f(y.width, y.height), e.length = e.area = 0, tt = Infinity);
                                                    for (e.length && v(e, p, y, d, !0), i || (ut = ot.get("childrenVisibleMin"), ut != null && g < ut && (i = !0)), o = 0, w = c.length; o < w; o++) a(c[o], t, i, u + 1)
                                                }
                                            }
                                        }

                                        function b(n, t, i, r, f, e) {
                                            var o = n.children || [],
                                                h = r.sort,
                                                l, s, c, a, v;
                                            if (h !== "asc" && h !== "desc" && (h = null), l = r.leafDepth != null && r.leafDepth <= e, f && !l) return n.viewChildren = [];
                                            if (o = u.filter(o, function(n) {
                                                    return !n.isRemoved()
                                                }), d(o, h), s = g(t, o, h), s.sum === 0) return n.viewChildren = [];
                                            if (s.sum = k(t, i, s.sum, h, o), s.sum === 0) return n.viewChildren = [];
                                            for (c = 0, a = o.length; c < a; c++) v = o[c].getValue() / s.sum * i, o[c].setLayout({
                                                area: v
                                            });
                                            return l && (o.length && n.setLayout({
                                                isLeafRoot: !0
                                            }, !0), o.length = 0), n.viewChildren = o, n.setLayout({
                                                dataExtent: s.dataExtent
                                            }, !0), o
                                        }

                                        function k(n, t, i, r, u) {
                                            var f, s;
                                            if (!r) return i;
                                            var h = n.get("visibleMin"),
                                                e = u.length,
                                                o = e;
                                            for (f = e - 1; f >= 0; f--) s = u[r === "asc" ? e - f - 1 : f].getValue(), s / i * t < h && (o = f, i -= s);
                                            return r === "asc" ? u.splice(0, e - o) : u.splice(o, e - o), i
                                        }

                                        function d(n, t) {
                                            return t && n.sort(function(n, i) {
                                                return t === "asc" ? n.getValue() - i.getValue() : i.getValue() - n.getValue()
                                            }), n
                                        }

                                        function g(n, t, i) {
                                            for (var f, r, e = 0, u = 0, s = t.length; u < s; u++) e += t[u].getValue();
                                            return f = n.get("visualDimension"), t && t.length ? f === "value" && i ? (r = [t[t.length - 1].getValue(), t[0].getValue()], i === "asc" && r.reverse()) : (r = [Infinity, -Infinity], o(t, function(n) {
                                                var t = n.getValue(f);
                                                t < r[0] && (r[0] = t);
                                                t > r[1] && (r[1] = t)
                                            })) : r = [NaN, NaN], {
                                                sum: e,
                                                dataExtent: r
                                            }
                                        }

                                        function nt(n, t, i) {
                                            for (var f, h, e = 0, o = Infinity, s = 0, u, c = n.length; s < c; s++) u = n[s].getLayout().area, u && (u < o && (o = u), u > e && (e = u));
                                            return f = n.area * n.area, h = t * t * i, f ? r(h * e / f, f / (h * o)) : Infinity
                                        }

                                        function v(n, t, i, u, e) {
                                            var h = t === i.width ? 0 : 1,
                                                o = 1 - h,
                                                c = ["x", "y"],
                                                l = ["width", "height"],
                                                y = i[c[h]],
                                                s = t ? n.area / t : 0,
                                                a, p;
                                            for ((e || s > i[l[o]]) && (s = i[l[o]]), a = 0, p = n.length; a < p; a++) {
                                                var w = n[a],
                                                    v = {},
                                                    b = s ? w.getLayout().area / s : 0,
                                                    g = v[l[o]] = r(s - 2 * u, 0),
                                                    k = i[c[h]] + i[l[h]] - y,
                                                    d = a === p - 1 || k < b ? k : b,
                                                    nt = v[l[h]] = r(d - 2 * u, 0);
                                                v[c[o]] = i[c[o]] + f(u, g / 2);
                                                v[c[h]] = y + f(u, nt / 2);
                                                y += d;
                                                w.setLayout(v, !0)
                                            }
                                            i[c[o]] += s;
                                            i[l[o]] -= s
                                        }

                                        function tt(n, t, i, r, u) {
                                            var o = (t || {}).node,
                                                w = [r, u],
                                                c, s, f, a, v, l, b, y, h, p;
                                            if (!o || o === i) return w;
                                            for (s = r * u, f = s * n.option.zoomToNodeRatio; c = o.parentNode;) {
                                                for (a = 0, v = c.children, l = 0, b = v.length; l < b; l++) a += v[l].getValue();
                                                if (y = o.getValue(), y === 0) return w;
                                                f *= a / y;
                                                h = c.getModel("itemStyle.normal").get("borderWidth");
                                                isFinite(h) && (f += 4 * h * h + 4 * h * Math.pow(f, .5));
                                                f > e.MAX_SAFE_INTEGER && (f = e.MAX_SAFE_INTEGER);
                                                o = c
                                            }
                                            return f < s && (f = s), p = Math.pow(f / s, .5), [r * p, u * p]
                                        }

                                        function it(n, t, i) {
                                            var s, e, f, r, u, o;
                                            if (t) return {
                                                x: t.x,
                                                y: t.y
                                            };
                                            if ((s = {
                                                    x: 0,
                                                    y: 0
                                                }, !i) || (e = i.node, f = e.getLayout(), !f)) return s;
                                            for (r = [f.width / 2, f.height / 2], u = e; u;) o = u.getLayout(), r[0] += o.x, r[1] += o.y, u = u.parentNode;
                                            return {
                                                x: n.width / 2 - r[0],
                                                y: n.height / 2 - r[1]
                                            }
                                        }

                                        function y(n, t, i, r, u) {
                                            var f = n.getLayout(),
                                                e = i[u],
                                                s = e && e === n,
                                                c;
                                            (!e || s) && (u !== i.length || n === r) && (n.setLayout({
                                                isInView: !0,
                                                invisible: !s && !t.intersect(f),
                                                isAboveViewRoot: s
                                            }, !0), c = new h(t.x - f.x, t.y - f.y, t.width, t.height), o(n.viewChildren || [], function(n) {
                                                y(n, c, i, r, u + 1)
                                            }))
                                        }
                                        var u = i(4),
                                            e = i(7),
                                            p = i(21),
                                            s = i(187),
                                            h = i(9),
                                            s = i(187),
                                            r = Math.max,
                                            f = Math.min,
                                            c = e.parsePercent,
                                            l = u.retrieve,
                                            o = u.each;
                                        n.exports = w
                                    }, function(n, t, i) {
                                        var r = i(1),
                                            u = i(4);
                                        i(196);
                                        i(199);
                                        i(204);
                                        r.registerProcessor(i(205));
                                        r.registerVisual(u.curry(i(109), "graph", "circle", null));
                                        r.registerVisual(i(206));
                                        r.registerVisual(i(207));
                                        r.registerLayout(i(208));
                                        r.registerLayout(i(211));
                                        r.registerLayout(i(213));
                                        r.registerCoordinateSystem("graphView", {
                                            create: i(215)
                                        })
                                    }, function(n, t, i) {
                                        "use strict";
                                        var e = i(97),
                                            u = i(4),
                                            f = i(5),
                                            o = i(12),
                                            s = i(197),
                                            r = i(1).extendSeriesModel({
                                                type: "series.graph",
                                                init: function(n) {
                                                    r.superApply(this, "init", arguments);
                                                    this.legendDataProvider = function() {
                                                        return this._categoriesData
                                                    };
                                                    this.fillDataTextStyle(n.edges || n.links);
                                                    this._updateCategoriesData()
                                                },
                                                mergeOption: function(n) {
                                                    r.superApply(this, "mergeOption", arguments);
                                                    this.fillDataTextStyle(n.edges || n.links);
                                                    this._updateCategoriesData()
                                                },
                                                mergeDefaultAndTheme: function(n) {
                                                    r.superApply(this, "mergeDefaultAndTheme", arguments);
                                                    f.defaultEmphasis(n.edgeLabel, f.LABEL_OPTIONS)
                                                },
                                                getInitialData: function(n) {
                                                    function u(n, t) {
                                                        n.wrapMethod("getItemModel", function(n) {
                                                            var i = r._categoriesModels,
                                                                u = n.getShallow("category"),
                                                                t = i[u];
                                                            return t && (t.parentModel = n.parentModel, n.parentModel = t), n
                                                        });
                                                        var u = r.getModel("edgeLabel"),
                                                            i = function(n, t) {
                                                                var r = (n || "").split("."),
                                                                    f;
                                                                return r[0] === "label" && (t = t || u.getModel(r.slice(1))), f = o.prototype.getModel.call(this, r, t), f.getModel = i, f
                                                            };
                                                        t.wrapMethod("getItemModel", function(n) {
                                                            return n.getModel = i, n
                                                        })
                                                    }
                                                    var t = n.edges || n.links || [],
                                                        i = n.data || n.nodes || [],
                                                        r = this;
                                                    if (i && t) return s(i, t, this, !0, u).data
                                                },
                                                getGraph: function() {
                                                    return this.getData().graph
                                                },
                                                getEdgeData: function() {
                                                    return this.getGraph().edgeData
                                                },
                                                getCategoriesData: function() {
                                                    return this._categoriesData
                                                },
                                                formatTooltip: function(n, t, i) {
                                                    if (i === "edge") {
                                                        var u = this.getData(),
                                                            f = this.getDataParams(n, i),
                                                            e = u.graph.getEdgeByIndex(n),
                                                            s = u.getName(e.node1.dataIndex),
                                                            h = u.getName(e.node2.dataIndex),
                                                            o = s + " > " + h;
                                                        return f.value && (o += " : " + f.value), o
                                                    }
                                                    return r.superApply(this, "formatTooltip", arguments)
                                                },
                                                _updateCategoriesData: function() {
                                                    var t = u.map(this.option.categories || [], function(n) {
                                                            return n.value != null ? n : u.extend({
                                                                value: 0
                                                            }, n)
                                                        }),
                                                        n = new e(["value"], this);
                                                    n.initData(t);
                                                    this._categoriesData = n;
                                                    this._categoriesModels = n.mapArray(function(t) {
                                                        return n.getItemModel(t, !0)
                                                    })
                                                },
                                                setZoom: function(n) {
                                                    this.option.zoom = n
                                                },
                                                setCenter: function(n) {
                                                    this.option.center = n
                                                },
                                                ifEnableAnimation: function() {
                                                    return r.superCall(this, "ifEnableAnimation") && !(this.get("layout") === "force" && this.get("force.layoutAnimation"))
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "view",
                                                    legendHoverLink: !0,
                                                    hoverAnimation: !0,
                                                    layout: null,
                                                    focusNodeAdjacency: !1,
                                                    circular: {
                                                        rotateLabel: !1
                                                    },
                                                    force: {
                                                        initLayout: null,
                                                        repulsion: [0, 50],
                                                        gravity: .1,
                                                        edgeLength: 30,
                                                        layoutAnimation: !0
                                                    },
                                                    left: "center",
                                                    top: "center",
                                                    symbol: "circle",
                                                    symbolSize: 10,
                                                    edgeSymbol: ["none", "none"],
                                                    edgeSymbolSize: 10,
                                                    edgeLabel: {
                                                        normal: {
                                                            position: "middle"
                                                        },
                                                        emphasis: {}
                                                    },
                                                    draggable: !1,
                                                    roam: !1,
                                                    center: null,
                                                    zoom: 1,
                                                    nodeScaleRatio: .6,
                                                    label: {
                                                        normal: {
                                                            show: !1,
                                                            formatter: "{b}"
                                                        },
                                                        emphasis: {
                                                            show: !0
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {},
                                                        emphasis: {}
                                                    },
                                                    lineStyle: {
                                                        normal: {
                                                            color: "#aaa",
                                                            width: 1,
                                                            curveness: 0,
                                                            opacity: .5
                                                        },
                                                        emphasis: {}
                                                    }
                                                }
                                            });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var r = i(97),
                                            f = i(198),
                                            e = i(186),
                                            o = i(102),
                                            s = i(26),
                                            u = i(4),
                                            h = i(101);
                                        n.exports = function(n, t, i, c, l) {
                                            for (var w, v, b, rt, k, y = new f(c), a = 0; a < n.length; a++) y.addNode(u.retrieve(n[a].id, n[a].name, a), a);
                                            var d = [],
                                                g = [],
                                                nt = 0;
                                            for (a = 0; a < t.length; a++) {
                                                var p = t[a],
                                                    tt = p.source,
                                                    it = p.target;
                                                y.addEdge(tt, it, nt) && (g.push(p), d.push(u.retrieve(p.id, tt + " > " + it)), nt++)
                                            }
                                            return w = i.get("coordinateSystem"), w === "cartesian2d" || w === "polar" ? v = h(n, i, i.ecModel) : (b = s.get(w), rt = o((b && b.type !== "view" ? b.dimensions || [] : []).concat(["value"]), n), v = new r(rt, i), v.initData(n)), k = new r(["value"], i), k.initData(g, d), l && l(v, k), e({
                                                mainData: v,
                                                struct: y,
                                                structAttr: "graph",
                                                datas: {
                                                    node: v,
                                                    edge: k
                                                },
                                                datasAttr: {
                                                    node: "data",
                                                    edge: "edgeData"
                                                }
                                            }), y.update(), y
                                        }
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n, t) {
                                            this.id = n == null ? "" : n;
                                            this.inEdges = [];
                                            this.outEdges = [];
                                            this.edges = [];
                                            this.hostGraph;
                                            this.dataIndex = t == null ? -1 : t
                                        }

                                        function e(n, t, i) {
                                            this.node1 = n;
                                            this.node2 = t;
                                            this.dataIndex = i == null ? -1 : i
                                        }
                                        var s = i(4),
                                            f = function(n) {
                                                this._directed = n || !1;
                                                this.nodes = [];
                                                this.edges = [];
                                                this._nodesMap = {};
                                                this._edgesMap = {};
                                                this.data;
                                                this.edgeData
                                            },
                                            r = f.prototype,
                                            o;
                                        r.type = "graph";
                                        r.isDirected = function() {
                                            return this._directed
                                        };
                                        r.addNode = function(n, t) {
                                            var r, i;
                                            if (n = n || "" + t, r = this._nodesMap, !r[n]) return i = new u(n, t), i.hostGraph = this, this.nodes.push(i), r[n] = i, i
                                        };
                                        r.getNodeByIndex = function(n) {
                                            var t = this.data.getRawIndex(n);
                                            return this.nodes[t]
                                        };
                                        r.getNodeById = function(n) {
                                            return this._nodesMap[n]
                                        };
                                        r.addEdge = function(n, t, i) {
                                            var o = this._nodesMap,
                                                s = this._edgesMap,
                                                f, r;
                                            if (typeof n == "number" && (n = this.nodes[n]), typeof t == "number" && (t = this.nodes[t]), n instanceof u || (n = o[n]), t instanceof u || (t = o[t]), n && t) return (f = n.id + "-" + t.id, s[f]) ? void 0 : (r = new e(n, t, i), r.hostGraph = this, this._directed && (n.outEdges.push(r), t.inEdges.push(r)), n.edges.push(r), n !== t && t.edges.push(r), this.edges.push(r), s[f] = r, r)
                                        };
                                        r.getEdgeByIndex = function(n) {
                                            var t = this.edgeData.getRawIndex(n);
                                            return this.edges[t]
                                        };
                                        r.getEdge = function(n, t) {
                                            n instanceof u && (n = n.id);
                                            t instanceof u && (t = t.id);
                                            var i = this._edgesMap;
                                            return this._directed ? i[n + "-" + t] : i[n + "-" + t] || i[t + "-" + n]
                                        };
                                        r.eachNode = function(n, t) {
                                            for (var r = this.nodes, u = r.length, i = 0; i < u; i++) r[i].dataIndex >= 0 && n.call(t, r[i], i)
                                        };
                                        r.eachEdge = function(n, t) {
                                            for (var r = this.edges, u = r.length, i = 0; i < u; i++) r[i].dataIndex >= 0 && r[i].node1.dataIndex >= 0 && r[i].node2.dataIndex >= 0 && n.call(t, r[i], i)
                                        };
                                        r.breadthFirstTraverse = function(n, t, i, r) {
                                            var l, o, s, c, f, h, e;
                                            if (t instanceof u || (t = this._nodesMap[t]), t) {
                                                for (l = i === "out" ? "outEdges" : i === "in" ? "inEdges" : "edges", f = 0; f < this.nodes.length; f++) this.nodes[f].__visited = !1;
                                                if (!n.call(r, t, null))
                                                    for (o = [t]; o.length;)
                                                        for (s = o.shift(), c = s[l], f = 0; f < c.length; f++)
                                                            if (h = c[f], e = h.node1 === s ? h.node2 : h.node1, !e.__visited) {
                                                                if (n.call(e, e, s)) return;
                                                                o.push(e);
                                                                e.__visited = !0
                                                            }
                                            }
                                        };
                                        r.update = function() {
                                            for (var f = this.data, i = this.edgeData, u = this.nodes, r = this.edges, n = 0, t = u.length; n < t; n++) u[n].dataIndex = -1;
                                            for (n = 0, t = f.count(); n < t; n++) u[f.getRawIndex(n)].dataIndex = n;
                                            for (i.filterSelf(function(n) {
                                                    var t = r[i.getRawIndex(n)];
                                                    return t.node1.dataIndex >= 0 && t.node2.dataIndex >= 0
                                                }), n = 0, t = r.length; n < t; n++) r[n].dataIndex = -1;
                                            for (n = 0, t = i.count(); n < t; n++) r[i.getRawIndex(n)].dataIndex = n
                                        };
                                        r.clone = function() {
                                            for (var t, i = new f(this._directed), r = this.nodes, u = this.edges, n = 0; n < r.length; n++) i.addNode(r[n].id, r[n].dataIndex);
                                            for (n = 0; n < u.length; n++) t = u[n], i.addEdge(t.node1.id, t.node2.id, t.dataIndex);
                                            return i
                                        };
                                        u.prototype = {
                                            constructor: u,
                                            degree: function() {
                                                return this.edges.length
                                            },
                                            inDegree: function() {
                                                return this.inEdges.length
                                            },
                                            outDegree: function() {
                                                return this.outEdges.length
                                            },
                                            getModel: function(n) {
                                                if (!(this.dataIndex < 0)) {
                                                    var t = this.hostGraph,
                                                        i = t.data.getItemModel(this.dataIndex);
                                                    return i.getModel(n)
                                                }
                                            }
                                        };
                                        e.prototype.getModel = function(n) {
                                            if (!(this.dataIndex < 0)) {
                                                var t = this.hostGraph,
                                                    i = t.edgeData.getItemModel(this.dataIndex);
                                                return i.getModel(n)
                                            }
                                        };
                                        o = function(n, t) {
                                            return {
                                                getValue: function(i) {
                                                    var r = this[n][t];
                                                    return r.get(r.getDimension(i || "value"), this.dataIndex)
                                                },
                                                setVisual: function(i, r) {
                                                    this.dataIndex >= 0 && this[n][t].setItemVisual(this.dataIndex, i, r)
                                                },
                                                getVisual: function(i, r) {
                                                    return this[n][t].getItemVisual(this.dataIndex, i, r)
                                                },
                                                setLayout: function(i, r) {
                                                    this.dataIndex >= 0 && this[n][t].setItemLayout(this.dataIndex, i, r)
                                                },
                                                getLayout: function() {
                                                    return this[n][t].getItemLayout(this.dataIndex)
                                                },
                                                getGraphicEl: function() {
                                                    return this[n][t].getItemGraphicEl(this.dataIndex)
                                                },
                                                getRawIndex: function() {
                                                    return this[n][t].getRawIndex(this.dataIndex)
                                                }
                                            }
                                        };
                                        s.mixin(u, o("hostGraph", "data"));
                                        s.mixin(e, o("hostGraph", "edgeData"));
                                        f.Node = u;
                                        f.Edge = e;
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function u(n, t) {
                                            return n.getVisual("opacity") || n.getModel().get(t)
                                        }
                                        var o = i(104),
                                            s = i(200),
                                            h = i(175),
                                            c = i(43),
                                            f = i(203),
                                            l = i(4),
                                            r = ["itemStyle", "normal", "opacity"],
                                            e = ["lineStyle", "normal", "opacity"];
                                        i(1).extendChartView({
                                            type: "graph",
                                            init: function(n, t) {
                                                var r = new o,
                                                    u = new s,
                                                    i = this.group,
                                                    f = new h(t.getZr(), i);
                                                i.add(r.group);
                                                i.add(u.group);
                                                this._symbolDraw = r;
                                                this._lineDraw = u;
                                                this._controller = f;
                                                this._firstRender = !0
                                            },
                                            render: function(n, t, i) {
                                                var e = n.coordinateSystem,
                                                    o, r, l, u, s;
                                                this._model = n;
                                                this._nodeScaleRatio = n.get("nodeScaleRatio");
                                                var v = this._symbolDraw,
                                                    y = this._lineDraw,
                                                    h = this.group;
                                                e.type === "view" && (o = {
                                                    position: e.position,
                                                    scale: e.scale
                                                }, this._firstRender ? h.attr(o) : c.updateProps(h, o, n));
                                                f(n.getGraph(), this._getNodeGlobalScale(n));
                                                r = n.getData();
                                                v.updateData(r);
                                                l = n.getEdgeData();
                                                y.updateData(l);
                                                this._updateNodeAndLinkScale();
                                                this._updateController(n, i);
                                                clearTimeout(this._layoutTimeout);
                                                u = n.forceLayout;
                                                s = n.get("force.layoutAnimation");
                                                u && this._startForceLayoutIteration(u, s);
                                                r.eachItemGraphicEl(function(n, t) {
                                                    var f = r.getItemModel(t),
                                                        i;
                                                    if (n.off("drag").off("dragend"), i = r.getItemModel(t).get("draggable"), i) n.on("drag", function() {
                                                        u && (u.warmUp(), this._layouting || this._startForceLayoutIteration(u, s), u.setFixed(t), r.setItemLayout(t, n.position))
                                                    }, this).on("dragend", function() {
                                                        u && u.setUnfixed(t)
                                                    }, this);
                                                    if (n.setDraggable(i && u), n.off("mouseover", this._focusNodeAdjacency), n.off("mouseout", this._unfocusAll), f.get("focusNodeAdjacency")) {
                                                        n.on("mouseover", this._focusNodeAdjacency, this);
                                                        n.on("mouseout", this._unfocusAll, this)
                                                    }
                                                }, this);
                                                var p = n.get("layout") === "circular" && n.get("circular.rotateLabel"),
                                                    a = r.getLayout("cx"),
                                                    w = r.getLayout("cy");
                                                r.eachItemGraphicEl(function(n, t) {
                                                    var u = n.getSymbolPath(),
                                                        f, i, e, o;
                                                    p ? (f = r.getItemLayout(t), i = Math.atan2(f[1] - w, f[0] - a), i < 0 && (i = Math.PI * 2 + i), e = f[0] < a, e && (i = i - Math.PI), o = e ? "left" : "right", u.setStyle({
                                                        textRotation: i,
                                                        textPosition: o
                                                    }), u.hoverStyle && (u.hoverStyle.textPosition = o)) : u.setStyle({
                                                        textRotation: 0
                                                    })
                                                });
                                                this._firstRender = !1
                                            },
                                            dispose: function() {
                                                this._controller && this._controller.dispose()
                                            },
                                            _focusNodeAdjacency: function(n) {
                                                function h(n, t) {
                                                    var i = u(n, t),
                                                        r = n.getGraphicEl();
                                                    i == null && (i = 1);
                                                    r.traverse(function(n) {
                                                        n.trigger("normal");
                                                        n.type !== "group" && n.setStyle("opacity", i * .1)
                                                    })
                                                }

                                                function t(n, t) {
                                                    var i = u(n, t),
                                                        r = n.getGraphicEl();
                                                    r.traverse(function(n) {
                                                        n.trigger("emphasis");
                                                        n.type !== "group" && n.setStyle("opacity", i)
                                                    })
                                                }
                                                var c = this._model.getData(),
                                                    i = c.graph,
                                                    o = n.target,
                                                    s = o.dataIndex,
                                                    a = o.dataType,
                                                    f;
                                                s !== null && a !== "edge" && (i.eachNode(function(n) {
                                                    h(n, r)
                                                }), i.eachEdge(function(n) {
                                                    h(n, e)
                                                }), f = i.getNodeByIndex(s), t(f, r), l.each(f.edges, function(n) {
                                                    n.dataIndex < 0 || (t(n, e), t(n.node1, r), t(n.node2, r))
                                                }))
                                            },
                                            _unfocusAll: function() {
                                                var t = this._model.getData(),
                                                    n = t.graph;
                                                n.eachNode(function(n) {
                                                    var t = u(n, r);
                                                    n.getGraphicEl().traverse(function(n) {
                                                        n.trigger("normal");
                                                        n.type !== "group" && n.setStyle("opacity", t)
                                                    })
                                                });
                                                n.eachEdge(function(n) {
                                                    var t = u(n, e);
                                                    n.getGraphicEl().traverse(function(n) {
                                                        n.trigger("normal");
                                                        n.type !== "group" && n.setStyle("opacity", t)
                                                    })
                                                })
                                            },
                                            _startForceLayoutIteration: function(n, t) {
                                                var i = this;
                                                (function r() {
                                                    n.step(function(n) {
                                                        i.updateLayout(i._model);
                                                        (i._layouting = !n) && (t ? i._layoutTimeout = setTimeout(r, 16) : r())
                                                    })
                                                })()
                                            },
                                            _updateController: function(n, t) {
                                                var i = this._controller,
                                                    r = this.group;
                                                if (i.setContainsPoint(function(n, t) {
                                                        var i = r.getBoundingRect();
                                                        return i.applyTransform(r.transform), i.contain(n, t)
                                                    }), n.coordinateSystem.type !== "view") {
                                                    i.disable();
                                                    return
                                                }
                                                i.enable(n.get("roam"));
                                                i.zoomLimit = n.get("scaleLimit");
                                                i.zoom = n.coordinateSystem.getZoom();
                                                i.off("pan").off("zoom").on("pan", function(i, r) {
                                                    t.dispatchAction({
                                                        seriesId: n.id,
                                                        type: "graphRoam",
                                                        dx: i,
                                                        dy: r
                                                    })
                                                }).on("zoom", function(i, r, u) {
                                                    t.dispatchAction({
                                                        seriesId: n.id,
                                                        type: "graphRoam",
                                                        zoom: i,
                                                        originX: r,
                                                        originY: u
                                                    });
                                                    this._updateNodeAndLinkScale();
                                                    f(n.getGraph(), this._getNodeGlobalScale(n));
                                                    this._lineDraw.updateLayout()
                                                }, this)
                                            },
                                            _updateNodeAndLinkScale: function() {
                                                var n = this._model,
                                                    i = n.getData(),
                                                    t = this._getNodeGlobalScale(n),
                                                    r = [t, t];
                                                i.eachItemGraphicEl(function(n) {
                                                    n.attr("scale", r)
                                                })
                                            },
                                            _getNodeGlobalScale: function(n) {
                                                var t = n.coordinateSystem;
                                                if (t.type !== "view") return 1;
                                                var r = this._nodeScaleRatio,
                                                    i = t.scale,
                                                    u = i && i[0] || 1,
                                                    f = t.getZoom(),
                                                    e = (f - 1) * r + 1;
                                                return e / u
                                            },
                                            updateLayout: function(n) {
                                                f(n.getGraph(), this._getNodeGlobalScale(n));
                                                this._symbolDraw.updateLayout();
                                                this._lineDraw.updateLayout()
                                            },
                                            remove: function() {
                                                this._symbolDraw && this._symbolDraw.remove();
                                                this._lineDraw && this._lineDraw.remove()
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function u(n) {
                                            return isNaN(n[0]) || isNaN(n[1])
                                        }

                                        function f(n) {
                                            return !u(n[0]) && !u(n[1])
                                        }

                                        function e(n) {
                                            this._ctor = n || s;
                                            this.group = new o.Group
                                        }
                                        var o = i(43),
                                            s = i(201),
                                            r = e.prototype;
                                        r.updateData = function(n) {
                                            var r = this._lineData,
                                                t = this.group,
                                                e = this._ctor,
                                                i = n.hostModel,
                                                u = {
                                                    lineStyle: i.getModel("lineStyle.normal").getLineStyle(),
                                                    hoverLineStyle: i.getModel("lineStyle.emphasis").getLineStyle(),
                                                    labelModel: i.getModel("label.normal"),
                                                    hoverLabelModel: i.getModel("label.emphasis")
                                                };
                                            n.diff(r).add(function(i) {
                                                if (f(n.getItemLayout(i))) {
                                                    var r = new e(n, i, u);
                                                    n.setItemGraphicEl(i, r);
                                                    t.add(r)
                                                }
                                            }).update(function(i, o) {
                                                var s = r.getItemGraphicEl(o);
                                                if (!f(n.getItemLayout(i))) {
                                                    t.remove(s);
                                                    return
                                                }
                                                s ? s.updateData(n, i, u) : s = new e(n, i, u);
                                                n.setItemGraphicEl(i, s);
                                                t.add(s)
                                            }).remove(function(n) {
                                                t.remove(r.getItemGraphicEl(n))
                                            }).execute();
                                            this._lineData = n
                                        };
                                        r.updateLayout = function() {
                                            var n = this._lineData;
                                            n.eachItemGraphicEl(function(t, i) {
                                                t.updateLayout(n, i)
                                            }, this)
                                        };
                                        r.remove = function() {
                                            this.group.removeAll()
                                        };
                                        n.exports = e
                                    }, function(n, t, i) {
                                        function c(n) {
                                            return "_" + n + "Type"
                                        }

                                        function l(n, t, i) {
                                            var o = t.getItemVisual(i, "color"),
                                                f = t.getItemVisual(i, n),
                                                u = t.getItemVisual(i, n + "Size"),
                                                e;
                                            if (f && f !== "none") return r.isArray(u) || (u = [u, u]), e = a.createSymbol(f, -u[0] / 2, -u[1] / 2, u[0], u[1], o), e.name = n, e
                                        }

                                        function p(n) {
                                            var t = new v({
                                                name: "line"
                                            });
                                            return o(t.shape, n), t
                                        }

                                        function o(n, t) {
                                            var r = t[0],
                                                u = t[1],
                                                i = t[2];
                                            n.x1 = r[0];
                                            n.y1 = r[1];
                                            n.x2 = u[0];
                                            n.y2 = u[1];
                                            n.percent = 1;
                                            i ? (n.cpx1 = i[0], n.cpy1 = i[1]) : (n.cpx1 = NaN, n.cpy1 = NaN)
                                        }

                                        function w() {
                                            var y = this,
                                                l = y.childOfName("fromSymbol"),
                                                a = y.childOfName("toSymbol"),
                                                i = y.childOfName("label"),
                                                r, o, u, t, p, w, b, f, k;
                                            if (l || a || !i.ignore) {
                                                for (r = 1, o = this.parent; o;) o.scale && (r /= o.scale[0]), o = o.parent;
                                                if (u = y.childOfName("line"), this.__dirty || u.__dirty) {
                                                    var s = u.shape.percent,
                                                        v = u.pointAt(0),
                                                        c = u.pointAt(s),
                                                        n = h.sub([], c, v);
                                                    if (h.normalize(n, n), l && (l.attr("position", v), t = u.tangentAt(0), l.attr("rotation", Math.PI / 2 - Math.atan2(t[1], t[0])), l.attr("scale", [r * s, r * s])), a && (a.attr("position", c), t = u.tangentAt(1), a.attr("rotation", -Math.PI / 2 - Math.atan2(t[1], t[0])), a.attr("scale", [r * s, r * s])), !i.ignore) {
                                                        if (i.attr("position", c), f = 5 * r, i.__position === "end") p = [n[0] * f + c[0], n[1] * f + c[1]], w = n[0] > .8 ? "left" : n[0] < -.8 ? "right" : "center", b = n[1] > .8 ? "top" : n[1] < -.8 ? "bottom" : "middle";
                                                        else if (i.__position === "middle") {
                                                            var d = s / 2,
                                                                t = u.tangentAt(d),
                                                                e = [t[1], -t[0]],
                                                                g = u.pointAt(d);
                                                            e[1] > 0 && (e[0] = -e[0], e[1] = -e[1]);
                                                            p = [g[0] + e[0] * f, g[1] + e[1] * f];
                                                            w = "center";
                                                            b = "bottom";
                                                            k = -Math.atan2(t[1], t[0]);
                                                            c[0] < v[0] && (k = Math.PI + k);
                                                            i.attr("rotation", k)
                                                        } else p = [-n[0] * f + v[0], -n[1] * f + v[1]], w = n[0] > .8 ? "right" : n[0] < -.8 ? "left" : "center", b = n[1] > .8 ? "bottom" : n[1] < -.8 ? "top" : "middle";
                                                        i.attr({
                                                            style: {
                                                                textVerticalAlign: i.__verticalAlign || b,
                                                                textAlign: i.__textAlign || w
                                                            },
                                                            position: p,
                                                            scale: [r, r]
                                                        })
                                                    }
                                                }
                                            }
                                        }

                                        function s(n, t, i) {
                                            u.Group.call(this);
                                            this._createLine(n, t, i)
                                        }
                                        var a = i(106),
                                            h = i(10),
                                            v = i(202),
                                            u = i(43),
                                            r = i(4),
                                            y = i(7),
                                            e = ["fromSymbol", "toSymbol"],
                                            f = s.prototype;
                                        f.beforeUpdate = w;
                                        f._createLine = function(n, t, i) {
                                            var s = n.hostModel,
                                                h = n.getItemLayout(t),
                                                f = p(h),
                                                o;
                                            f.shape.percent = 0;
                                            u.initProps(f, {
                                                shape: {
                                                    percent: 1
                                                }
                                            }, s, t);
                                            this.add(f);
                                            o = new u.Text({
                                                name: "label"
                                            });
                                            this.add(o);
                                            r.each(e, function(i) {
                                                var r = l(i, n, t);
                                                this.add(r);
                                                this[c(i)] = n.getItemVisual(t, i)
                                            }, this);
                                            this._updateCommonStl(n, t, i)
                                        };
                                        f.updateData = function(n, t, i) {
                                            var s = n.hostModel,
                                                h = this.childOfName("line"),
                                                a = n.getItemLayout(t),
                                                f = {
                                                    shape: {}
                                                };
                                            o(f.shape, a);
                                            u.updateProps(h, f, s, t);
                                            r.each(e, function(i) {
                                                var r = n.getItemVisual(t, i),
                                                    u = c(i),
                                                    f;
                                                this[u] !== r && (this.remove(this.childOfName(i)), f = l(i, n, t), this.add(f));
                                                this[u] = r
                                            }, this);
                                            this._updateCommonStl(n, t, i)
                                        };
                                        f._updateCommonStl = function(n, t, i) {
                                            var v = n.hostModel,
                                                tt = this.childOfName("line"),
                                                p = i && i.lineStyle,
                                                it = i && i.hoverLineStyle,
                                                c = i && i.labelModel,
                                                w = i && i.hoverLabelModel,
                                                o, l, b, s, h, nt;
                                            (!i || n.hasItemOption) && (o = n.getItemModel(t), p = o.getModel("lineStyle.normal").getLineStyle(), it = o.getModel("lineStyle.emphasis").getLineStyle(), c = o.getModel("label.normal"), w = o.getModel("label.emphasis"));
                                            l = n.getItemVisual(t, "color");
                                            b = r.retrieve(n.getItemVisual(t, "opacity"), p.opacity, 1);
                                            tt.useStyle(r.defaults({
                                                strokeNoScale: !0,
                                                fill: "none",
                                                stroke: l,
                                                opacity: b
                                            }, p));
                                            tt.hoverStyle = it;
                                            r.each(e, function(n) {
                                                var t = this.childOfName(n);
                                                t && (t.setColor(l), t.setStyle({
                                                    opacity: b
                                                }))
                                            }, this);
                                            var k = c.getShallow("show"),
                                                d = w.getShallow("show"),
                                                f = this.childOfName("label"),
                                                g, a;
                                            (k || d) && (s = v.getRawValue(t), a = s == null ? a = n.getName(t) : isFinite(s) ? y.round(s) : s, g = l || "#000");
                                            k ? (h = c.getModel("textStyle"), f.setStyle({
                                                text: r.retrieve(v.getFormattedLabel(t, "normal", n.dataType), a),
                                                textFont: h.getFont(),
                                                fill: h.getTextColor() || g
                                            }), f.__textAlign = h.get("align"), f.__verticalAlign = h.get("baseline"), f.__position = c.get("position")) : f.setStyle("text", "");
                                            d ? (nt = w.getModel("textStyle"), f.hoverStyle = {
                                                text: r.retrieve(v.getFormattedLabel(t, "emphasis", n.dataType), a),
                                                textFont: nt.getFont(),
                                                fill: nt.getTextColor() || g
                                            }) : f.hoverStyle = {
                                                text: ""
                                            };
                                            f.ignore = !k && !d;
                                            u.setHoverStyle(this)
                                        };
                                        f.updateLayout = function(n, t) {
                                            this.setLinePoints(n.getItemLayout(t))
                                        };
                                        f.setLinePoints = function(n) {
                                            var t = this.childOfName("line");
                                            o(t.shape, n);
                                            t.dirty()
                                        };
                                        r.inherits(s, u.Group);
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function f(n) {
                                            return isNaN(+n.cpx1) || isNaN(+n.cpy1)
                                        }
                                        var r = i(43),
                                            o = i(10),
                                            e = r.Line.prototype,
                                            u = r.BezierCurve.prototype;
                                        n.exports = r.extendShape({
                                            type: "ec-line",
                                            style: {
                                                stroke: "#000",
                                                fill: null
                                            },
                                            shape: {
                                                x1: 0,
                                                y1: 0,
                                                x2: 0,
                                                y2: 0,
                                                percent: 1,
                                                cpx1: null,
                                                cpy1: null
                                            },
                                            buildPath: function(n, t) {
                                                (f(t) ? e : u).buildPath(n, t)
                                            },
                                            pointAt: function(n) {
                                                return f(this.shape) ? e.pointAt.call(this, n) : u.pointAt.call(this, n)
                                            },
                                            tangentAt: function(n) {
                                                var t = this.shape,
                                                    i = f(t) ? [t.x2 - t.x1, t.y2 - t.y1] : u.tangentAt.call(this, n);
                                                return o.normalize(i, i)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function l(n, t, i) {
                                            for (var b, k, y, d, h = n[0], l = n[1], a = n[2], g = Infinity, r, w = i * i, v = .1, p = .1; p <= .9; p += .1) f[0] = u(h[0], l[0], a[0], p), f[1] = u(h[1], l[1], a[1], p), y = c(s(f, t) - w), y < g && (g = y, r = p);
                                            for (b = 0; b < 32; b++) {
                                                if (k = r + v, e[0] = u(h[0], l[0], a[0], r), e[1] = u(h[1], l[1], a[1], r), o[0] = u(h[0], l[0], a[0], k), o[1] = u(h[1], l[1], a[1], k), y = s(e, t) - w, c(y) < .01) break;
                                                d = s(o, t) - w;
                                                v /= 2;
                                                r = y < 0 ? d >= 0 ? r + v : r - v : d >= 0 ? r - v : r + v
                                            }
                                            return r
                                        }
                                        var h = i(50),
                                            r = i(10),
                                            f = [],
                                            e = [],
                                            o = [],
                                            u = h.quadraticAt,
                                            s = r.distSquare,
                                            c = Math.abs;
                                        n.exports = function(n, t) {
                                            function s(n) {
                                                var t = n.getVisual("symbolSize");
                                                return t instanceof Array && (t = (t[0] + t[1]) / 2), t
                                            }
                                            var u = [],
                                                o = h.quadraticSubdivide,
                                                i = [
                                                    [],
                                                    [],
                                                    []
                                                ],
                                                f = [
                                                    [],
                                                    []
                                                ],
                                                e = [];
                                            t /= 2;
                                            n.eachEdge(function(n) {
                                                var h = n.getLayout(),
                                                    y = n.getVisual("fromSymbol"),
                                                    p = n.getVisual("toSymbol"),
                                                    c, v, a;
                                                h.__original || (h.__original = [r.clone(h[0]), r.clone(h[1])], h[2] && h.__original.push(r.clone(h[2])));
                                                c = h.__original;
                                                h[2] != null ? (r.copy(i[0], c[0]), r.copy(i[1], c[2]), r.copy(i[2], c[1]), y && y != "none" && (a = s(n.node1), v = l(i, c[0], a * t), o(i[0][0], i[1][0], i[2][0], v, u), i[0][0] = u[3], i[1][0] = u[4], o(i[0][1], i[1][1], i[2][1], v, u), i[0][1] = u[3], i[1][1] = u[4]), p && p != "none" && (a = s(n.node2), v = l(i, c[1], a * t), o(i[0][0], i[1][0], i[2][0], v, u), i[1][0] = u[1], i[2][0] = u[2], o(i[0][1], i[1][1], i[2][1], v, u), i[1][1] = u[1], i[2][1] = u[2]), r.copy(h[0], i[0]), r.copy(h[1], i[2]), r.copy(h[2], i[1])) : (r.copy(f[0], c[0]), r.copy(f[1], c[1]), r.sub(e, f[1], f[0]), r.normalize(e, e), y && y != "none" && (a = s(n.node1), r.scaleAndAdd(f[0], f[0], e, a * t)), p && p != "none" && (a = s(n.node2), r.scaleAndAdd(f[1], f[1], e, -a * t)), r.copy(h[0], f[0]), r.copy(h[1], f[1]))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1),
                                            u = i(178);
                                        r.registerAction({
                                            type: "graphRoam",
                                            event: "graphRoam",
                                            update: "none"
                                        }, function(n, t) {
                                            t.eachComponent({
                                                mainType: "series",
                                                query: n
                                            }, function(t) {
                                                var r = t.coordinateSystem,
                                                    i = u.updateCenterAndZoom(r, n);
                                                t.setCenter && t.setCenter(i.center);
                                                t.setZoom && t.setZoom(i.zoom)
                                            })
                                        })
                                    }, function(n) {
                                        n.exports = function(n) {
                                            var t = n.findComponents({
                                                mainType: "legend"
                                            });
                                            t && t.length && n.eachSeriesByType("graph", function(n) {
                                                var i = n.getCategoriesData(),
                                                    u = n.getGraph(),
                                                    r = u.data,
                                                    f = i.mapArray(i.getName);
                                                r.filterSelf(function(n) {
                                                    var e = r.getItemModel(n),
                                                        i = e.getShallow("category"),
                                                        u;
                                                    if (i != null)
                                                        for (typeof i == "number" && (i = f[i]), u = 0; u < t.length; u++)
                                                            if (!t[u].isSelected(i)) return !1;
                                                    return !0
                                                })
                                            }, this)
                                        }
                                    }, function(n) {
                                        n.exports = function(n) {
                                            var t = {};
                                            n.eachSeriesByType("graph", function(n) {
                                                var i = n.getCategoriesData(),
                                                    r = n.getData(),
                                                    u = {};
                                                i.each(function(r) {
                                                    var f = i.getName(r),
                                                        e, o;
                                                    u[f] = r;
                                                    e = i.getItemModel(r);
                                                    o = e.get("itemStyle.normal.color") || n.getColorFromPalette(f, t);
                                                    i.setItemVisual(r, "color", o)
                                                });
                                                i.count() && r.each(function(n) {
                                                    var f = r.getItemModel(n),
                                                        t = f.getShallow("category");
                                                    t != null && (typeof t == "string" && (t = u[t]), r.getItemVisual(n, "color", !0) || r.setItemVisual(n, "color", i.getItemVisual(t, "color")))
                                                })
                                            })
                                        }
                                    }, function(n) {
                                        function t(n) {
                                            return n instanceof Array || (n = [n, n]), n
                                        }
                                        n.exports = function(n) {
                                            n.eachSeriesByType("graph", function(n) {
                                                var o = n.getGraph(),
                                                    i = n.getEdgeData(),
                                                    r = t(n.get("edgeSymbol")),
                                                    u = t(n.get("edgeSymbolSize")),
                                                    f = "lineStyle.normal.color".split("."),
                                                    e = "lineStyle.normal.opacity".split(".");
                                                i.setVisual("fromSymbol", r && r[0]);
                                                i.setVisual("toSymbol", r && r[1]);
                                                i.setVisual("fromSymbolSize", u && u[0]);
                                                i.setVisual("toSymbolSize", u && u[1]);
                                                i.setVisual("color", n.get(f));
                                                i.setVisual("opacity", n.get(e));
                                                i.each(function(n) {
                                                    var u = i.getItemModel(n),
                                                        r = o.getEdgeByIndex(n),
                                                        s = t(u.getShallow("symbol", !0)),
                                                        h = t(u.getShallow("symbolSize", !0)),
                                                        c = u.get(f),
                                                        l = u.get(e);
                                                    switch (c) {
                                                        case "source":
                                                            c = r.node1.getVisual("color");
                                                            break;
                                                        case "target":
                                                            c = r.node2.getVisual("color")
                                                    }
                                                    s[0] && r.setVisual("fromSymbol", s[0]);
                                                    s[1] && r.setVisual("toSymbol", s[1]);
                                                    h[0] && r.setVisual("fromSymbolSize", h[0]);
                                                    h[1] && r.setVisual("toSymbolSize", h[1]);
                                                    r.setVisual("color", c);
                                                    r.setVisual("opacity", l)
                                                })
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(209),
                                            u = i(210);
                                        n.exports = function(n) {
                                            n.eachSeriesByType("graph", function(n) {
                                                var f = n.get("layout"),
                                                    i = n.coordinateSystem,
                                                    t;
                                                i && i.type !== "view" ? (t = n.getData(), t.each(i.dimensions, function(n, r, u) {
                                                    isNaN(n) || isNaN(r) ? t.setItemLayout(u, [NaN, NaN]) : t.setItemLayout(u, i.dataToPoint([n, r]))
                                                }), u(t.graph)) : f && f !== "none" || r(n)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(210);
                                        n.exports = function(n) {
                                            var i = n.coordinateSystem,
                                                t;
                                            i && i.type !== "view" || (t = n.getGraph(), t.eachNode(function(n) {
                                                var t = n.getModel();
                                                n.setLayout([+t.get("x"), +t.get("y")])
                                            }), r(t))
                                        }
                                    }, function(n, t, i) {
                                        var r = i(10);
                                        n.exports = function(n) {
                                            n.eachEdge(function(n) {
                                                var u = n.getModel().get("lineStyle.normal.curveness") || 0,
                                                    t = r.clone(n.node1.getLayout()),
                                                    i = r.clone(n.node2.getLayout()),
                                                    f = [t, i]; + u && f.push([(t[0] + i[0]) / 2 - (t[1] - i[1]) * u, (t[1] + i[1]) / 2 - (i[0] - t[0]) * u]);
                                                n.setLayout(f)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(212);
                                        n.exports = function(n) {
                                            n.eachSeriesByType("graph", function(n) {
                                                n.get("layout") === "circular" && r(n)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(10);
                                        n.exports = function(n) {
                                            var f = n.coordinateSystem;
                                            if (!f || f.type === "view") {
                                                var t = f.getBoundingRect(),
                                                    i = n.getData(),
                                                    h = i.graph,
                                                    u = 0,
                                                    e = i.getSum("value"),
                                                    c = Math.PI * 2 / (e || i.count()),
                                                    o = t.width / 2 + t.x,
                                                    s = t.height / 2 + t.y,
                                                    l = Math.min(t.width, t.height) / 2;
                                                h.eachNode(function(n) {
                                                    var t = n.getValue("value");
                                                    u += c * (e ? t : 1) / 2;
                                                    n.setLayout([l * Math.cos(u) + o, l * Math.sin(u) + s]);
                                                    u += c * (e ? t : 1) / 2
                                                });
                                                i.setLayout({
                                                    cx: o,
                                                    cy: s
                                                });
                                                h.eachEdge(function(n) {
                                                    var t = n.getModel().get("lineStyle.normal.curveness") || 0,
                                                        i = r.clone(n.node1.getLayout()),
                                                        u = r.clone(n.node2.getLayout()),
                                                        f, e = (i[0] + u[0]) / 2,
                                                        h = (i[1] + u[1]) / 2; + t && (t *= 3, f = [o * t + e * (1 - t), s * t + h * (1 - t)]);
                                                    n.setLayout([i, u, f])
                                                })
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var e = i(214),
                                            u = i(7),
                                            o = i(209),
                                            s = i(212),
                                            r = i(10),
                                            f = i(4);
                                        n.exports = function(n) {
                                            n.eachSeriesByType("graph", function(n) {
                                                var y = n.coordinateSystem;
                                                if (!y || y.type === "view")
                                                    if (n.get("layout") === "force") {
                                                        var p = n.preservedPoints || {},
                                                            c = n.getGraph(),
                                                            i = c.data,
                                                            b = c.edgeData,
                                                            a = n.getModel("force"),
                                                            w = a.get("initLayout");
                                                        n.preservedPoints ? i.each(function(n) {
                                                            var t = i.getId(n);
                                                            i.setItemLayout(n, p[t] || [NaN, NaN])
                                                        }) : w && w !== "none" ? w === "circular" && s(n) : o(n);
                                                        var k = i.getDataExtent("value"),
                                                            d = b.getDataExtent("value"),
                                                            h = a.get("repulsion"),
                                                            t = a.get("edgeLength");
                                                        f.isArray(h) || (h = [h, h]);
                                                        f.isArray(t) || (t = [t, t]);
                                                        t = [t[1], t[0]];
                                                        var l = i.mapArray("value", function(n, t) {
                                                                var r = i.getItemLayout(t),
                                                                    f = u.linearMap(n, k, h);
                                                                return isNaN(f) && (f = (h[0] + h[1]) / 2), {
                                                                    w: f,
                                                                    rep: f,
                                                                    p: !r || isNaN(r[0]) || isNaN(r[1]) ? null : r
                                                                }
                                                            }),
                                                            g = b.mapArray("value", function(n, i) {
                                                                var r = c.getEdgeByIndex(i),
                                                                    f = u.linearMap(n, d, t);
                                                                return isNaN(f) && (f = (t[0] + t[1]) / 2), {
                                                                    n1: l[r.node1.dataIndex],
                                                                    n2: l[r.node2.dataIndex],
                                                                    d: f,
                                                                    curveness: r.getModel().get("lineStyle.normal.curveness") || 0
                                                                }
                                                            }),
                                                            y = n.coordinateSystem,
                                                            nt = y.getBoundingRect(),
                                                            v = e(l, g, {
                                                                rect: nt,
                                                                gravity: a.get("gravity")
                                                            }),
                                                            tt = v.step;
                                                        v.step = function(n) {
                                                            for (var t = 0, u = l.length; t < u; t++) l[t].fixed && r.copy(l[t].p, c.getNodeByIndex(t).getLayout());
                                                            tt(function(t, u, f) {
                                                                for (var e = 0, a = t.length; e < a; e++) t[e].fixed || c.getNodeByIndex(e).setLayout(t[e].p), p[i.getId(e)] = t[e].p;
                                                                for (e = 0, a = u.length; e < a; e++) {
                                                                    var s = u[e],
                                                                        v = c.getEdgeByIndex(e),
                                                                        h = s.n1.p,
                                                                        l = s.n2.p,
                                                                        o = v.getLayout();
                                                                    o = o ? o.slice() : [];
                                                                    o[0] = o[0] || [];
                                                                    o[1] = o[1] || [];
                                                                    r.copy(o[0], h);
                                                                    r.copy(o[1], l); + s.curveness && (o[2] = [(h[0] + l[0]) / 2 - (h[1] - l[1]) * s.curveness, (h[1] + l[1]) / 2 - (l[0] - h[0]) * s.curveness]);
                                                                    v.setLayout(o)
                                                                }
                                                                n && n(f)
                                                            })
                                                        };
                                                        n.forceLayout = v;
                                                        n.preservedPoints = p;
                                                        v.step()
                                                    } else n.forceLayout = null
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(10),
                                            u = r.scaleAndAdd;
                                        n.exports = function(n, t, i) {
                                            for (var e, f, o = i.rect, c = o.width, l = o.height, s = [o.x + c / 2, o.y + l / 2], a = i.gravity == null ? .1 : i.gravity, h = 0; h < n.length; h++) e = n[h], e.p || (e.p = r.create(c * (Math.random() - .5) + s[0], l * (Math.random() - .5) + s[1])), e.pp = r.clone(e.p), e.edges = null;
                                            return f = .6, {
                                                warmUp: function() {
                                                    f = .5
                                                },
                                                setFixed: function(t) {
                                                    n[t].fixed = !0
                                                },
                                                setUnfixed: function(t) {
                                                    n[t].fixed = !1
                                                },
                                                step: function(i) {
                                                    for (var b, l, p, c, v, k, d, h, o = [], y = n.length, e = 0; e < t.length; e++) {
                                                        var w = t[e],
                                                            l = w.n1,
                                                            c = w.n2;
                                                        r.sub(o, c.p, l.p);
                                                        v = r.len(o) - w.d;
                                                        b = c.w / (l.w + c.w);
                                                        r.normalize(o, o);
                                                        l.fixed || u(l.p, l.p, o, b * v * f);
                                                        c.fixed || u(c.p, c.p, o, -(1 - b) * v * f)
                                                    }
                                                    for (e = 0; e < y; e++) h = n[e], h.fixed || (r.sub(o, s, h.p), r.scaleAndAdd(h.p, h.p, o, a * f));
                                                    for (e = 0; e < y; e++)
                                                        for (l = n[e], p = e + 1; p < y; p++) c = n[p], r.sub(o, c.p, l.p), v = r.len(o), v === 0 && (r.set(o, Math.random() - .5, Math.random() - .5), v = 1), k = (l.rep + c.rep) / v / v, l.fixed || u(l.pp, l.pp, o, k), c.fixed || u(c.pp, c.pp, o, -k);
                                                    for (d = [], e = 0; e < y; e++) h = n[e], h.fixed || (r.sub(d, h.p, h.pp), r.scaleAndAdd(h.p, h.p, d, f), r.copy(h.pp, h.p));
                                                    f = f * .992;
                                                    i && i(n, t, f < .01)
                                                }
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            var r = n.getBoxLayoutParams();
                                            return r.aspect = i, u.getLayoutRect(r, {
                                                width: t.getWidth(),
                                                height: t.getHeight()
                                            })
                                        }
                                        var r = i(169),
                                            u = i(21),
                                            f = i(51);
                                        n.exports = function(n, t) {
                                            var i = [];
                                            return n.eachSeriesByType("graph", function(n) {
                                                var l = n.get("coordinateSystem"),
                                                    c, o;
                                                if (!l || l === "view") {
                                                    var a = n.getData(),
                                                        v = a.mapArray(function(n) {
                                                            var t = a.getItemModel(n);
                                                            return [+t.get("x"), +t.get("y")]
                                                        }),
                                                        u = [],
                                                        s = [];
                                                    f.fromPoints(v, u, s);
                                                    s[0] - u[0] == 0 && (s[0] += 1, u[0] -= 1);
                                                    s[1] - u[1] == 0 && (s[1] += 1, u[1] -= 1);
                                                    c = (s[0] - u[0]) / (s[1] - u[1]);
                                                    o = e(n, t, c);
                                                    isNaN(c) && (u = [o.x, o.y], s = [o.x + o.width, o.y + o.height]);
                                                    var y = s[0] - u[0],
                                                        p = s[1] - u[1],
                                                        w = o.width,
                                                        b = o.height,
                                                        h = n.coordinateSystem = new r;
                                                    h.zoomLimit = n.get("scaleLimit");
                                                    h.setBoundingRect(u[0], u[1], y, p);
                                                    h.setViewRect(o.x, o.y, w, b);
                                                    h.setCenter(n.get("center"));
                                                    h.setZoom(n.get("zoom"));
                                                    i.push(h)
                                                }
                                            }), i
                                        }
                                    }, function(n, t, i) {
                                        i(217);
                                        i(218)
                                    }, function(n, t, i) {
                                        var r = i(97),
                                            u = i(28),
                                            f = i(4),
                                            e = u.extend({
                                                type: "series.gauge",
                                                getInitialData: function(n) {
                                                    var i = new r(["value"], this),
                                                        t = n.data || [];
                                                    return f.isArray(t) || (t = [t]), i.initData(t), i
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    center: ["50%", "50%"],
                                                    legendHoverLink: !0,
                                                    radius: "75%",
                                                    startAngle: 225,
                                                    endAngle: -45,
                                                    clockwise: !0,
                                                    min: 0,
                                                    max: 100,
                                                    splitNumber: 10,
                                                    axisLine: {
                                                        show: !0,
                                                        lineStyle: {
                                                            color: [
                                                                [.2, "#91c7ae"],
                                                                [.8, "#63869e"],
                                                                [1, "#c23531"]
                                                            ],
                                                            width: 30
                                                        }
                                                    },
                                                    splitLine: {
                                                        show: !0,
                                                        length: 30,
                                                        lineStyle: {
                                                            color: "#eee",
                                                            width: 2,
                                                            type: "solid"
                                                        }
                                                    },
                                                    axisTick: {
                                                        show: !0,
                                                        splitNumber: 5,
                                                        length: 8,
                                                        lineStyle: {
                                                            color: "#eee",
                                                            width: 1,
                                                            type: "solid"
                                                        }
                                                    },
                                                    axisLabel: {
                                                        show: !0,
                                                        distance: 5,
                                                        textStyle: {
                                                            color: "auto"
                                                        }
                                                    },
                                                    pointer: {
                                                        show: !0,
                                                        length: "80%",
                                                        width: 8
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            color: "auto"
                                                        }
                                                    },
                                                    title: {
                                                        show: !0,
                                                        offsetCenter: [0, "-40%"],
                                                        textStyle: {
                                                            color: "#333",
                                                            fontSize: 15
                                                        }
                                                    },
                                                    detail: {
                                                        show: !0,
                                                        backgroundColor: "rgba(0,0,0,0)",
                                                        borderWidth: 0,
                                                        borderColor: "#ccc",
                                                        width: 100,
                                                        height: 40,
                                                        offsetCenter: [0, "40%"],
                                                        textStyle: {
                                                            color: "auto",
                                                            fontSize: 30
                                                        }
                                                    }
                                                }
                                            });
                                        n.exports = e
                                    }, function(n, t, i) {
                                        function s(n, t) {
                                            var i = n.get("center"),
                                                u = t.getWidth(),
                                                f = t.getHeight(),
                                                e = Math.min(u, f),
                                                o = r(i[0], t.getWidth()),
                                                s = r(i[1], t.getHeight()),
                                                h = r(n.get("radius"), e / 2);
                                            return {
                                                cx: o,
                                                cy: s,
                                                r: h
                                            }
                                        }

                                        function e(n, t) {
                                            return t && (typeof t == "string" ? n = t.replace("{value}", n) : typeof t == "function" && (n = t(n))), n
                                        }
                                        var o = i(219),
                                            u = i(43),
                                            f = i(7),
                                            r = f.parsePercent,
                                            h = Math.PI * 2,
                                            c = i(42).extend({
                                                type: "gauge",
                                                render: function(n, t, i) {
                                                    this.group.removeAll();
                                                    var r = n.get("axisLine.lineStyle.color"),
                                                        u = s(n, i);
                                                    this._renderMain(n, t, i, r, u)
                                                },
                                                dispose: function() {},
                                                _renderMain: function(n, t, i, r, f) {
                                                    for (var s, p, w = this.group, b = n.getModel("axisLine"), v = b.getModel("lineStyle"), c = n.get("clockwise"), e = -n.get("startAngle") / 180 * Math.PI, o = -n.get("endAngle") / 180 * Math.PI, k = (o - e) % h, y = e, d = v.get("width"), l = 0; l < r.length; l++) {
                                                        var g = Math.min(Math.max(r[l][0], 0), 1),
                                                            o = e + k * g,
                                                            a = new u.Sector({
                                                                shape: {
                                                                    startAngle: y,
                                                                    endAngle: o,
                                                                    cx: f.cx,
                                                                    cy: f.cy,
                                                                    clockwise: c,
                                                                    r0: f.r - d,
                                                                    r: f.r
                                                                },
                                                                silent: !0
                                                            });
                                                        a.setStyle({
                                                            fill: r[l][1]
                                                        });
                                                        a.setStyle(v.getLineStyle(["color", "borderWidth", "borderColor"]));
                                                        w.add(a);
                                                        y = o
                                                    }
                                                    s = function(n) {
                                                        if (n <= 0) return r[0][1];
                                                        for (var t = 0; t < r.length; t++)
                                                            if (r[t][0] >= n && (t === 0 ? 0 : r[t - 1][0]) < n) return r[t][1];
                                                        return r[t - 1][1]
                                                    };
                                                    c || (p = e, e = o, o = p);
                                                    this._renderTicks(n, t, i, s, f, e, o, c);
                                                    this._renderPointer(n, t, i, s, f, e, o, c);
                                                    this._renderTitle(n, t, i, s, f);
                                                    this._renderDetail(n, t, i, s, f)
                                                },
                                                _renderTicks: function(n, t, i, o, s, h, c) {
                                                    for (var a, v, ft, tt, it = this.group, b = s.cx, k = s.cy, l = s.r, ot = n.get("min"), wt = n.get("max"), rt = n.getModel("splitLine"), d = n.getModel("axisTick"), g = n.getModel("axisLabel"), y = n.get("splitNumber"), ut = d.get("splitNumber"), nt = r(rt.get("length"), l), st = r(d.get("length"), l), p = h, ht = (c - h) / y, ct = ht / ut, lt = rt.getModel("lineStyle").getLineStyle(), at = d.getModel("lineStyle").getLineStyle(), vt = g.getModel("textStyle"), w = 0; w <= y; w++) {
                                                        if (a = Math.cos(p), v = Math.sin(p), rt.get("show") && (ft = new u.Line({
                                                                shape: {
                                                                    x1: a * l + b,
                                                                    y1: v * l + k,
                                                                    x2: a * (l - nt) + b,
                                                                    y2: v * (l - nt) + k
                                                                },
                                                                style: lt,
                                                                silent: !0
                                                            }), lt.stroke === "auto" && ft.setStyle({
                                                                stroke: o(w / y)
                                                            }), it.add(ft)), g.get("show")) {
                                                            var bt = e(f.round(w / y * (wt - ot) + ot), g.get("formatter")),
                                                                yt = g.get("distance"),
                                                                et = new u.Text({
                                                                    style: {
                                                                        text: bt,
                                                                        x: a * (l - nt - yt) + b,
                                                                        y: v * (l - nt - yt) + k,
                                                                        fill: vt.getTextColor(),
                                                                        textFont: vt.getFont(),
                                                                        textVerticalAlign: v < -.4 ? "top" : v > .4 ? "bottom" : "middle",
                                                                        textAlign: a < -.4 ? "left" : a > .4 ? "right" : "center"
                                                                    },
                                                                    silent: !0
                                                                });
                                                            et.style.fill === "auto" && et.setStyle({
                                                                fill: o(w / y)
                                                            });
                                                            it.add(et)
                                                        }
                                                        if (d.get("show") && w !== y) {
                                                            for (tt = 0; tt <= ut; tt++) {
                                                                var a = Math.cos(p),
                                                                    v = Math.sin(p),
                                                                    pt = new u.Line({
                                                                        shape: {
                                                                            x1: a * l + b,
                                                                            y1: v * l + k,
                                                                            x2: a * (l - st) + b,
                                                                            y2: v * (l - st) + k
                                                                        },
                                                                        silent: !0,
                                                                        style: at
                                                                    });
                                                                at.stroke === "auto" && pt.setStyle({
                                                                    stroke: o((w + tt / ut) / y)
                                                                });
                                                                it.add(pt);
                                                                p += ct
                                                            }
                                                            p -= ct
                                                        } else p += ht
                                                    }
                                                },
                                                _renderPointer: function(n, t, i, e, s, h, c) {
                                                    var a = [+n.get("min"), +n.get("max")],
                                                        p = [h, c],
                                                        l = n.getData(),
                                                        v = this._data,
                                                        y = this.group;
                                                    l.diff(v).add(function(t) {
                                                        var i = new o({
                                                            shape: {
                                                                angle: h
                                                            }
                                                        });
                                                        u.updateProps(i, {
                                                            shape: {
                                                                angle: f.linearMap(l.get("value", t), a, p, !0)
                                                            }
                                                        }, n);
                                                        y.add(i);
                                                        l.setItemGraphicEl(t, i)
                                                    }).update(function(t, i) {
                                                        var r = v.getItemGraphicEl(i);
                                                        u.updateProps(r, {
                                                            shape: {
                                                                angle: f.linearMap(l.get("value", t), a, p, !0)
                                                            }
                                                        }, n);
                                                        y.add(r);
                                                        l.setItemGraphicEl(t, r)
                                                    }).remove(function(n) {
                                                        var t = v.getItemGraphicEl(n);
                                                        y.remove(t)
                                                    }).execute();
                                                    l.eachItemGraphicEl(function(n, t) {
                                                        var i = l.getItemModel(t),
                                                            f = i.getModel("pointer");
                                                        n.setShape({
                                                            x: s.cx,
                                                            y: s.cy,
                                                            width: r(f.get("width"), s.r),
                                                            r: r(f.get("length"), s.r)
                                                        });
                                                        n.useStyle(i.getModel("itemStyle.normal").getItemStyle());
                                                        n.style.fill === "auto" && n.setStyle("fill", e((l.get("value", t) - a[0]) / (a[1] - a[0])));
                                                        u.setHoverStyle(n, i.getModel("itemStyle.emphasis").getItemStyle())
                                                    });
                                                    this._data = l
                                                },
                                                _renderTitle: function(n, t, i, f, e) {
                                                    var o = n.getModel("title");
                                                    if (o.get("show")) {
                                                        var s = o.getModel("textStyle"),
                                                            h = o.get("offsetCenter"),
                                                            c = e.cx + r(h[0], e.r),
                                                            l = e.cy + r(h[1], e.r),
                                                            a = new u.Text({
                                                                style: {
                                                                    x: c,
                                                                    y: l,
                                                                    text: n.getData().getName(0),
                                                                    fill: s.getTextColor(),
                                                                    textFont: s.getFont(),
                                                                    textAlign: "center",
                                                                    textVerticalAlign: "middle"
                                                                }
                                                            });
                                                        this.group.add(a)
                                                    }
                                                },
                                                _renderDetail: function(n, t, i, o, s) {
                                                    var h = n.getModel("detail"),
                                                        w = n.get("min"),
                                                        b = n.get("max");
                                                    if (h.get("show")) {
                                                        var l = h.getModel("textStyle"),
                                                            a = h.get("offsetCenter"),
                                                            k = s.cx + r(a[0], s.r),
                                                            d = s.cy + r(a[1], s.r),
                                                            v = r(h.get("width"), s.r),
                                                            y = r(h.get("height"), s.r),
                                                            p = n.getData().get("value", 0),
                                                            c = new u.Rect({
                                                                shape: {
                                                                    x: k - v / 2,
                                                                    y: d - y / 2,
                                                                    width: v,
                                                                    height: y
                                                                },
                                                                style: {
                                                                    text: e(p, h.get("formatter")),
                                                                    fill: h.get("backgroundColor"),
                                                                    textFill: l.getTextColor(),
                                                                    textFont: l.getFont()
                                                                }
                                                            });
                                                        c.style.textFill === "auto" && c.setStyle("textFill", o(f.linearMap(p, [w, b], [0, 1], !0)));
                                                        c.setStyle(h.getItemStyle(["color"]));
                                                        this.group.add(c)
                                                    }
                                                }
                                            });
                                        n.exports = c
                                    }, function(n, t, i) {
                                        n.exports = i(45).extend({
                                            type: "echartsGaugePointer",
                                            shape: {
                                                angle: 0,
                                                width: 10,
                                                r: 10,
                                                x: 0,
                                                y: 0
                                            },
                                            buildPath: function(n, t) {
                                                var u = Math.cos,
                                                    f = Math.sin,
                                                    e = t.r,
                                                    i = t.width,
                                                    r = t.angle,
                                                    o = t.x - u(r) * i * (i >= e / 3 ? 1 : 2),
                                                    s = t.y - f(r) * i * (i >= e / 3 ? 1 : 2);
                                                r = t.angle - Math.PI / 2;
                                                n.moveTo(o, s);
                                                n.lineTo(t.x + u(r) * i, t.y + f(r) * i);
                                                n.lineTo(t.x + u(t.angle) * e, t.y + f(t.angle) * e);
                                                n.lineTo(t.x - u(r) * i, t.y - f(r) * i);
                                                n.lineTo(o, s);
                                                return
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            r = i(1);
                                        i(221);
                                        i(222);
                                        r.registerVisual(u.curry(i(144), "funnel"));
                                        r.registerLayout(i(223));
                                        r.registerProcessor(u.curry(i(147), "funnel"))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(97),
                                            f = i(5),
                                            e = i(102),
                                            r = i(1).extendSeriesModel({
                                                type: "series.funnel",
                                                init: function(n) {
                                                    r.superApply(this, "init", arguments);
                                                    this.legendDataProvider = function() {
                                                        return this._dataBeforeProcessed
                                                    };
                                                    this._defaultLabelLine(n)
                                                },
                                                getInitialData: function(n) {
                                                    var i = e(["value"], n.data),
                                                        t = new u(i, this);
                                                    return t.initData(n.data), t
                                                },
                                                _defaultLabelLine: function(n) {
                                                    f.defaultEmphasis(n.labelLine, ["show"]);
                                                    var t = n.labelLine.normal,
                                                        i = n.labelLine.emphasis;
                                                    t.show = t.show && n.label.normal.show;
                                                    i.show = i.show && n.label.emphasis.show
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    legendHoverLink: !0,
                                                    left: 80,
                                                    top: 60,
                                                    right: 80,
                                                    bottom: 60,
                                                    minSize: "0%",
                                                    maxSize: "100%",
                                                    sort: "descending",
                                                    gap: 0,
                                                    funnelAlign: "center",
                                                    label: {
                                                        normal: {
                                                            show: !0,
                                                            position: "outer"
                                                        },
                                                        emphasis: {
                                                            show: !0
                                                        }
                                                    },
                                                    labelLine: {
                                                        normal: {
                                                            show: !0,
                                                            length: 20,
                                                            lineStyle: {
                                                                width: 1,
                                                                type: "solid"
                                                            }
                                                        },
                                                        emphasis: {}
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            borderColor: "#fff",
                                                            borderWidth: 1
                                                        },
                                                        emphasis: {}
                                                    }
                                                }
                                            });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function f(n, t) {
                                            function f() {
                                                i.ignore = i.hoverIgnore;
                                                u.ignore = u.hoverIgnore
                                            }

                                            function e() {
                                                i.ignore = i.normalIgnore;
                                                u.ignore = u.normalIgnore
                                            }
                                            r.Group.call(this);
                                            var o = new r.Polygon,
                                                i = new r.Polyline,
                                                u = new r.Text;
                                            this.add(o);
                                            this.add(i);
                                            this.add(u);
                                            this.updateData(n, t, !0);
                                            this.on("emphasis", f).on("normal", e).on("mouseover", f).on("mouseout", e)
                                        }

                                        function o(n, t, i, r) {
                                            var e = r.getModel("textStyle"),
                                                f = r.get("position"),
                                                o = f === "inside" || f === "inner" || f === "center";
                                            return {
                                                fill: e.getTextColor() || (o ? "#fff" : n.getItemVisual(t, "color")),
                                                textFont: e.getFont(),
                                                text: u.retrieve(n.hostModel.getFormattedLabel(t, i), n.getName(t))
                                            }
                                        }
                                        var r = i(43),
                                            u = i(4),
                                            e = f.prototype,
                                            h = ["itemStyle", "normal", "opacity"],
                                            s;
                                        e.updateData = function(n, t, i) {
                                            var f = this.childAt(0),
                                                s = n.hostModel,
                                                a = n.getItemModel(t),
                                                c = n.getItemLayout(t),
                                                e = n.getItemModel(t).get(h),
                                                o, l;
                                            e = e == null ? 1 : e;
                                            f.useStyle({});
                                            i ? (f.setShape({
                                                points: c.points
                                            }), f.setStyle({
                                                opacity: 0
                                            }), r.initProps(f, {
                                                style: {
                                                    opacity: e
                                                }
                                            }, s, t)) : r.updateProps(f, {
                                                style: {
                                                    opacity: e
                                                },
                                                shape: {
                                                    points: c.points
                                                }
                                            }, s, t);
                                            o = a.getModel("itemStyle");
                                            l = n.getItemVisual(t, "color");
                                            f.setStyle(u.defaults({
                                                lineJoin: "round",
                                                fill: l
                                            }, o.getModel("normal").getItemStyle(["opacity"])));
                                            f.hoverStyle = o.getModel("emphasis").getItemStyle();
                                            this._updateLabel(n, t);
                                            r.setHoverStyle(this)
                                        };
                                        e._updateLabel = function(n, t) {
                                            var u = this.childAt(1),
                                                f = this.childAt(2),
                                                s = n.hostModel,
                                                e = n.getItemModel(t),
                                                v = n.getItemLayout(t),
                                                i = v.label,
                                                y = n.getItemVisual(t, "color");
                                            r.updateProps(u, {
                                                shape: {
                                                    points: i.linePoints || i.linePoints
                                                }
                                            }, s, t);
                                            r.updateProps(f, {
                                                style: {
                                                    x: i.x,
                                                    y: i.y
                                                }
                                            }, s, t);
                                            f.attr({
                                                style: {
                                                    textAlign: i.textAlign,
                                                    textVerticalAlign: i.verticalAlign,
                                                    textFont: i.font
                                                },
                                                rotation: i.rotation,
                                                origin: [i.x, i.y],
                                                z2: 10
                                            });
                                            var h = e.getModel("label.normal"),
                                                c = e.getModel("label.emphasis"),
                                                l = e.getModel("labelLine.normal"),
                                                a = e.getModel("labelLine.emphasis");
                                            f.setStyle(o(n, t, "normal", h));
                                            f.ignore = f.normalIgnore = !h.get("show");
                                            f.hoverIgnore = !c.get("show");
                                            u.ignore = u.normalIgnore = !l.get("show");
                                            u.hoverIgnore = !a.get("show");
                                            u.setStyle({
                                                stroke: y
                                            });
                                            u.setStyle(l.getModel("lineStyle").getLineStyle());
                                            f.hoverStyle = o(n, t, "emphasis", c);
                                            u.hoverStyle = a.getModel("lineStyle").getLineStyle()
                                        };
                                        u.inherits(f, r.Group);
                                        s = i(42).extend({
                                            type: "funnel",
                                            render: function(n) {
                                                var t = n.getData(),
                                                    i = this._data,
                                                    r = this.group;
                                                t.diff(i).add(function(n) {
                                                    var i = new f(t, n);
                                                    t.setItemGraphicEl(n, i);
                                                    r.add(i)
                                                }).update(function(n, u) {
                                                    var f = i.getItemGraphicEl(u);
                                                    f.updateData(t, n);
                                                    r.add(f);
                                                    t.setItemGraphicEl(n, f)
                                                }).remove(function(n) {
                                                    var t = i.getItemGraphicEl(n);
                                                    r.remove(t)
                                                }).execute();
                                                this._data = t
                                            },
                                            remove: function() {
                                                this.group.removeAll();
                                                this._data = null
                                            },
                                            dispose: function() {}
                                        });
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function e(n, t) {
                                            return f.getLayoutRect(n.getBoxLayoutParams(), {
                                                width: t.getWidth(),
                                                height: t.getHeight()
                                            })
                                        }

                                        function o(n, t) {
                                            for (var i = n.mapArray("value", function(n) {
                                                    return n
                                                }), u = [], f = t === "ascending", r = 0, e = n.count(); r < e; r++) u[r] = r;
                                            return u.sort(function(n, t) {
                                                return f ? i[n] - i[t] : i[t] - i[n]
                                            }), u
                                        }

                                        function s(n) {
                                            n.each(function(t) {
                                                var v = n.getItemModel(t),
                                                    w = v.getModel("label.normal"),
                                                    o = w.get("position"),
                                                    b = v.getModel("labelLine.normal"),
                                                    y = n.getItemLayout(t),
                                                    i = y.points,
                                                    p = o === "inner" || o === "inside" || o === "center",
                                                    s, r, u, c, f, h, e, l, a;
                                                p ? (r = (i[0][0] + i[1][0] + i[2][0] + i[3][0]) / 4, u = (i[0][1] + i[1][1] + i[2][1] + i[3][1]) / 4, s = "center", c = [
                                                    [r, u],
                                                    [r, u]
                                                ]) : (l = b.get("length"), o === "left" ? (f = (i[3][0] + i[0][0]) / 2, h = (i[3][1] + i[0][1]) / 2, e = f - l, r = e - 5, s = "right") : (f = (i[1][0] + i[2][0]) / 2, h = (i[1][1] + i[2][1]) / 2, e = f + l, r = e + 5, s = "left"), a = h, c = [
                                                    [f, h],
                                                    [e, a]
                                                ], u = a);
                                                y.label = {
                                                    linePoints: c,
                                                    x: r,
                                                    y: u,
                                                    verticalAlign: "middle",
                                                    textAlign: s,
                                                    inside: p
                                                }
                                            })
                                        }
                                        var f = i(21),
                                            r = i(7),
                                            u = r.parsePercent;
                                        n.exports = function(n, t) {
                                            n.eachSeriesByType("funnel", function(n) {
                                                var f = n.getData(),
                                                    w = n.get("sort"),
                                                    i = e(n, t),
                                                    h = o(f, w),
                                                    g = [u(n.get("minSize"), i.width), u(n.get("maxSize"), i.width)],
                                                    b = f.getDataExtent("value"),
                                                    y = n.get("min"),
                                                    p = n.get("max"),
                                                    c;
                                                y == null && (y = Math.min(b[0], 0));
                                                p == null && (p = b[1]);
                                                var nt = n.get("funnelAlign"),
                                                    l = n.get("gap"),
                                                    a = (i.height - l * (f.count() - 1)) / f.count(),
                                                    v = i.y,
                                                    k = function(n, t) {
                                                        var o = f.get("value", n) || 0,
                                                            e = r.linearMap(o, [y, p], g, !0),
                                                            u;
                                                        switch (nt) {
                                                            case "left":
                                                                u = i.x;
                                                                break;
                                                            case "center":
                                                                u = i.x + (i.width - e) / 2;
                                                                break;
                                                            case "right":
                                                                u = i.x + i.width - e
                                                        }
                                                        return [
                                                            [u, t],
                                                            [u + e, t]
                                                        ]
                                                    };
                                                for (w === "ascending" && (a = -a, l = -l, v += i.height, h = h.reverse()), c = 0; c < h.length; c++) {
                                                    var d = h[c],
                                                        tt = h[c + 1],
                                                        it = k(d, v),
                                                        rt = k(tt, v + a);
                                                    v += a + l;
                                                    f.setItemLayout(d, {
                                                        points: it.concat(rt.slice().reverse())
                                                    })
                                                }
                                                s(f)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        i(225);
                                        i(236);
                                        i(237);
                                        r.registerVisual(i(238))
                                    }, function(n, t, i) {
                                        i(226);
                                        i(229);
                                        i(231);
                                        var r = i(1),
                                            u = i(4),
                                            f = 5;
                                        r.extendComponentView({
                                            type: "parallel",
                                            render: function(n, t, i) {
                                                var e = i.getZr(),
                                                    r;
                                                if (!this.__onMouseDown) {
                                                    e.on("mousedown", this.__onMouseDown = function(n) {
                                                        r = [n.offsetX, n.offsetY]
                                                    });
                                                    e.on("mouseup", this.__onMouseUp = function(t) {
                                                        var e = [t.offsetX, t.offsetY],
                                                            c = Math.pow(r[0] - e[0], 2) + Math.pow(r[1] - e[1], 2),
                                                            o, s, h;
                                                        !n.get("axisExpandable") || c > f || (o = n.coordinateSystem, s = o.findClosestAxisDim(e), s && (h = u.indexOf(o.dimensions, s), i.dispatchAction({
                                                            type: "parallelAxisExpand",
                                                            axisExpandCenter: h
                                                        })))
                                                    })
                                                }
                                            },
                                            dispose: function(n, t) {
                                                t.getZr().off(this.__onMouseDown);
                                                t.getZr().off(this.__onMouseUp)
                                            }
                                        });
                                        r.registerPreprocessor(i(235))
                                    }, function(n, t, i) {
                                        function u(n, t) {
                                            var i = [];
                                            return n.eachComponent("parallel", function(u, f) {
                                                var e = new r(u, n, t);
                                                e.name = "parallel_" + f;
                                                e.resize(u, t);
                                                u.coordinateSystem = e;
                                                e.model = u;
                                                i.push(e)
                                            }), n.eachSeries(function(t) {
                                                if (t.get("coordinateSystem") === "parallel") {
                                                    var i = n.queryComponents({
                                                        mainType: "parallel",
                                                        index: t.get("parallelIndex"),
                                                        id: t.get("parallelId")
                                                    })[0];
                                                    t.coordinateSystem = i.coordinateSystem
                                                }
                                            }), i
                                        }
                                        var r = i(227);
                                        i(26).register("parallel", {
                                            create: u
                                        })
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            this._axesMap = {};
                                            this._axesLayout = {};
                                            this.dimensions = n.dimensions;
                                            this._rect;
                                            this._model = n;
                                            this._init(n, t, i)
                                        }
                                        var h = i(21),
                                            o = i(114),
                                            u = i(4),
                                            c = i(228),
                                            s = i(43),
                                            f = i(11),
                                            r = u.each,
                                            l = Math.PI;
                                        e.prototype = {
                                            type: "parallel",
                                            constructor: e,
                                            _init: function(n, t) {
                                                var i = n.dimensions,
                                                    u = n.parallelAxisIndex;
                                                r(i, function(n, i) {
                                                    var e = u[i],
                                                        r = t.getComponent("parallelAxis", e),
                                                        f = this._axesMap[n] = new c(n, o.createScaleByModel(r), [0, 0], r.get("type"), e),
                                                        s = f.type === "category";
                                                    f.onBand = s && r.get("boundaryGap");
                                                    f.inverse = r.get("inverse");
                                                    r.axis = f;
                                                    f.model = r
                                                }, this)
                                            },
                                            update: function(n) {
                                                this._updateAxesFromSeries(this._model, n)
                                            },
                                            _updateAxesFromSeries: function(n, t) {
                                                t.eachSeries(function(i) {
                                                    if (n.contains(i, t)) {
                                                        var u = i.getData();
                                                        r(this.dimensions, function(n) {
                                                            var t = this._axesMap[n];
                                                            t.scale.unionExtent(u.getDataExtent(n));
                                                            o.niceScaleExtent(t, t.model)
                                                        }, this)
                                                    }
                                                }, this)
                                            },
                                            resize: function(n, t) {
                                                this._rect = h.getLayoutRect(n.getBoxLayoutParams(), {
                                                    width: t.getWidth(),
                                                    height: t.getHeight()
                                                });
                                                this._layoutAxes(n)
                                            },
                                            getRect: function() {
                                                return this._rect
                                            },
                                            _layoutAxes: function(n) {
                                                var e = this._rect,
                                                    o = n.get("layout"),
                                                    k = this._axesMap,
                                                    s = this.dimensions,
                                                    a = [e.width, e.height],
                                                    v = o === "horizontal" ? 0 : 1,
                                                    d = a[v],
                                                    y = a[1 - v],
                                                    p = [0, y],
                                                    h, u, b;
                                                r(k, function(n) {
                                                    var t = n.inverse ? 1 : 0;
                                                    n.setExtent(p[t], p[1 - t])
                                                });
                                                var g = n.get("axisExpandable"),
                                                    i = n.get("axisExpandWidth"),
                                                    w = n.get("axisExpandCenter"),
                                                    c = n.get("axisExpandCount") || 0,
                                                    t;
                                                w != null && (h = Math.max(0, Math.floor(w - (c - 1) / 2)), u = h + c - 1, u >= s.length && (u = s.length - 1, h = Math.max(0, Math.floor(u - c + 1))), t = [h, u]);
                                                b = g && t && i ? function(n, r, u) {
                                                    var e = t[1] - t[0],
                                                        f = (r - i * e) / (u - 1 - e),
                                                        o;
                                                    return o = n < t[0] ? (n - 1) * f : n <= t[1] ? t[0] * f + (n - t[0]) * i : n === u - 1 ? r : t[0] * f + e * i + (n - t[1]) * f, {
                                                        position: o,
                                                        axisNameAvailableWidth: t[0] < n && n < t[1] ? i : f
                                                    }
                                                } : function(n, t, i) {
                                                    var r = t / (i - 1);
                                                    return {
                                                        position: r * n,
                                                        axisNameAvailableWidth: r
                                                    }
                                                };
                                                r(s, function(n, i) {
                                                    var u = b(i, d, s.length),
                                                        h = {
                                                            horizontal: {
                                                                x: u.position,
                                                                y: y
                                                            },
                                                            vertical: {
                                                                x: 0,
                                                                y: u.position
                                                            }
                                                        },
                                                        v = {
                                                            horizontal: l / 2,
                                                            vertical: 0
                                                        },
                                                        c = [h[o].x + e.x, h[o].y + e.y],
                                                        a = v[o],
                                                        r = f.create();
                                                    f.rotate(r, r, a);
                                                    f.translate(r, r, c);
                                                    this._axesLayout[n] = {
                                                        position: c,
                                                        rotation: a,
                                                        transform: r,
                                                        axisNameAvailableWidth: u.axisNameAvailableWidth,
                                                        tickDirection: 1,
                                                        labelDirection: 1,
                                                        axisExpandWindow: t
                                                    }
                                                }, this)
                                            },
                                            getAxis: function(n) {
                                                return this._axesMap[n]
                                            },
                                            dataToPoint: function(n, t) {
                                                return this.axisCoordToPoint(this._axesMap[t].dataToCoord(n), t)
                                            },
                                            eachActiveState: function(n, t, i) {
                                                for (var o, f, r, s, h, c, e = this.dimensions, l = this._axesMap, a = this.hasAxisbrushed(), u = 0, v = n.count(); u < v; u++) {
                                                    if (o = n.getValues(e, u), a) {
                                                        for (f = "active", r = 0, s = e.length; r < s; r++)
                                                            if (h = e[r], c = l[h].model.getActiveState(o[r], r), c === "inactive") {
                                                                f = "inactive";
                                                                break
                                                            }
                                                    } else f = "normal";
                                                    t.call(i, f, u)
                                                }
                                            },
                                            hasAxisbrushed: function() {
                                                for (var t = this.dimensions, r = this._axesMap, i = !1, n = 0, u = t.length; n < u; n++) r[t[n]].model.getActiveState() !== "normal" && (i = !0);
                                                return i
                                            },
                                            axisCoordToPoint: function(n, t) {
                                                var i = this._axesLayout[t];
                                                return s.applyTransform([n, 0], i.transform)
                                            },
                                            getAxisLayout: function(n) {
                                                return u.clone(this._axesLayout[n])
                                            },
                                            findClosestAxisDim: function(n) {
                                                var t, i = Infinity;
                                                return u.each(this._axesLayout, function(r, u) {
                                                    var f = s.applyTransform(n, r.transform, !0),
                                                        o = this._axesMap[u].getExtent(),
                                                        e;
                                                    f[0] < o[0] || f[0] > o[1] || (e = Math.abs(f[1]), e < i && (i = e, t = u))
                                                }, this), t
                                            }
                                        };
                                        n.exports = e
                                    }, function(n, t, i) {
                                        var f = i(4),
                                            u = i(123),
                                            r = function(n, t, i, r, f) {
                                                u.call(this, n, t, i);
                                                this.type = r || "value";
                                                this.axisIndex = f
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            model: null
                                        };
                                        f.inherits(r, u);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(19);
                                        i(230);
                                        u.extend({
                                            type: "parallel",
                                            dependencies: ["parallelAxis"],
                                            coordinateSystem: null,
                                            dimensions: null,
                                            parallelAxisIndex: null,
                                            layoutMode: "box",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 0,
                                                left: 80,
                                                top: 60,
                                                right: 80,
                                                bottom: 60,
                                                layout: "horizontal",
                                                axisExpandable: !1,
                                                axisExpandCenter: null,
                                                axisExpandCount: 0,
                                                axisExpandWidth: 50,
                                                parallelAxisDefault: null
                                            },
                                            init: function() {
                                                u.prototype.init.apply(this, arguments);
                                                this.mergeOption({})
                                            },
                                            mergeOption: function(n) {
                                                var t = this.option;
                                                n && r.merge(t, n, !0);
                                                this._initDimensions()
                                            },
                                            contains: function(n, t) {
                                                var i = n.get("parallelIndex");
                                                return i != null && t.getComponent("parallel", i) === this
                                            },
                                            setAxisExpand: function(n) {
                                                r.each(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth"], function(t) {
                                                    n.hasOwnProperty(t) && (this.option[t] = n[t])
                                                }, this)
                                            },
                                            _initDimensions: function() {
                                                var n = this.dimensions = [],
                                                    t = this.parallelAxisIndex = [],
                                                    i = r.filter(this.dependentModels.parallelAxis, function(n) {
                                                        return n.get("parallelIndex") === this.componentIndex
                                                    });
                                                r.each(i, function(i) {
                                                    n.push("dim" + i.get("dim"));
                                                    t.push(i.componentIndex)
                                                })
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function h(n, t) {
                                            return t.type || (t.data ? "category" : "value")
                                        }
                                        var f = i(19),
                                            u = i(4),
                                            e = i(15),
                                            o = i(127),
                                            s = i(7),
                                            r = f.extend({
                                                type: "baseParallelAxis",
                                                axis: null,
                                                activeIntervals: [],
                                                getAreaSelectStyle: function() {
                                                    return e([
                                                        ["fill", "color"],
                                                        ["lineWidth", "borderWidth"],
                                                        ["stroke", "borderColor"],
                                                        ["width", "width"],
                                                        ["opacity", "opacity"]
                                                    ]).call(this.getModel("areaSelectStyle"))
                                                },
                                                setActiveIntervals: function(n) {
                                                    var i = this.activeIntervals = u.clone(n),
                                                        t;
                                                    if (i)
                                                        for (t = i.length - 1; t >= 0; t--) s.asc(i[t])
                                                },
                                                getActiveState: function(n) {
                                                    var i = this.activeIntervals,
                                                        t, r;
                                                    if (!i.length) return "normal";
                                                    if (n == null) return "inactive";
                                                    for (t = 0, r = i.length; t < r; t++)
                                                        if (i[t][0] <= n && n <= i[t][1]) return "active";
                                                    return "inactive"
                                                }
                                            });
                                        u.merge(r.prototype, i(129));
                                        o("parallel", r, h, {
                                            type: "value",
                                            dim: null,
                                            areaSelectStyle: {
                                                width: 20,
                                                borderWidth: 1,
                                                borderColor: "rgba(160,197,232)",
                                                color: "rgba(160,197,232)",
                                                opacity: .3
                                            },
                                            realtime: !0,
                                            z: 10
                                        });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        i(226);
                                        i(232);
                                        i(233)
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        r.registerAction({
                                            type: "axisAreaSelect",
                                            event: "axisAreaSelected",
                                            update: "updateVisual"
                                        }, function(n, t) {
                                            t.eachComponent({
                                                mainType: "parallelAxis",
                                                query: n
                                            }, function(t) {
                                                t.axis.model.setActiveIntervals(n.intervals)
                                            })
                                        });
                                        r.registerAction("parallelAxisExpand", function(n, t) {
                                            t.eachComponent({
                                                mainType: "parallel",
                                                query: n
                                            }, function(t) {
                                                t.setAxisExpand(n)
                                            })
                                        })
                                    }, function(n, t, i) {
                                        function h(n, t, i) {
                                            return i && i.type === "axisAreaSelect" && t.findComponents({
                                                mainType: "parallelAxis",
                                                query: i
                                            })[0] === n
                                        }
                                        var r = i(4),
                                            e = i(133),
                                            o = i(234),
                                            u = i(43),
                                            s = ["axisLine", "axisLabel", "axisTick", "axisName"],
                                            f = i(1).extendComponentView({
                                                type: "parallelAxis",
                                                init: function(n, t) {
                                                    f.superApply(this, "init", arguments);
                                                    (this._brushController = new o(t.getZr())).on("brush", r.bind(this._onBrush, this))
                                                },
                                                render: function(n, t, i, f) {
                                                    var a, l, o;
                                                    if (!h(n, t, f) && (this.axisModel = n, this.api = i, this.group.removeAll(), a = this._axisGroup, this._axisGroup = new u.Group, this.group.add(this._axisGroup), n.get("show"))) {
                                                        var v = t.getComponent("parallel", n.get("parallelIndex")).coordinateSystem,
                                                            y = n.getAreaSelectStyle(),
                                                            p = y.width,
                                                            w = n.axis.dim,
                                                            b = v.getAxisLayout(w),
                                                            k, d = r.indexOf(v.dimensions, w),
                                                            c = b.axisExpandWindow;
                                                        c && (d <= c[0] || d >= c[1]) && (k = !1);
                                                        l = r.extend({
                                                            axisLabelShow: k,
                                                            strokeContainThreshold: p
                                                        }, b);
                                                        o = new e(n, l);
                                                        r.each(s, o.add, o);
                                                        this._axisGroup.add(o.getGroup());
                                                        this._refreshBrushController(l, y, n, p);
                                                        u.groupTransition(a, this._axisGroup, n)
                                                    }
                                                },
                                                _refreshBrushController: function(n, t, i, f) {
                                                    var e = i.axis,
                                                        l = r.map(i.activeIntervals, function(n) {
                                                            return {
                                                                brushType: "lineX",
                                                                panelId: "pl",
                                                                range: [e.dataToCoord(n[0], !0), e.dataToCoord(n[1], !0)]
                                                            }
                                                        }),
                                                        o = e.getExtent(),
                                                        h = o[1] - o[0],
                                                        c = Math.min(30, Math.abs(h) * .1),
                                                        s = u.BoundingRect.create({
                                                            x: o[0],
                                                            y: -f / 2,
                                                            width: h,
                                                            height: f
                                                        });
                                                    s.x -= c;
                                                    s.width += 2 * c;
                                                    this._brushController.mount({
                                                        enableGlobalPan: !0,
                                                        rotation: n.rotation,
                                                        position: n.position
                                                    }).setPanels([{
                                                        panelId: "pl",
                                                        rect: s
                                                    }]).enableBrush({
                                                        brushType: "lineX",
                                                        brushStyle: t,
                                                        removeOnClick: !0
                                                    }).updateCovers(l)
                                                },
                                                _onBrush: function(n, t) {
                                                    var i = this.axisModel,
                                                        u = i.axis,
                                                        f = r.map(n, function(n) {
                                                            return [u.coordToData(n.range[0], !0), u.coordToData(n.range[1], !0)]
                                                        });
                                                    (!i.option.realtime === t.isEnd || t.removeOnClick) && this.api.dispatchAction({
                                                        type: "axisAreaSelect",
                                                        parallelAxisId: i.id,
                                                        intervals: f
                                                    })
                                                },
                                                dispose: function() {
                                                    this._brushController.dispose()
                                                }
                                            });
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function a(n) {
                                            !0 && r.assert(n);
                                            tt.call(this);
                                            this._zr = n;
                                            this.group = new f.Group;
                                            this._brushType;
                                            this._brushOption;
                                            this._panels;
                                            this._track = [];
                                            this._dragging;
                                            this._covers = [];
                                            this._creatingCover;
                                            this._creatingPanel;
                                            this._enableGlobalPan;
                                            !0 && this._mounted;
                                            this._uid = "brushController_" + hi++;
                                            this._handlers = {};
                                            u(gt, function(n, t) {
                                                this._handlers[t] = r.bind(n, this)
                                            }, this)
                                        }

                                        function ci(n, t) {
                                            var i = n._zr;
                                            n._enableGlobalPan || rt.take(i, ft, n._uid);
                                            u(n._handlers, function(n, t) {
                                                i.on(t, n)
                                            });
                                            n._brushType = t.brushType;
                                            n._brushOption = r.merge(r.clone(et), t, !0)
                                        }

                                        function li(n) {
                                            var t = n._zr;
                                            rt.release(t, ft, n._uid);
                                            u(n._handlers, function(n, i) {
                                                t.off(i, n)
                                            });
                                            n._brushType = n._brushOption = null
                                        }

                                        function ot(n, t) {
                                            var i = l[t.brushType].createCover(n, t);
                                            return ct(i), i.__brushOption = t, n.group.add(i), i
                                        }

                                        function st(n, t) {
                                            var i = y(t);
                                            return i.endCreating && (i.endCreating(n, t), ct(t)), t
                                        }

                                        function ht(n, t) {
                                            var i = t.__brushOption;
                                            y(t).updateCoverShape(n, t, i.range, i)
                                        }

                                        function ct(n) {
                                            n.traverse(function(n) {
                                                n.z = ut;
                                                n.z2 = ut
                                            })
                                        }

                                        function v(n, t) {
                                            y(t).updateCommon(n, t);
                                            ht(n, t)
                                        }

                                        function y(n) {
                                            return l[n.__brushOption.brushType]
                                        }

                                        function lt(n, t, i) {
                                            var r = n._panels,
                                                f;
                                            return r ? (u(r, function(n) {
                                                n.contain(t, i) && (f = n)
                                            }), f) : !0
                                        }

                                        function at(n, t) {
                                            var r = n._panels,
                                                i;
                                            return r ? (i = t.__brushOption.panelId, i != null ? r[i] : !0) : !0
                                        }

                                        function p(n) {
                                            var t = n._covers,
                                                i = t.length;
                                            return u(t, function(t) {
                                                n.group.remove(t)
                                            }, n), t.length = 0, !!i
                                        }

                                        function c(n, t) {
                                            var i = ri(n._covers, function(n) {
                                                var t = n.__brushOption,
                                                    i = r.clone(t.range);
                                                return {
                                                    brushType: t.brushType,
                                                    panelId: t.panelId,
                                                    range: i
                                                }
                                            });
                                            n.trigger("brush", i, {
                                                isEnd: !!t.isEnd,
                                                removeOnClick: !!t.removeOnClick
                                            })
                                        }

                                        function ai(n) {
                                            var t = n._track;
                                            if (!t.length) return !1;
                                            var i = t[t.length - 1],
                                                r = t[0],
                                                u = i[0] - r[0],
                                                f = i[1] - r[1],
                                                e = ui(u * u + f * f, .5);
                                            return e > fi
                                        }

                                        function vt(n) {
                                            var t = n.length - 1;
                                            return t < 0 && (t = 0), [n[0], n[t]]
                                        }

                                        function yt(n, t, i, r) {
                                            var e = new f.Group;
                                            return e.add(new f.Rect({
                                                name: "main",
                                                style: b(i),
                                                silent: !0,
                                                draggable: !0,
                                                cursor: "move",
                                                drift: o(n, t, e, "nswe"),
                                                ondragend: o(c, t, {
                                                    isEnd: !0
                                                })
                                            })), u(r, function(i) {
                                                e.add(new f.Rect({
                                                    name: i,
                                                    style: {
                                                        opacity: 0
                                                    },
                                                    draggable: !0,
                                                    silent: !0,
                                                    invisible: !0,
                                                    drift: o(n, t, e, i),
                                                    ondragend: o(c, t, {
                                                        isEnd: !0
                                                    })
                                                }))
                                            }), e
                                        }

                                        function pt(n, t, i, r) {
                                            var f = r.brushStyle.lineWidth || 0,
                                                u = s(f, ei),
                                                c = i[0][0],
                                                l = i[1][0],
                                                o = c - f / 2,
                                                h = l - f / 2,
                                                y = i[0][1],
                                                p = i[1][1],
                                                a = y - u + f / 2,
                                                v = p - u + f / 2,
                                                w = y - c,
                                                b = p - l,
                                                k = w + f,
                                                d = b + f;
                                            e(n, t, "main", c, l, w, b);
                                            r.transformable && (e(n, t, "w", o, h, u, d), e(n, t, "e", a, h, u, d), e(n, t, "n", o, h, k, u), e(n, t, "s", o, v, k, u), e(n, t, "nw", o, h, u, u), e(n, t, "ne", a, h, u, u), e(n, t, "sw", o, v, u, u), e(n, t, "se", a, v, u, u))
                                        }

                                        function w(n, t) {
                                            var r = t.__brushOption,
                                                i = r.transformable,
                                                f = t.childAt(0);
                                            f.useStyle(b(r));
                                            f.attr({
                                                silent: !i,
                                                cursor: i ? "move" : "default"
                                            });
                                            u(["w", "e", "n", "s", "se", "sw", "ne", "nw"], function(r) {
                                                var u = t.childOfName(r),
                                                    f = k(n, r);
                                                u && u.attr({
                                                    silent: !i,
                                                    invisible: !i,
                                                    cursor: i ? si[f] + "-resize" : null
                                                })
                                            })
                                        }

                                        function e(n, t, i, r, u, f, e) {
                                            var o = t.childOfName(i);
                                            o && o.setShape(pi(d(n, t, [
                                                [r, u],
                                                [r + f, u + e]
                                            ])))
                                        }

                                        function b(n) {
                                            return r.defaults({
                                                strokeNoScale: !0
                                            }, n.brushStyle)
                                        }

                                        function wt(n, t, i, r) {
                                            var u = [h(n, i), h(t, r)],
                                                f = [s(n, i), s(t, r)];
                                            return [
                                                [u[0], f[0]],
                                                [u[1], f[1]]
                                            ]
                                        }

                                        function vi(n) {
                                            return f.getTransform(n.group)
                                        }

                                        function k(n, t) {
                                            var i;
                                            if (t.length > 1) return t = t.split(""), i = [k(n, t[0]), k(n, t[1])], (i[0] === "e" || i[0] === "w") && i.reverse(), i.join("");
                                            var i = f.transformDirection({
                                                w: "left",
                                                e: "right",
                                                n: "top",
                                                s: "bottom"
                                            }[t], vi(n));
                                            return {
                                                left: "w",
                                                right: "e",
                                                top: "n",
                                                bottom: "s"
                                            }[i]
                                        }

                                        function bt(n, t, i, r, f, e, o) {
                                            var h = r.__brushOption,
                                                s = n(h.range),
                                                l = kt(i, e, o);
                                            u(f.split(""), function(n) {
                                                var t = oi[n];
                                                s[t[0]][t[1]] += l[t[0]]
                                            });
                                            h.range = t(wt(s[0][0], s[1][0], s[0][1], s[1][1]));
                                            v(i, r);
                                            c(i, {
                                                isEnd: !1
                                            })
                                        }

                                        function yi(n, t, i, r) {
                                            var e = t.__brushOption.range,
                                                f = kt(n, i, r);
                                            u(e, function(n) {
                                                n[0] += f[0];
                                                n[1] += f[1]
                                            });
                                            v(n, t);
                                            c(n, {
                                                isEnd: !1
                                            })
                                        }

                                        function kt(n, t, i) {
                                            var r = n.group,
                                                u = r.transformCoordToLocal(t, i),
                                                f = r.transformCoordToLocal(0, 0);
                                            return [u[0] - f[0], u[1] - f[1]]
                                        }

                                        function d(n, t, i) {
                                            var f = at(n, t),
                                                u;
                                            return f === !0 ? r.clone(i) : (u = f.getBoundingRect(), r.map(i, function(n) {
                                                var i = n[0],
                                                    t;
                                                return i = s(i, u.x), i = h(i, u.x + u.width), t = n[1], t = s(t, u.y), t = h(t, u.y + u.height), [i, t]
                                            }))
                                        }

                                        function pi(n) {
                                            var t = h(n[0][0], n[1][0]),
                                                i = h(n[0][1], n[1][1]),
                                                r = s(n[0][0], n[1][0]),
                                                u = s(n[0][1], n[1][1]);
                                            return {
                                                x: t,
                                                y: i,
                                                width: r - t,
                                                height: u - i
                                            }
                                        }

                                        function wi(n, t) {
                                            var e = t.offsetX,
                                                o = t.offsetY,
                                                s = n._zr,
                                                f, r, h, i;
                                            if (n._brushType) {
                                                for (f = n._panels, r = n._covers, i = 0; i < r.length; i++)
                                                    if (l[r[i].__brushOption.brushType].contain(r[i], e, o)) {
                                                        h = !0;
                                                        break
                                                    }
                                                h || (f ? u(f, function(n) {
                                                    n.contain(e, o) && s.setCursorStyle("crosshair")
                                                }) : s.setCursorStyle("crosshair"))
                                            }
                                        }

                                        function g(n) {
                                            var t = n.event;
                                            t.preventDefault && t.preventDefault()
                                        }

                                        function nt(n, t, i) {
                                            return n.childOfName("main").contain(t, i)
                                        }

                                        function dt(n, t, i) {
                                            var c = t.offsetX,
                                                a = t.offsetY,
                                                u = n._creatingCover,
                                                e = n._creatingPanel,
                                                f = n._brushOption,
                                                o, s, h, v;
                                            return n._track.push(n.group.transformCoordToLocal(c, a)), ai(n) || u ? (e && !u && (f.brushMode === "single" && p(n), s = r.clone(f), s.panelId = e === !0 ? null : e.__brushPanelId, u = n._creatingCover = ot(n, s), n._covers.push(u)), u && (h = l[n._brushType], v = u.__brushOption, v.range = h.getCreatingRange(d(n, u, n._track)), i && (st(n, u), h.updateCommon(n, u)), ht(n, u), o = {
                                                isEnd: i
                                            })) : i && f.brushMode === "single" && f.removeOnClick && lt(n, c, a) && p(n) && (o = {
                                                isEnd: i,
                                                removeOnClick: !0
                                            }), o
                                        }

                                        function ni(n) {
                                            if (this._dragging) {
                                                g(n);
                                                var t = dt(this, n, !0);
                                                this._dragging = !1;
                                                this._track = [];
                                                this._creatingCover = null;
                                                t && c(this, t)
                                            }
                                        }

                                        function ti(n) {
                                            return {
                                                createCover: function(t, i) {
                                                    return yt(o(bt, function(t) {
                                                        var i = [t, [0, 100]];
                                                        return n && i.reverse(), i
                                                    }, function(t) {
                                                        return t[n]
                                                    }), t, i, [
                                                        ["w", "e"],
                                                        ["n", "s"]
                                                    ][n])
                                                },
                                                getCreatingRange: function(t) {
                                                    var i = vt(t),
                                                        r = h(i[0][n], i[1][n]),
                                                        u = s(i[0][n], i[1][n]);
                                                    return [r, u]
                                                },
                                                updateCoverShape: function(t, i, r, u) {
                                                    var f = u.brushStyle.width,
                                                        s, h, o, e, c;
                                                    f == null ? (h = at(t, i), o = 0, h !== !0 && (e = h.getBoundingRect(), f = n ? e.width : e.height, o = n ? e.x : e.y), s = [o, o + (f || 0)]) : s = [-f / 2, f / 2];
                                                    c = [r, s];
                                                    n && c.reverse();
                                                    pt(t, i, c, u)
                                                },
                                                updateCommon: w,
                                                contain: nt
                                            }
                                        }
                                        var tt = i(33),
                                            r = i(4),
                                            it = i(9),
                                            f = i(43),
                                            rt = i(176),
                                            ii = i(98),
                                            o = r.curry,
                                            u = r.each,
                                            ri = r.map,
                                            h = Math.min,
                                            s = Math.max,
                                            ui = Math.pow,
                                            ut = 1e4,
                                            fi = 6,
                                            ei = 6,
                                            ft = "globalPan",
                                            oi = {
                                                w: [0, 0],
                                                e: [0, 1],
                                                n: [1, 0],
                                                s: [1, 1]
                                            },
                                            si = {
                                                w: "ew",
                                                e: "ew",
                                                n: "ns",
                                                s: "ns",
                                                ne: "nesw",
                                                sw: "nesw",
                                                nw: "nwse",
                                                se: "nwse"
                                            },
                                            et = {
                                                brushStyle: {
                                                    lineWidth: 2,
                                                    stroke: "rgba(0,0,0,0.3)",
                                                    fill: "rgba(0,0,0,0.1)"
                                                },
                                                transformable: !0,
                                                brushMode: "single",
                                                removeOnClick: !1
                                            },
                                            hi = 0,
                                            gt, l;
                                        a.prototype = {
                                            constructor: a,
                                            enableBrush: function(n) {
                                                return !0 && r.assert(this._mounted), this._brushType && li(this), n.brushType && ci(this, n), this
                                            },
                                            setPanels: function(n) {
                                                var t = this._panels || {},
                                                    i = this._panels = n && n.length && {},
                                                    r = this.group;
                                                return i && u(n, function(n) {
                                                    var o = n.panelId,
                                                        u = t[o],
                                                        e;
                                                    u || (u = new f.Rect({
                                                        silent: !0,
                                                        invisible: !0
                                                    }), r.add(u));
                                                    e = n.rect;
                                                    e instanceof it || (e = it.create(e));
                                                    u.attr("shape", e.plain());
                                                    u.__brushPanelId = o;
                                                    i[o] = u;
                                                    t[o] = null
                                                }), u(t, function(n) {
                                                    n && r.remove(n)
                                                }), this
                                            },
                                            mount: function(n) {
                                                n = n || {};
                                                !0 && (this._mounted = !0);
                                                this._enableGlobalPan = n.enableGlobalPan;
                                                var t = this.group;
                                                return this._zr.add(t), t.attr({
                                                    position: n.position || [0, 0],
                                                    rotation: n.rotation || 0,
                                                    scale: n.scale || [1, 1]
                                                }), this
                                            },
                                            eachCover: function(n, t) {
                                                u(this._covers, n, t)
                                            },
                                            updateCovers: function(n) {
                                                function e(n, t) {
                                                    return (n.id != null ? n.id : s + t) + "-" + n.brushType
                                                }

                                                function h(n, t) {
                                                    return e(n.__brushOption, t)
                                                }

                                                function o(r, e) {
                                                    var o = n[r],
                                                        s;
                                                    e != null && t[e] === f ? u[r] = t[e] : (s = u[r] = e != null ? (t[e].__brushOption = o, t[e]) : st(i, ot(i, o)), v(i, s))
                                                }

                                                function c(n) {
                                                    t[n] !== f && i.group.remove(t[n])
                                                }!0 && r.assert(this._mounted);
                                                n = r.map(n, function(n) {
                                                    return r.merge(r.clone(et), n, !0)
                                                });
                                                var s = '\0-brush-index-',
                                                    t = this._covers,
                                                    u = this._covers = [],
                                                    i = this,
                                                    f = this._creatingCover;
                                                return new ii(t, n, h, e).add(o).update(o).remove(c).execute(), this
                                            },
                                            unmount: function() {
                                                return this.enableBrush(!1), p(this), this._zr.remove(this.group), !0 && (this._mounted = !1), this
                                            },
                                            dispose: function() {
                                                this.unmount();
                                                this.off()
                                            }
                                        };
                                        r.mixin(a, tt);
                                        gt = {
                                            mousedown: function(n) {
                                                var t, i, r;
                                                this._dragging ? ni.call(this, n) : n.target && n.target.draggable || (g(n), t = n.offsetX, i = n.offsetY, this._creatingCover = null, r = this._creatingPanel = lt(this, t, i), r && (this._dragging = !0, this._track = [this.group.transformCoordToLocal(t, i)]))
                                            },
                                            mousemove: function(n) {
                                                if (wi(this, n), this._dragging) {
                                                    g(n);
                                                    var t = dt(this, n, !1);
                                                    t && c(this, t)
                                                }
                                            },
                                            mouseup: ni
                                        };
                                        l = {
                                            lineX: ti(0),
                                            lineY: ti(1),
                                            rect: {
                                                createCover: function(n, t) {
                                                    return yt(o(bt, function(n) {
                                                        return n
                                                    }, function(n) {
                                                        return n
                                                    }), n, t, ["w", "e", "n", "s", "se", "sw", "ne", "nw"])
                                                },
                                                getCreatingRange: function(n) {
                                                    var t = vt(n);
                                                    return wt(t[1][0], t[1][1], t[0][0], t[0][1])
                                                },
                                                updateCoverShape: function(n, t, i, r) {
                                                    pt(n, t, i, r)
                                                },
                                                updateCommon: w,
                                                contain: nt
                                            },
                                            polygon: {
                                                createCover: function(n, t) {
                                                    var i = new f.Group;
                                                    return i.add(new f.Polyline({
                                                        name: "main",
                                                        style: b(t),
                                                        silent: !0
                                                    })), i
                                                },
                                                getCreatingRange: function(n) {
                                                    return n
                                                },
                                                endCreating: function(n, t) {
                                                    t.remove(t.childAt(0));
                                                    t.add(new f.Polygon({
                                                        name: "main",
                                                        draggable: !0,
                                                        drift: o(yi, n, t),
                                                        ondragend: o(c, n, {
                                                            isEnd: !0
                                                        })
                                                    }))
                                                },
                                                updateCoverShape: function(n, t, i) {
                                                    t.childAt(0).setShape({
                                                        points: d(n, t, i)
                                                    })
                                                },
                                                updateCommon: w,
                                                contain: nt
                                            }
                                        };
                                        n.exports = a
                                    }, function(n, t, i) {
                                        function f(n) {
                                            if (!n.parallel) {
                                                var t = !1;
                                                r.each(n.series, function(n) {
                                                    n && n.type === "parallel" && (t = !0)
                                                });
                                                t && (n.parallel = [{}])
                                            }
                                        }

                                        function e(n) {
                                            var t = u.normalizeToArray(n.parallelAxis);
                                            r.each(t, function(t) {
                                                if (r.isObject(t)) {
                                                    var f = t.parallelIndex || 0,
                                                        i = u.normalizeToArray(n.parallel)[f];
                                                    i && i.parallelAxisDefault && r.merge(t, i.parallelAxisDefault, !1)
                                                }
                                            })
                                        }
                                        var r = i(4),
                                            u = i(5);
                                        n.exports = function(n) {
                                            f(n);
                                            e(n)
                                        }
                                    }, function(n, t, i) {
                                        function s(n, t, i) {
                                            var f = n.get("data"),
                                                e = u(t);
                                            f && f.length && r.each(i, function(n) {
                                                if (n) {
                                                    var t = r.indexOf(f, n[e]);
                                                    n[e] = t >= 0 ? t : NaN
                                                }
                                            })
                                        }

                                        function u(n) {
                                            return +n.replace("dim", "")
                                        }

                                        function h(n, t) {
                                            var i = 0,
                                                f, o, e;
                                            for (r.each(n, function(n) {
                                                    var t = u(n);
                                                    t > i && (i = t)
                                                }), f = t[0], f && f.length - 1 > i && (i = f.length - 1), o = [], e = 0; e <= i; e++) o.push("dim" + e);
                                            return o
                                        }
                                        var f = i(97),
                                            r = i(4),
                                            e = i(28),
                                            o = i(102);
                                        n.exports = e.extend({
                                            type: "series.parallel",
                                            dependencies: ["parallel"],
                                            getInitialData: function(n, t) {
                                                var u = t.getComponent("parallel", this.get("parallelIndex")),
                                                    l = u.parallelAxisIndex,
                                                    i = n.data,
                                                    e = u.dimensions,
                                                    a = h(e, i),
                                                    v = r.map(a, function(n, u) {
                                                        var f = r.indexOf(e, n),
                                                            h = f >= 0 && t.getComponent("parallelAxis", l[f]);
                                                        return h && h.get("type") === "category" ? (s(h, n, i), {
                                                            name: n,
                                                            type: "ordinal"
                                                        }) : f < 0 ? o.guessOrdinal(i, u) ? {
                                                            name: n,
                                                            type: "ordinal"
                                                        } : n : n
                                                    }),
                                                    c = new f(v, this);
                                                return c.initData(i), this.option.progressive && (this.option.animation = !1), c
                                            },
                                            getRawIndicesByActiveState: function(n) {
                                                var r = this.coordinateSystem,
                                                    t = this.getData(),
                                                    i = [];
                                                return r.eachActiveState(t, function(r, u) {
                                                    n === r && i.push(t.getRawIndex(u))
                                                }), i
                                            },
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 2,
                                                coordinateSystem: "parallel",
                                                parallelIndex: 0,
                                                label: {
                                                    normal: {
                                                        show: !1
                                                    },
                                                    emphasis: {
                                                        show: !1
                                                    }
                                                },
                                                inactiveOpacity: .05,
                                                activeOpacity: 1,
                                                lineStyle: {
                                                    normal: {
                                                        width: 1,
                                                        opacity: .45,
                                                        type: "solid"
                                                    }
                                                },
                                                progressive: !1,
                                                smooth: !1,
                                                animationEasing: "linear"
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function s(n, t, i) {
                                            var e = n.model,
                                                u = n.getRect(),
                                                f = new r.Rect({
                                                    shape: {
                                                        x: u.x,
                                                        y: u.y,
                                                        width: u.width,
                                                        height: u.height
                                                    }
                                                }),
                                                o = e.get("layout") === "horizontal" ? "width" : "height";
                                            return f.setShape(o, 0), r.initProps(f, {
                                                shape: {
                                                    width: u.width,
                                                    height: u.height
                                                }
                                            }, t, i), f
                                        }

                                        function u(n, t, i, r) {
                                            for (var u, e, o = [], f = 0; f < i.length; f++) u = i[f], e = n.get(u, t), l(e, r.getAxis(u).type) || o.push(r.dataToPoint(e, u));
                                            return o
                                        }

                                        function h(n, t, i, f, e) {
                                            var s = u(n, i, f, e),
                                                o = new r.Polyline({
                                                    shape: {
                                                        points: s
                                                    },
                                                    silent: !0,
                                                    z2: 10
                                                });
                                            t.add(o);
                                            n.setItemGraphicEl(i, o)
                                        }

                                        function c(n, t) {
                                            var i = n.hostModel.getModel("lineStyle.normal"),
                                                r = i.getLineStyle();
                                            n.eachItemGraphicEl(function(u, e) {
                                                if (n.hasItemOption) {
                                                    var o = n.getItemModel(e),
                                                        s = o.getModel("lineStyle.normal", i);
                                                    r = s.getLineStyle()
                                                }
                                                u.useStyle(f.extend(r, {
                                                    fill: null,
                                                    stroke: n.getItemVisual(e, "color"),
                                                    opacity: n.getItemVisual(e, "opacity")
                                                }));
                                                u.shape.smooth = t
                                            })
                                        }

                                        function l(n, t) {
                                            return t === "category" ? n == null : n == null || isNaN(n)
                                        }
                                        var r = i(43),
                                            f = i(4),
                                            e = .3,
                                            o = i(42).extend({
                                                type: "parallel",
                                                init: function() {
                                                    this._dataGroup = new r.Group;
                                                    this.group.add(this._dataGroup);
                                                    this._data
                                                },
                                                render: function(n) {
                                                    this._renderForNormal(n)
                                                },
                                                dispose: function() {},
                                                _renderForNormal: function(n) {
                                                    function p(n) {
                                                        h(t, i, n, l, f, null, a)
                                                    }

                                                    function w(i, e) {
                                                        var s = o.getItemGraphicEl(e),
                                                            h = u(t, i, l, f);
                                                        t.setItemGraphicEl(i, s);
                                                        r.updateProps(s, {
                                                            shape: {
                                                                points: h
                                                            }
                                                        }, n, i)
                                                    }

                                                    function b(n) {
                                                        var t = o.getItemGraphicEl(n);
                                                        i.remove(t)
                                                    }
                                                    var i = this._dataGroup,
                                                        t = n.getData(),
                                                        o = this._data,
                                                        f = n.coordinateSystem,
                                                        l = f.dimensions,
                                                        y = n.option,
                                                        a = y.smooth ? e : null,
                                                        v;
                                                    t.diff(o).add(p).update(w).remove(b).execute();
                                                    c(t, a);
                                                    this._data || (v = s(f, n, function() {
                                                        setTimeout(function() {
                                                            i.removeClipPath()
                                                        })
                                                    }), i.setClipPath(v));
                                                    this._data = t
                                                },
                                                remove: function() {
                                                    this._dataGroup && this._dataGroup.removeAll();
                                                    this._data = null
                                                }
                                            });
                                        n.exports = o
                                    }, function(n) {
                                        n.exports = function(n) {
                                            n.eachSeriesByType("parallel", function(t) {
                                                var u = t.getModel("itemStyle.normal"),
                                                    f = t.getModel("lineStyle.normal"),
                                                    r = n.get("color"),
                                                    e = f.get("color") || u.get("color") || r[t.seriesIndex % r.length],
                                                    o = t.get("inactiveOpacity"),
                                                    s = t.get("activeOpacity"),
                                                    h = t.getModel("lineStyle.normal").getLineStyle(),
                                                    c = t.coordinateSystem,
                                                    i = t.getData(),
                                                    l = {
                                                        normal: h.opacity,
                                                        active: s,
                                                        inactive: o
                                                    };
                                                c.eachActiveState(i, function(n, t) {
                                                    i.setItemVisual(t, "opacity", l[n])
                                                });
                                                i.setVisual("color", e)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        i(240);
                                        i(241);
                                        r.registerLayout(i(242));
                                        r.registerVisual(i(244))
                                    }, function(n, t, i) {
                                        var u = i(28),
                                            f = i(197),
                                            r = u.extend({
                                                type: "series.sankey",
                                                layoutInfo: null,
                                                getInitialData: function(n) {
                                                    var t = n.edges || n.links,
                                                        i = n.data || n.nodes,
                                                        r;
                                                    if (i && t) return r = f(i, t, this, !0), r.data
                                                },
                                                getGraph: function() {
                                                    return this.getData().graph
                                                },
                                                getEdgeData: function() {
                                                    return this.getGraph().edgeData
                                                },
                                                formatTooltip: function(n, t, i) {
                                                    if (i === "edge") {
                                                        var u = this.getDataParams(n, i),
                                                            f = u.data,
                                                            e = f.source + " -- " + f.target;
                                                        return u.value && (e += " : " + u.value), e
                                                    }
                                                    return r.superCall(this, "formatTooltip", n, t)
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "view",
                                                    layout: null,
                                                    left: "5%",
                                                    top: "5%",
                                                    right: "20%",
                                                    bottom: "5%",
                                                    nodeWidth: 20,
                                                    nodeGap: 8,
                                                    layoutIterations: 32,
                                                    label: {
                                                        normal: {
                                                            show: !0,
                                                            position: "right",
                                                            textStyle: {
                                                                color: "#000",
                                                                fontSize: 12
                                                            }
                                                        },
                                                        emphasis: {
                                                            show: !0
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            borderWidth: 1,
                                                            borderColor: "#333"
                                                        }
                                                    },
                                                    lineStyle: {
                                                        normal: {
                                                            color: "#314656",
                                                            opacity: .2,
                                                            curveness: .5
                                                        },
                                                        emphasis: {
                                                            opacity: .6
                                                        }
                                                    },
                                                    animationEasing: "linear",
                                                    animationDuration: 1e3
                                                }
                                            });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            var u = new r.Rect({
                                                shape: {
                                                    x: n.x - 10,
                                                    y: n.y - 10,
                                                    width: 0,
                                                    height: n.height + 20
                                                }
                                            });
                                            return r.initProps(u, {
                                                shape: {
                                                    width: n.width + 20,
                                                    height: n.height + 20
                                                }
                                            }, t, i), u
                                        }
                                        var r = i(43),
                                            u = i(4),
                                            f = r.extendShape({
                                                shape: {
                                                    x1: 0,
                                                    y1: 0,
                                                    x2: 0,
                                                    y2: 0,
                                                    cpx1: 0,
                                                    cpy1: 0,
                                                    cpx2: 0,
                                                    cpy2: 0,
                                                    extent: 0
                                                },
                                                buildPath: function(n, t) {
                                                    var i = t.extent / 2;
                                                    n.moveTo(t.x1, t.y1 - i);
                                                    n.bezierCurveTo(t.cpx1, t.cpy1 - i, t.cpx2, t.cpy2 - i, t.x2, t.y2 - i);
                                                    n.lineTo(t.x2, t.y2 + i);
                                                    n.bezierCurveTo(t.cpx2, t.cpy2 + i, t.cpx1, t.cpy1 + i, t.x1, t.y1 + i);
                                                    n.closePath()
                                                }
                                            });
                                        n.exports = i(1).extendChartView({
                                            type: "sankey",
                                            _model: null,
                                            render: function(n) {
                                                var i = n.getGraph(),
                                                    t = this.group,
                                                    o = n.layoutInfo,
                                                    s = n.getData(),
                                                    h = n.getData("edge");
                                                this._model = n;
                                                t.removeAll();
                                                t.position = [o.x, o.y];
                                                i.eachEdge(function(i) {
                                                    var u = new f;
                                                    u.dataIndex = i.dataIndex;
                                                    u.seriesIndex = n.seriesIndex;
                                                    u.dataType = "edge";
                                                    var a = i.getModel("lineStyle.normal"),
                                                        o = a.get("curveness"),
                                                        s = i.node1.getLayout(),
                                                        v = i.node2.getLayout(),
                                                        e = i.getLayout();
                                                    u.shape.extent = Math.max(1, e.dy);
                                                    var c = s.x + s.dx,
                                                        y = s.y + e.sy + e.dy / 2,
                                                        l = v.x,
                                                        p = v.y + e.ty + e.dy / 2,
                                                        w = c * (1 - o) + l * o,
                                                        b = y,
                                                        k = c * o + l * (1 - o),
                                                        d = p;
                                                    u.setShape({
                                                        x1: c,
                                                        y1: y,
                                                        x2: l,
                                                        y2: p,
                                                        cpx1: w,
                                                        cpy1: b,
                                                        cpx2: k,
                                                        cpy2: d
                                                    });
                                                    u.setStyle(a.getItemStyle());
                                                    switch (u.style.fill) {
                                                        case "source":
                                                            u.style.fill = i.node1.getVisual("color");
                                                            break;
                                                        case "target":
                                                            u.style.fill = i.node2.getVisual("color")
                                                    }
                                                    r.setHoverStyle(u, i.getModel("lineStyle.emphasis").getItemStyle());
                                                    t.add(u);
                                                    h.setItemGraphicEl(i.dataIndex, u)
                                                });
                                                i.eachNode(function(i) {
                                                    var c = i.getLayout(),
                                                        e = i.getModel(),
                                                        o = e.getModel("label.normal"),
                                                        l = o.getModel("textStyle"),
                                                        h = e.getModel("label.emphasis"),
                                                        a = h.getModel("textStyle"),
                                                        f = new r.Rect({
                                                            shape: {
                                                                x: c.x,
                                                                y: c.y,
                                                                width: i.getLayout().dx,
                                                                height: i.getLayout().dy
                                                            },
                                                            style: {
                                                                text: o.get("show") ? n.getFormattedLabel(i.dataIndex, "normal") || i.id : "",
                                                                textFont: l.getFont(),
                                                                textFill: l.getTextColor(),
                                                                textPosition: o.get("position")
                                                            }
                                                        });
                                                    f.setStyle(u.defaults({
                                                        fill: i.getVisual("color")
                                                    }, e.getModel("itemStyle.normal").getItemStyle()));
                                                    r.setHoverStyle(f, u.extend(i.getModel("itemStyle.emphasis"), {
                                                        text: h.get("show") ? n.getFormattedLabel(i.dataIndex, "emphasis") || i.id : "",
                                                        textFont: a.getFont(),
                                                        textFill: a.getTextColor(),
                                                        textPosition: h.get("position")
                                                    }));
                                                    t.add(f);
                                                    s.setItemGraphicEl(i.dataIndex, f);
                                                    f.dataType = "node"
                                                });
                                                !this._data && n.get("animation") && t.setClipPath(e(t.getBoundingRect(), n, function() {
                                                    t.removeClipPath()
                                                }));
                                                this._data = n.getData()
                                            },
                                            dispose: function() {}
                                        })
                                    }, function(n, t, i) {
                                        function c(n, t) {
                                            return s.getLayoutRect(n.getBoxLayoutParams(), {
                                                width: t.getWidth(),
                                                height: t.getHeight()
                                            })
                                        }

                                        function l(n, t, i, r, u, f, e) {
                                            v(n, i, u);
                                            w(n, t, f, r, e);
                                            tt(n)
                                        }

                                        function a(n) {
                                            r.each(n, function(n) {
                                                var t = u(n.outEdges, e),
                                                    i = u(n.inEdges, e),
                                                    r = Math.max(t, i);
                                                n.setLayout({
                                                    value: r
                                                }, !0)
                                            })
                                        }

                                        function v(n, t, i) {
                                            for (var u = n, s = null, f = 0, h = 0, e, c, r, o, l; u.length;) {
                                                for (s = [], e = 0, c = u.length; e < c; e++)
                                                    for (r = u[e], r.setLayout({
                                                            x: f
                                                        }, !0), r.setLayout({
                                                            dx: t
                                                        }, !0), o = 0, l = r.outEdges.length; o < l; o++) s.push(r.outEdges[o].node2);
                                                u = s;
                                                ++f
                                            }
                                            y(n, f);
                                            h = (i - t) / (f - 1);
                                            p(n, h)
                                        }

                                        function y(n, t) {
                                            r.each(n, function(n) {
                                                n.outEdges.length || n.setLayout({
                                                    x: t - 1
                                                }, !0)
                                            })
                                        }

                                        function p(n, t) {
                                            r.each(n, function(n) {
                                                var i = n.getLayout().x * t;
                                                n.setLayout({
                                                    x: i
                                                }, !0)
                                            })
                                        }

                                        function w(n, t, i, r, u) {
                                            var f = h().key(function(n) {
                                                    return n.getLayout().x
                                                }).sortKeys(ft).entries(n).map(function(n) {
                                                    return n.values
                                                }),
                                                e;
                                            for (b(n, f, t, i, r), o(f, r, i), e = 1; u > 0; u--) e *= .99, k(f, e), o(f, r, i), g(f, e), o(f, r, i)
                                        }

                                        function b(n, t, i, u, f) {
                                            var e = [],
                                                o;
                                            r.each(t, function(n) {
                                                var o = n.length,
                                                    t = 0,
                                                    i;
                                                r.each(n, function(n) {
                                                    t += n.getLayout().value
                                                });
                                                i = (u - (o - 1) * f) / t;
                                                e.push(i)
                                            });
                                            e.sort(function(n, t) {
                                                return n - t
                                            });
                                            o = e[0];
                                            r.each(t, function(n) {
                                                r.each(n, function(n, t) {
                                                    n.setLayout({
                                                        y: t
                                                    }, !0);
                                                    var i = n.getLayout().value * o;
                                                    n.setLayout({
                                                        dy: i
                                                    }, !0)
                                                })
                                            });
                                            r.each(i, function(n) {
                                                var t = +n.getValue() * o;
                                                n.setLayout({
                                                    dy: t
                                                }, !0)
                                            })
                                        }

                                        function o(n, t, i) {
                                            r.each(n, function(n) {
                                                var r, u, e = 0,
                                                    s = n.length,
                                                    f, o;
                                                for (n.sort(ut), f = 0; f < s; f++) r = n[f], u = e - r.getLayout().y, u > 0 && (o = r.getLayout().y + u, r.setLayout({
                                                    y: o
                                                }, !0)), e = r.getLayout().y + r.getLayout().dy + t;
                                                if (u = e - t - i, u > 0)
                                                    for (o = r.getLayout().y - u, r.setLayout({
                                                            y: o
                                                        }, !0), e = r.getLayout().y, f = s - 2; f >= 0; --f) r = n[f], u = r.getLayout().y + r.getLayout().dy + t - e, u > 0 && (o = r.getLayout().y - u, r.setLayout({
                                                        y: o
                                                    }, !0)), e = r.getLayout().y
                                            })
                                        }

                                        function k(n, t) {
                                            r.each(n.slice().reverse(), function(n) {
                                                r.each(n, function(n) {
                                                    if (n.outEdges.length) {
                                                        var i = u(n.outEdges, d) / u(n.outEdges, e),
                                                            r = n.getLayout().y + (i - f(n)) * t;
                                                        n.setLayout({
                                                            y: r
                                                        }, !0)
                                                    }
                                                })
                                            })
                                        }

                                        function d(n) {
                                            return f(n.node2) * n.getValue()
                                        }

                                        function g(n, t) {
                                            r.each(n, function(n) {
                                                r.each(n, function(n) {
                                                    if (n.inEdges.length) {
                                                        var i = u(n.inEdges, nt) / u(n.inEdges, e),
                                                            r = n.getLayout().y + (i - f(n)) * t;
                                                        n.setLayout({
                                                            y: r
                                                        }, !0)
                                                    }
                                                })
                                            })
                                        }

                                        function nt(n) {
                                            return f(n.node1) * n.getValue()
                                        }

                                        function tt(n) {
                                            r.each(n, function(n) {
                                                n.outEdges.sort(it);
                                                n.inEdges.sort(rt)
                                            });
                                            r.each(n, function(n) {
                                                var t = 0,
                                                    i = 0;
                                                r.each(n.outEdges, function(n) {
                                                    n.setLayout({
                                                        sy: t
                                                    }, !0);
                                                    t += n.getLayout().dy
                                                });
                                                r.each(n.inEdges, function(n) {
                                                    n.setLayout({
                                                        ty: i
                                                    }, !0);
                                                    i += n.getLayout().dy
                                                })
                                            })
                                        }

                                        function it(n, t) {
                                            return n.node2.getLayout().y - t.node2.getLayout().y
                                        }

                                        function rt(n, t) {
                                            return n.node1.getLayout().y - t.node1.getLayout().y
                                        }

                                        function u(n, t) {
                                            for (var u = 0, f = n.length, i = -1, r; ++i < f;) r = +t.call(n, n[i], i), isNaN(r) || (u += r);
                                            return u
                                        }

                                        function f(n) {
                                            return n.getLayout().y + n.getLayout().dy / 2
                                        }

                                        function ut(n, t) {
                                            return n.getLayout().y - t.getLayout().y
                                        }

                                        function ft(n, t) {
                                            return n < t ? -1 : n > t ? 1 : n === t ? 0 : NaN
                                        }

                                        function e(n) {
                                            return n.getValue()
                                        }
                                        var s = i(21),
                                            h = i(243),
                                            r = i(4);
                                        n.exports = function(n, t) {
                                            n.eachSeriesByType("sankey", function(n) {
                                                var o = n.get("nodeWidth"),
                                                    s = n.get("nodeGap"),
                                                    i = c(n, t),
                                                    f, e;
                                                n.layoutInfo = i;
                                                var h = i.width,
                                                    v = i.height,
                                                    u = n.getGraph(),
                                                    r = u.nodes,
                                                    y = u.edges;
                                                a(r);
                                                f = r.filter(function(n) {
                                                    return n.getLayout().value === 0
                                                });
                                                e = f.length !== 0 ? 0 : n.get("layoutIterations");
                                                l(r, y, o, s, h, v, e)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function u() {
                                            function i(t, u) {
                                                var o, s;
                                                if (u >= n.length) return t;
                                                for (var f = -1, c = t.length, l = n[u++], h = {}, e = {}; ++f < c;) o = l(t[f]), s = e[o], s ? s.push(t[f]) : e[o] = [t[f]];
                                                return r.each(e, function(n, t) {
                                                    h[t] = i(n, u)
                                                }), h
                                            }

                                            function u(i, f) {
                                                if (f >= n.length) return i;
                                                var e = [],
                                                    o = t[f++];
                                                return r.each(i, function(n, t) {
                                                    e.push({
                                                        key: t,
                                                        values: u(n, f)
                                                    })
                                                }), o ? e.sort(function(n, t) {
                                                    return o(n.key, t.key)
                                                }) : e
                                            }
                                            var n = [],
                                                t = [];
                                            return {
                                                key: function(t) {
                                                    return n.push(t), this
                                                },
                                                sortKeys: function(i) {
                                                    return t[n.length - 1] = i, this
                                                },
                                                entries: function(n) {
                                                    return u(i(n, 0), 0)
                                                }
                                            }
                                        }
                                        var r = i(4);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var r = i(193);
                                        n.exports = function(n) {
                                            n.eachSeriesByType("sankey", function(n) {
                                                var f = n.getGraph(),
                                                    t = f.nodes,
                                                    i, u;
                                                t.sort(function(n, t) {
                                                    return n.getLayout().value - t.getLayout().value
                                                });
                                                i = t[0].getLayout().value;
                                                u = t[t.length - 1].getLayout().value;
                                                t.forEach(function(t) {
                                                    var o = new r({
                                                            type: "color",
                                                            mappingMethod: "linear",
                                                            dataExtent: [i, u],
                                                            visual: n.get("color")
                                                        }),
                                                        s = o.mapValueToVisual(t.getLayout().value),
                                                        e, f;
                                                    t.setVisual("color", s);
                                                    e = t.getModel();
                                                    f = e.get("itemStyle.normal.color");
                                                    f != null && t.setVisual("color", f)
                                                })
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        i(246);
                                        i(249);
                                        r.registerVisual(i(250));
                                        r.registerLayout(i(251))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(4),
                                            f = i(28),
                                            e = i(247),
                                            r = f.extend({
                                                type: "series.boxplot",
                                                dependencies: ["xAxis", "yAxis", "grid"],
                                                valueDimensions: ["min", "Q1", "median", "Q3", "max"],
                                                dimensions: null,
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "cartesian2d",
                                                    legendHoverLink: !0,
                                                    hoverAnimation: !0,
                                                    layout: null,
                                                    boxWidth: [7, 50],
                                                    itemStyle: {
                                                        normal: {
                                                            color: "#fff",
                                                            borderWidth: 1
                                                        },
                                                        emphasis: {
                                                            borderWidth: 2,
                                                            shadowBlur: 5,
                                                            shadowOffsetX: 2,
                                                            shadowOffsetY: 2,
                                                            shadowColor: "rgba(0,0,0,0.4)"
                                                        }
                                                    },
                                                    animationEasing: "elasticOut",
                                                    animationDuration: 800
                                                }
                                            });
                                        u.mixin(r, e.seriesModelMixin, !0);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function o(n) {
                                            return n.value == null ? n : n.value
                                        }
                                        var u = i(97),
                                            f = i(102),
                                            e = i(248),
                                            r = i(4),
                                            s = {
                                                _baseAxisDim: null,
                                                getInitialData: function(n, t) {
                                                    var i, c = t.getComponent("xAxis", this.get("xAxisIndex")),
                                                        l = t.getComponent("yAxis", this.get("yAxisIndex")),
                                                        a = c.get("type"),
                                                        v = l.get("type"),
                                                        r, e, s, h;
                                                    return a === "category" ? (n.layout = "horizontal", i = c.getCategories(), r = !0) : v === "category" ? (n.layout = "vertical", i = l.getCategories(), r = !0) : n.layout = n.layout || "horizontal", this._baseAxisDim = n.layout === "horizontal" ? "x" : "y", e = n.data, s = this.dimensions = ["base"].concat(this.valueDimensions), f(s, e), h = new u(s, this), h.initData(e, i ? i.slice() : null, function(n, t, i, u) {
                                                        var f = o(n);
                                                        return r ? t === "base" ? i : f[u - 1] : f[u]
                                                    }), h
                                                },
                                                coordDimToDataDim: function(n) {
                                                    var t = this.valueDimensions.slice(),
                                                        i = ["base"],
                                                        r = {
                                                            horizontal: {
                                                                x: i,
                                                                y: t
                                                            },
                                                            vertical: {
                                                                x: t,
                                                                y: i
                                                            }
                                                        };
                                                    return r[this.get("layout")][n]
                                                },
                                                dataDimToCoordDim: function(n) {
                                                    var t;
                                                    return r.each(["x", "y"], function(i) {
                                                        var u = this.coordDimToDataDim(i);
                                                        r.indexOf(u, n) >= 0 && (t = i)
                                                    }, this), t
                                                },
                                                getBaseAxis: function() {
                                                    var n = this._baseAxisDim;
                                                    return this.ecModel.getComponent(n + "Axis", this.get(n + "AxisIndex")).axis
                                                }
                                            },
                                            h = {
                                                init: function() {
                                                    var n = this._whiskerBoxDraw = new e(this.getStyleUpdater());
                                                    this.group.add(n.group)
                                                },
                                                render: function(n) {
                                                    this._whiskerBoxDraw.updateData(n.getData())
                                                },
                                                remove: function() {
                                                    this._whiskerBoxDraw.remove()
                                                }
                                            };
                                        n.exports = {
                                            seriesModelMixin: s,
                                            viewMixin: h
                                        }
                                    }, function(n, t, i) {
                                        function f(n, t, i, u) {
                                            r.Group.call(this);
                                            this.bodyIndex;
                                            this.whiskerIndex;
                                            this.styleUpdater = i;
                                            this._createContent(n, t, u);
                                            this.updateData(n, t, u);
                                            this._seriesModel
                                        }

                                        function s(n, t, i) {
                                            return u.map(n, function(n) {
                                                return n = n.slice(), n[t] = i.initBaseline, n
                                            })
                                        }

                                        function h(n) {
                                            var t = {};
                                            return u.each(n, function(n, i) {
                                                t["ends" + i] = n
                                            }), t
                                        }

                                        function c(n) {
                                            this.group = new r.Group;
                                            this.styleUpdater = n
                                        }
                                        var u = i(4),
                                            r = i(43),
                                            l = i(45),
                                            a = l.extend({
                                                type: "whiskerInBox",
                                                shape: {},
                                                buildPath: function(n, t) {
                                                    var r, i;
                                                    for (r in t) t.hasOwnProperty(r) && r.indexOf("ends") === 0 && (i = t[r], n.moveTo(i[0][0], i[0][1]), n.lineTo(i[1][0], i[1][1]))
                                                }
                                            }),
                                            o = f.prototype,
                                            e;
                                        o._createContent = function(n, t, i) {
                                            var f = n.getItemLayout(t),
                                                e = f.chartLayout === "horizontal" ? 1 : 0,
                                                o = 0,
                                                c;
                                            this.add(new r.Polygon({
                                                shape: {
                                                    points: i ? s(f.bodyEnds, e, f) : f.bodyEnds
                                                },
                                                style: {
                                                    strokeNoScale: !0
                                                },
                                                z2: 100
                                            }));
                                            this.bodyIndex = o++;
                                            c = u.map(f.whiskerEnds, function(n) {
                                                return i ? s(n, e, f) : n
                                            });
                                            this.add(new a({
                                                shape: h(c),
                                                style: {
                                                    strokeNoScale: !0
                                                },
                                                z2: 100
                                            }));
                                            this.whiskerIndex = o++
                                        };
                                        o.updateData = function(n, t, i) {
                                            var u = this._seriesModel = n.hostModel,
                                                f = n.getItemLayout(t),
                                                e = r[i ? "initProps" : "updateProps"];
                                            e(this.childAt(this.bodyIndex), {
                                                shape: {
                                                    points: f.bodyEnds
                                                }
                                            }, u, t);
                                            e(this.childAt(this.whiskerIndex), {
                                                shape: h(f.whiskerEnds)
                                            }, u, t);
                                            this.styleUpdater.call(null, this, n, t)
                                        };
                                        u.inherits(f, r.Group);
                                        e = c.prototype;
                                        e.updateData = function(n) {
                                            var t = this.group,
                                                i = this._data,
                                                r = this.styleUpdater;
                                            n.diff(i).add(function(i) {
                                                if (n.hasValue(i)) {
                                                    var u = new f(n, i, r, !0);
                                                    n.setItemGraphicEl(i, u);
                                                    t.add(u)
                                                }
                                            }).update(function(u, e) {
                                                var o = i.getItemGraphicEl(e);
                                                if (!n.hasValue(u)) {
                                                    t.remove(o);
                                                    return
                                                }
                                                o ? o.updateData(n, u) : o = new f(n, u, r);
                                                t.add(o);
                                                n.setItemGraphicEl(u, o)
                                            }).remove(function(n) {
                                                var r = i.getItemGraphicEl(n);
                                                r && t.remove(r)
                                            }).execute();
                                            this._data = n
                                        };
                                        e.remove = function() {
                                            var t = this.group,
                                                n = this._data;
                                            this._data = null;
                                            n && n.eachItemGraphicEl(function(n) {
                                                n && t.remove(n)
                                            })
                                        };
                                        n.exports = c
                                    }, function(n, t, i) {
                                        "use strict";

                                        function c(n, t, i) {
                                            var o = t.getItemModel(i),
                                                a = o.getModel(f),
                                                h = t.getItemVisual(i, "color"),
                                                c = a.getItemStyle(["borderColor"]),
                                                u = n.childAt(n.whiskerIndex),
                                                r, l;
                                            u.style.set(c);
                                            u.style.stroke = h;
                                            u.dirty();
                                            r = n.childAt(n.bodyIndex);
                                            r.style.set(c);
                                            r.style.stroke = h;
                                            r.dirty();
                                            l = o.getModel(e).getItemStyle();
                                            s.setHoverStyle(n, l)
                                        }
                                        var r = i(4),
                                            o = i(42),
                                            s = i(43),
                                            h = i(247),
                                            u = o.extend({
                                                type: "boxplot",
                                                getStyleUpdater: function() {
                                                    return c
                                                },
                                                dispose: r.noop
                                            }),
                                            f, e;
                                        r.mixin(u, h.viewMixin, !0);
                                        f = ["itemStyle", "normal"];
                                        e = ["itemStyle", "emphasis"];
                                        n.exports = u
                                    }, function(n) {
                                        var t = ["itemStyle", "normal", "borderColor"];
                                        n.exports = function(n) {
                                            var i = n.get("color");
                                            n.eachRawSeriesByType("boxplot", function(r) {
                                                var f = i[r.seriesIndex % i.length],
                                                    u = r.getData();
                                                u.setVisual({
                                                    legendSymbol: "roundRect",
                                                    color: r.get(t) || f
                                                });
                                                n.isSeriesFiltered(r) || u.each(function(n) {
                                                    var i = u.getItemModel(n);
                                                    u.setItemVisual(n, {
                                                        color: i.get(t, !0)
                                                    })
                                                })
                                            })
                                        }
                                    }, function(n, t, i) {
                                        function o(n) {
                                            var t = [],
                                                i = [];
                                            return n.eachSeriesByType("boxplot", function(n) {
                                                var f = n.getBaseAxis(),
                                                    r = u.indexOf(i, f);
                                                r < 0 && (r = i.length, i[r] = f, t[r] = {
                                                    axis: f,
                                                    seriesModels: []
                                                });
                                                t[r].seriesModels.push(n)
                                            }), t
                                        }

                                        function s(n) {
                                            var o, s = n.axis,
                                                t = n.seriesModels,
                                                h = t.length,
                                                p = n.boxWidthList = [],
                                                w = n.boxOffsetList = [],
                                                c = [],
                                                i, e;
                                            s.type === "category" ? i = s.getBandWidth() : (e = 0, r(t, function(n) {
                                                e = Math.max(e, n.getData().count())
                                            }), o = s.getExtent(), Math.abs(o[1] - o[0]) / e);
                                            r(t, function(n) {
                                                var t = n.get("boxWidth");
                                                u.isArray(t) || (t = [t, t]);
                                                c.push([f(t[0], i) || 0, f(t[1], i) || 0])
                                            });
                                            var l = i * .8 - 2,
                                                v = l / h * .3,
                                                a = (l - v * (h - 1)) / h,
                                                y = a / 2 - l / 2;
                                            r(t, function(n, t) {
                                                w.push(y);
                                                y += v + a;
                                                p.push(Math.min(Math.max(a, c[t][0]), c[t][1]))
                                            })
                                        }

                                        function h(n, t, i) {
                                            var o = n.coordinateSystem,
                                                u = n.getData(),
                                                f = n.dimensions,
                                                e = n.get("layout"),
                                                r = i / 2;
                                            u.each(f, function() {
                                                function s(n) {
                                                    var u = [],
                                                        r;
                                                    return u[i] = v, u[y] = n, isNaN(v) || isNaN(n) ? r = [NaN, NaN] : (r = o.dataToPoint(u), r[i] += t), r
                                                }

                                                function b(n, t) {
                                                    var u = n.slice(),
                                                        f = n.slice();
                                                    u[i] += r;
                                                    f[i] -= r;
                                                    t ? c.push(u, f) : c.push(f, u)
                                                }

                                                function a(n) {
                                                    var t = [n.slice(), n.slice()];
                                                    t[0][i] -= r;
                                                    t[1][i] += r;
                                                    h.push(t)
                                                }
                                                var n = arguments,
                                                    k = f.length,
                                                    v = n[0],
                                                    d = n[k],
                                                    i = e === "horizontal" ? 0 : 1,
                                                    y = 1 - i,
                                                    l = s(n[3]),
                                                    p = s(n[1]),
                                                    w = s(n[5]),
                                                    h = [
                                                        [p, s(n[2])],
                                                        [w, s(n[4])]
                                                    ],
                                                    c;
                                                a(p);
                                                a(w);
                                                a(l);
                                                c = [];
                                                b(h[0][1], 0);
                                                b(h[1][1], 1);
                                                u.setItemLayout(d, {
                                                    chartLayout: e,
                                                    initBaseline: l[y],
                                                    median: l,
                                                    bodyEnds: c,
                                                    whiskerEnds: h
                                                })
                                            })
                                        }
                                        var u = i(4),
                                            e = i(7),
                                            f = e.parsePercent,
                                            r = u.each;
                                        n.exports = function(n) {
                                            var t = o(n);
                                            r(t, function(n) {
                                                var t = n.seriesModels;
                                                t.length && (s(n), r(t, function(t, i) {
                                                    h(t, n.boxOffsetList[i], n.boxWidthList[i])
                                                }))
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        i(253);
                                        i(254);
                                        r.registerPreprocessor(i(255));
                                        r.registerVisual(i(256));
                                        r.registerLayout(i(257))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(4),
                                            e = i(28),
                                            o = i(247),
                                            u = i(6),
                                            s = u.encodeHTML,
                                            h = u.addCommas,
                                            f = e.extend({
                                                type: "series.candlestick",
                                                dependencies: ["xAxis", "yAxis", "grid"],
                                                valueDimensions: ["open", "close", "lowest", "highest"],
                                                dimensions: null,
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 2,
                                                    coordinateSystem: "cartesian2d",
                                                    legendHoverLink: !0,
                                                    hoverAnimation: !0,
                                                    layout: null,
                                                    itemStyle: {
                                                        normal: {
                                                            color: "#c23531",
                                                            color0: "#314656",
                                                            borderWidth: 1,
                                                            borderColor: "#c23531",
                                                            borderColor0: "#314656"
                                                        },
                                                        emphasis: {
                                                            borderWidth: 2
                                                        }
                                                    },
                                                    animationUpdate: !1,
                                                    animationEasing: "linear",
                                                    animationDuration: 300
                                                },
                                                getShadowDim: function() {
                                                    return "open"
                                                },
                                                formatTooltip: function(n) {
                                                    var t = r.map(this.valueDimensions, function(t) {
                                                        return t + ": " + h(this._data.get(t, n))
                                                    }, this);
                                                    return s(this.name) + "<br />" + t.join("<br />")
                                                },
                                                brushSelector: function(n, t) {
                                                    return t.rect(n.brushRect)
                                                }
                                            });
                                        r.mixin(f, o.seriesModelMixin, !0);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        "use strict";

                                        function c(n, t, i) {
                                            var u = t.getItemModel(i),
                                                v = u.getModel(f),
                                                o = t.getItemVisual(i, "color"),
                                                h = t.getItemVisual(i, "borderColor") || o,
                                                c = v.getItemStyle(["color", "color0", "borderColor", "borderColor0"]),
                                                l = n.childAt(n.whiskerIndex),
                                                r, a;
                                            l.useStyle(c);
                                            l.style.stroke = h;
                                            r = n.childAt(n.bodyIndex);
                                            r.useStyle(c);
                                            r.style.fill = o;
                                            r.style.stroke = h;
                                            a = u.getModel(e).getItemStyle();
                                            s.setHoverStyle(n, a)
                                        }
                                        var r = i(4),
                                            o = i(42),
                                            s = i(43),
                                            h = i(247),
                                            u = o.extend({
                                                type: "candlestick",
                                                getStyleUpdater: function() {
                                                    return c
                                                },
                                                dispose: r.noop
                                            }),
                                            f, e;
                                        r.mixin(u, h.viewMixin, !0);
                                        f = ["itemStyle", "normal"];
                                        e = ["itemStyle", "emphasis"];
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var r = i(4);
                                        n.exports = function(n) {
                                            n && r.isArray(n.series) && r.each(n.series, function(n) {
                                                r.isObject(n) && n.type === "k" && (n.type = "candlestick")
                                            })
                                        }
                                    }, function(n) {
                                        var t = ["itemStyle", "normal", "borderColor"],
                                            i = ["itemStyle", "normal", "borderColor0"],
                                            r = ["itemStyle", "normal", "color"],
                                            u = ["itemStyle", "normal", "color0"];
                                        n.exports = function(n) {
                                            n.eachRawSeriesByType("candlestick", function(f) {
                                                var e = f.getData();
                                                e.setVisual({
                                                    legendSymbol: "roundRect"
                                                });
                                                n.isSeriesFiltered(f) || e.each(function(n) {
                                                    var f = e.getItemModel(n),
                                                        o = e.getItemLayout(n).sign;
                                                    e.setItemVisual(n, {
                                                        color: f.get(o > 0 ? r : u),
                                                        borderColor: f.get(o > 0 ? t : i)
                                                    })
                                                })
                                            })
                                        }
                                    }, function(n) {
                                        function u(n, u) {
                                            var e = n.getBaseAxis(),
                                                o, f = e.type === "category" ? e.getBandWidth() : (o = e.getExtent(), Math.abs(o[1] - o[0]) / u.count());
                                            return f / 2 - 2 > t ? f / 2 - 2 : f - t > i ? t : Math.max(f - i, r)
                                        }
                                        var r = 2,
                                            t = 5,
                                            i = 4;
                                        n.exports = function(n) {
                                            n.eachSeriesByType("candlestick", function(n) {
                                                var e = n.coordinateSystem,
                                                    i = n.getData(),
                                                    r = n.dimensions,
                                                    f = n.get("layout"),
                                                    t = u(n, i);
                                                i.each(r, function() {
                                                    function h(n) {
                                                        var t = [];
                                                        return t[s] = w, t[c] = n, isNaN(w) || isNaN(n) ? [NaN, NaN] : e.dataToPoint(t)
                                                    }

                                                    function b(n, i) {
                                                        var r = n.slice(),
                                                            u = n.slice();
                                                        r[s] += t / 2;
                                                        u[s] -= t / 2;
                                                        i ? p.push(r, u) : p.push(u, r)
                                                    }

                                                    function ut() {
                                                        var i = h(Math.min(n, u, l, a)),
                                                            r = h(Math.max(n, u, l, a));
                                                        return i[s] -= t / 2, r[s] -= t / 2, {
                                                            x: i[0],
                                                            y: i[1],
                                                            width: c ? t : r[0] - i[0],
                                                            height: c ? r[1] - i[1] : t
                                                        }
                                                    }
                                                    var o = arguments,
                                                        k = r.length,
                                                        w = o[0],
                                                        d = o[k],
                                                        s = f === "horizontal" ? 0 : 1,
                                                        c = 1 - s,
                                                        n = o[1],
                                                        u = o[2],
                                                        l = o[3],
                                                        a = o[4],
                                                        g = Math.min(n, u),
                                                        nt = Math.max(n, u),
                                                        v = h(g),
                                                        y = h(nt),
                                                        tt = h(l),
                                                        it = h(a),
                                                        rt = [
                                                            [it, y],
                                                            [tt, v]
                                                        ],
                                                        p = [];
                                                    b(y, 0);
                                                    b(v, 1);
                                                    i.setItemLayout(d, {
                                                        chartLayout: f,
                                                        sign: n > u ? -1 : n < u ? 1 : 0,
                                                        initBaseline: n > u ? y[c] : v[c],
                                                        bodyEnds: p,
                                                        whiskerEnds: rt,
                                                        brushRect: ut()
                                                    })
                                                }, !0)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(1);
                                        i(259);
                                        i(260);
                                        u.registerVisual(r.curry(i(109), "effectScatter", "circle", null));
                                        u.registerLayout(r.curry(i(110), "effectScatter"))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(101),
                                            u = i(28);
                                        n.exports = u.extend({
                                            type: "series.effectScatter",
                                            dependencies: ["grid", "polar"],
                                            getInitialData: function(n, t) {
                                                return r(n.data, this, t)
                                            },
                                            brushSelector: "point",
                                            defaultOption: {
                                                coordinateSystem: "cartesian2d",
                                                zlevel: 0,
                                                z: 2,
                                                legendHoverLink: !0,
                                                effectType: "ripple",
                                                progressive: 0,
                                                showEffectOn: "render",
                                                rippleEffect: {
                                                    period: 4,
                                                    scale: 2.5,
                                                    brushType: "fill"
                                                },
                                                symbolSize: 10
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(104),
                                            u = i(261);
                                        i(1).extendChartView({
                                            type: "effectScatter",
                                            init: function() {
                                                this._symbolDraw = new r(u)
                                            },
                                            render: function(n) {
                                                var i = n.getData(),
                                                    t = this._symbolDraw;
                                                t.updateData(i);
                                                this.group.add(t.group)
                                            },
                                            updateLayout: function() {
                                                this._symbolDraw.updateLayout()
                                            },
                                            remove: function(n, t) {
                                                this._symbolDraw && this._symbolDraw.remove(t)
                                            },
                                            dispose: function() {}
                                        })
                                    }, function(n, t, i) {
                                        function v(n) {
                                            return e.isArray(n) || (n = [+n, +n]), n
                                        }

                                        function h(n, t) {
                                            n.eachChild(function(n) {
                                                n.attr({
                                                    z: t.z,
                                                    zlevel: t.zlevel,
                                                    style: {
                                                        stroke: t.brushType === "stroke" ? t.color : null,
                                                        fill: t.brushType === "fill" ? t.color : null
                                                    }
                                                })
                                            })
                                        }

                                        function f(n, t) {
                                            u.call(this);
                                            var i = new a(n, t),
                                                r = new u;
                                            this.add(i);
                                            this.add(r);
                                            r.beforeUpdate = function() {
                                                this.attr(i.getScale())
                                            };
                                            this.updateData(n, t)
                                        }
                                        var e = i(4),
                                            c = i(106),
                                            l = i(43),
                                            o = i(7),
                                            a = i(105),
                                            u = l.Group,
                                            s = 3,
                                            r = f.prototype;
                                        r.stopEffectAnimation = function() {
                                            this.childAt(1).removeAll()
                                        };
                                        r.startEffectAnimation = function(n) {
                                            for (var t, r, f = n.symbolType, e = n.color, u = this.childAt(1), i = 0; i < s; i++) t = c.createSymbol(f, -1, -1, 2, 2, e), t.attr({
                                                style: {
                                                    strokeNoScale: !0
                                                },
                                                z2: 99,
                                                silent: !0,
                                                scale: [.5, .5]
                                            }), r = -i / s * n.period + n.effectOffset, t.animate("", !0).when(n.period, {
                                                scale: [n.rippleScale / 2, n.rippleScale / 2]
                                            }).delay(r).start(), t.animateStyle(!0).when(n.period, {
                                                opacity: 0
                                            }).delay(r).start(), u.add(t);
                                            h(u, n)
                                        };
                                        r.updateEffectAnimation = function(n) {
                                            for (var i, u = this._effectCfg, f = this.childAt(1), r = ["symbolType", "period", "rippleScale"], t = 0; t < r; t++)
                                                if (i = r[t], u[i] !== n[i]) {
                                                    this.stopEffectAnimation();
                                                    this.startEffectAnimation(n);
                                                    return
                                                }
                                            h(f, n)
                                        };
                                        r.highlight = function() {
                                            this.trigger("emphasis")
                                        };
                                        r.downplay = function() {
                                            this.trigger("normal")
                                        };
                                        r.updateData = function(n, t) {
                                            var y = n.hostModel,
                                                f, s, i;
                                            this.childAt(0).updateData(n, t);
                                            var u = this.childAt(1),
                                                r = n.getItemModel(t),
                                                p = n.getItemVisual(t, "symbol"),
                                                e = v(n.getItemVisual(t, "symbolSize")),
                                                h = n.getItemVisual(t, "color");
                                            if (u.attr("scale", e), u.traverse(function(n) {
                                                    n.attr({
                                                        fill: h
                                                    })
                                                }), f = r.getShallow("symbolOffset"), f && (s = u.position, s[0] = o.parsePercent(f[0], e[0]), s[1] = o.parsePercent(f[1], e[1])), u.rotation = (r.getShallow("symbolRotate") || 0) * Math.PI / 180 || 0, i = {}, i.showEffectOn = y.get("showEffectOn"), i.rippleScale = r.get("rippleEffect.scale"), i.brushType = r.get("rippleEffect.brushType"), i.period = r.get("rippleEffect.period") * 1e3, i.effectOffset = t / n.count(), i.z = r.getShallow("z") || 0, i.zlevel = r.getShallow("zlevel") || 0, i.symbolType = p, i.color = h, this.off("mouseover").off("mouseout").off("emphasis").off("normal"), i.showEffectOn === "render") this._effectCfg ? this.updateEffectAnimation(i) : this.startEffectAnimation(i), this._effectCfg = i;
                                            else {
                                                this._effectCfg = null;
                                                this.stopEffectAnimation();
                                                var c = this.childAt(0),
                                                    l = function() {
                                                        c.trigger("emphasis");
                                                        i.showEffectOn !== "render" && this.startEffectAnimation(i)
                                                    },
                                                    a = function() {
                                                        c.trigger("normal");
                                                        i.showEffectOn !== "render" && this.stopEffectAnimation()
                                                    };
                                                this.on("mouseover", l, this).on("mouseout", a, this).on("emphasis", l, this).on("normal", a, this)
                                            }
                                            this._effectCfg = i
                                        };
                                        r.fadeOut = function(n) {
                                            this.off("mouseover").off("mouseout").off("emphasis").off("normal");
                                            n && n()
                                        };
                                        e.inherits(f, u);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        i(263);
                                        i(264);
                                        var r = i(1);
                                        r.registerLayout(i(269))
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n) {
                                            var t = n.data;
                                            t && t[0] && t[0][0] && t[0][0].coord && (!0 && console.warn("Lines data configuration has been changed to { coords:[[1,2],[2,3]] }"), n.data = r.map(t, function(n) {
                                                var i = [n[0].coord, n[1].coord],
                                                    t = {
                                                        coords: i
                                                    };
                                                return n[0].name && (t.fromName = n[0].name), n[1].name && (t.toName = n[1].name), r.mergeAll([t, n[0], n[1]])
                                            }))
                                        }
                                        var e = i(28),
                                            o = i(97),
                                            r = i(4),
                                            s = i(26),
                                            f = e.extend({
                                                type: "series.lines",
                                                dependencies: ["grid", "polar"],
                                                visualColorAccessPath: "lineStyle.normal.color",
                                                init: function(n) {
                                                    u(n);
                                                    f.superApply(this, "init", arguments)
                                                },
                                                mergeOption: function(n) {
                                                    u(n);
                                                    f.superApply(this, "mergeOption", arguments)
                                                },
                                                getInitialData: function(n) {
                                                    var i, t;
                                                    if (!0 && (i = s.get(n.coordinateSystem), !i)) throw new Error("Unkown coordinate system " + n.coordinateSystem);
                                                    return t = new o(["value"], this), t.hasItemOption = !1, t.initData(n.data, [], function(n, i, r, u) {
                                                        if (n instanceof Array) return NaN;
                                                        t.hasItemOption = !0;
                                                        var f = n.value;
                                                        if (f != null) return f instanceof Array ? f[u] : f
                                                    }), t
                                                },
                                                formatTooltip: function(n) {
                                                    var f = this.getData(),
                                                        t = f.getItemModel(n),
                                                        i = t.get("name"),
                                                        r, u;
                                                    return i ? i : (r = t.get("fromName"), u = t.get("toName"), r + " > " + u)
                                                },
                                                defaultOption: {
                                                    coordinateSystem: "geo",
                                                    zlevel: 0,
                                                    z: 2,
                                                    legendHoverLink: !0,
                                                    hoverAnimation: !0,
                                                    xAxisIndex: 0,
                                                    yAxisIndex: 0,
                                                    geoIndex: 0,
                                                    effect: {
                                                        show: !1,
                                                        period: 4,
                                                        constantSpeed: 0,
                                                        symbol: "circle",
                                                        symbolSize: 3,
                                                        loop: !0,
                                                        trailLength: .2
                                                    },
                                                    large: !1,
                                                    largeThreshold: 2e3,
                                                    polyline: !1,
                                                    label: {
                                                        normal: {
                                                            show: !1,
                                                            position: "end"
                                                        }
                                                    },
                                                    lineStyle: {
                                                        normal: {
                                                            opacity: .5
                                                        }
                                                    }
                                                }
                                            })
                                    }, function(n, t, i) {
                                        var r = i(200),
                                            u = i(265),
                                            f = i(201),
                                            e = i(266),
                                            o = i(267),
                                            s = i(268);
                                        i(1).extendChartView({
                                            type: "lines",
                                            init: function() {},
                                            render: function(n, t, i) {
                                                var w = n.getData(),
                                                    c = this._lineDraw,
                                                    h = n.get("effect.show"),
                                                    v = n.get("polyline"),
                                                    l = n.get("large") && w.count() >= n.get("largeThreshold"),
                                                    p;
                                                !0 && h && l && console.warn("Large lines not support effect");
                                                (h !== this._hasEffet || v !== this._isPolyline || l !== this._isLarge) && (c && c.remove(), c = this._lineDraw = l ? new s : new r(v ? h ? o : e : h ? u : f), this._hasEffet = h, this._isPolyline = v, this._isLarge = l);
                                                var a = n.get("zlevel"),
                                                    b = n.get("effect.trailLength"),
                                                    y = i.getZr();
                                                y.painter.getLayer(a).clear(!0);
                                                this._lastZlevel != null && y.configLayer(this._lastZlevel, {
                                                    motionBlur: !1
                                                });
                                                h && b && (!0 && (p = !1, t.eachSeries(function(t) {
                                                    t !== n && t.get("zlevel") === a && (p = !0)
                                                }), p && console.warn("Lines with trail effect should have an individual zlevel")), y.configLayer(a, {
                                                    motionBlur: !0,
                                                    lastFrameAlpha: Math.max(Math.min(b / 10 + .9, 1), 0)
                                                }));
                                                this.group.add(c.group);
                                                c.updateData(w);
                                                this._lastZlevel = a
                                            },
                                            updateLayout: function(n, t, i) {
                                                this._lineDraw.updateLayout(n);
                                                var r = i.getZr();
                                                r.painter.getLayer(this._lastZlevel).clear(!0)
                                            },
                                            remove: function(n, t) {
                                                this._lineDraw && this._lineDraw.remove(t, !0)
                                            },
                                            dispose: function() {}
                                        })
                                    }, function(n, t, i) {
                                        function f(n, t, i) {
                                            e.Group.call(this);
                                            this.add(this.createLine(n, t, i));
                                            this._updateEffectSymbol(n, t)
                                        }
                                        var e = i(43),
                                            h = i(201),
                                            u = i(4),
                                            c = i(106),
                                            o = i(10),
                                            s = i(50),
                                            r = f.prototype;
                                        r.createLine = function(n, t, i) {
                                            return new h(n, t, i)
                                        };
                                        r._updateEffectSymbol = function(n, t) {
                                            var s = n.getItemModel(t),
                                                f = s.getModel("effect"),
                                                r = f.get("symbolSize"),
                                                o = f.get("symbol"),
                                                e, i;
                                            (u.isArray(r) || (r = [r, r]), e = f.get("color") || n.getItemVisual(t, "color"), i = this.childAt(1), this._symbolType !== o && (this.remove(i), i = c.createSymbol(o, -.5, -.5, 1, 1, e), i.z2 = 100, i.culling = !0, this.add(i)), i) && (i.setStyle("shadowColor", e), i.setStyle(f.getItemStyle(["color"])), i.attr("scale", r), i.setColor(e), i.attr("scale", r), this._symbolType = o, this._updateEffectAnimation(n, f, t))
                                        };
                                        r._updateEffectAnimation = function(n, t, i) {
                                            var r = this.childAt(1),
                                                o, h;
                                            if (r) {
                                                var c = this,
                                                    a = n.getItemLayout(i),
                                                    f = t.get("period") * 1e3,
                                                    e = t.get("loop"),
                                                    l = t.get("constantSpeed"),
                                                    s = u.retrieve(t.get("delay"), function(t) {
                                                        return t / n.count() * f / 3
                                                    }),
                                                    v = typeof s == "function";
                                                r.ignore = !0;
                                                this.updateAnimationPoints(r, a);
                                                l > 0 && (f = this.getLineLength(r) / l * 1e3);
                                                (f !== this._period || e !== this._loop) && (r.stopAnimation(), o = s, v && (o = s(i)), r.__t > 0 && (o = -f * r.__t), r.__t = 0, h = r.animate("", e).when(f, {
                                                    __t: 1
                                                }).delay(o).during(function() {
                                                    c.updateSymbolPosition(r)
                                                }), e || h.done(function() {
                                                    c.remove(r)
                                                }), h.start());
                                                this._period = f;
                                                this._loop = e
                                            }
                                        };
                                        r.getLineLength = function(n) {
                                            return o.dist(n.__p1, n.__cp1) + o.dist(n.__cp1, n.__p2)
                                        };
                                        r.updateAnimationPoints = function(n, t) {
                                            n.__p1 = t[0];
                                            n.__p2 = t[1];
                                            n.__cp1 = t[2] || [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2]
                                        };
                                        r.updateData = function(n, t, i) {
                                            this.childAt(0).updateData(n, t, i);
                                            this._updateEffectSymbol(n, t)
                                        };
                                        r.updateSymbolPosition = function(n) {
                                            var t = n.__p1,
                                                i = n.__p2,
                                                r = n.__cp1,
                                                u = n.__t,
                                                f = n.position,
                                                e = s.quadraticAt,
                                                o = s.quadraticDerivativeAt,
                                                h, c;
                                            f[0] = e(t[0], r[0], i[0], u);
                                            f[1] = e(t[1], r[1], i[1], u);
                                            h = o(t[0], r[0], i[0], u);
                                            c = o(t[1], r[1], i[1], u);
                                            n.rotation = -Math.atan2(c, h) - Math.PI / 2;
                                            n.ignore = !1
                                        };
                                        r.updateLayout = function(n, t) {
                                            this.childAt(0).updateLayout(n, t);
                                            var i = n.getItemModel(t).getModel("effect");
                                            this._updateEffectAnimation(n, i, t)
                                        };
                                        u.inherits(f, e.Group);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function f(n, t, i) {
                                            r.Group.call(this);
                                            this._createPolyline(n, t, i)
                                        }
                                        var r = i(43),
                                            e = i(4),
                                            u = f.prototype;
                                        u._createPolyline = function(n, t, i) {
                                            var u = n.getItemLayout(t),
                                                f = new r.Polyline({
                                                    shape: {
                                                        points: u
                                                    }
                                                });
                                            this.add(f);
                                            this._updateCommonStl(n, t, i)
                                        };
                                        u.updateData = function(n, t, i) {
                                            var u = n.hostModel,
                                                f = this.childAt(0),
                                                e = {
                                                    shape: {
                                                        points: n.getItemLayout(t)
                                                    }
                                                };
                                            r.updateProps(f, e, u, t);
                                            this._updateCommonStl(n, t, i)
                                        };
                                        u._updateCommonStl = function(n, t, i) {
                                            var u = this.childAt(0),
                                                f = n.getItemModel(t),
                                                h = n.getItemVisual(t, "color"),
                                                o = i && i.lineStyle,
                                                s = i && i.hoverLineStyle;
                                            (!i || n.hasItemOption) && (o = f.getModel("lineStyle.normal").getLineStyle(), s = f.getModel("lineStyle.emphasis").getLineStyle());
                                            u.useStyle(e.defaults({
                                                strokeNoScale: !0,
                                                fill: "none",
                                                stroke: h
                                            }, o));
                                            u.hoverStyle = s;
                                            r.setHoverStyle(this)
                                        };
                                        u.updateLayout = function(n, t) {
                                            var i = this.childAt(0);
                                            i.setShape("points", n.getItemLayout(t))
                                        };
                                        e.inherits(f, r.Group);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        function u(n, t, i) {
                                            f.call(this, n, t, i);
                                            this._lastFrame = 0;
                                            this._lastFramePercent = 0
                                        }
                                        var o = i(266),
                                            s = i(4),
                                            f = i(265),
                                            e = i(10),
                                            r = u.prototype;
                                        r.createLine = function(n, t, i) {
                                            return new o(n, t, i)
                                        };
                                        r.updateAnimationPoints = function(n, t) {
                                            var u, r, f, o, i;
                                            for (this._points = t, u = [0], r = 0, i = 1; i < t.length; i++) f = t[i - 1], o = t[i], r += e.dist(f, o), u.push(r);
                                            if (r !== 0) {
                                                for (i = 0; i < u.length; i++) u[i] /= r;
                                                this._offsets = u;
                                                this._length = r
                                            }
                                        };
                                        r.getLineLength = function() {
                                            return this._length
                                        };
                                        r.updateSymbolPosition = function(n) {
                                            var u = n.__t,
                                                i = this._points,
                                                r = this._offsets,
                                                f = i.length,
                                                o, s, t, h, c;
                                            if (r) {
                                                if (o = this._lastFrame, u < this._lastFramePercent) {
                                                    for (s = Math.min(o + 1, f - 1), t = s; t >= 0; t--)
                                                        if (r[t] <= u) break;
                                                    t = Math.min(t, f - 2)
                                                } else {
                                                    for (t = o; t < f; t++)
                                                        if (r[t] > u) break;
                                                    t = Math.min(t - 1, f - 2)
                                                }
                                                e.lerp(n.position, i[t], i[t + 1], (u - r[t]) / (r[t + 1] - r[t]));
                                                h = i[t + 1][0] - i[t][0];
                                                c = i[t + 1][1] - i[t][1];
                                                n.rotation = -Math.atan2(c, h) - Math.PI / 2;
                                                this._lastFrame = t;
                                                this._lastFramePercent = u;
                                                n.ignore = !1
                                            }
                                        };
                                        s.inherits(u, f);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function e() {
                                            this.group = new u.Group;
                                            this._lineEl = new s
                                        }
                                        var u = i(43),
                                            o = i(55),
                                            f = i(53),
                                            s = u.extendShape({
                                                shape: {
                                                    polyline: !1,
                                                    segs: []
                                                },
                                                buildPath: function(n, t) {
                                                    for (var i, r, f = t.segs, e = t.polyline, u = 0; u < f.length; u++)
                                                        if (i = f[u], e)
                                                            for (n.moveTo(i[0][0], i[0][1]), r = 1; r < i.length; r++) n.lineTo(i[r][0], i[r][1]);
                                                        else n.moveTo(i[0][0], i[0][1]), i.length > 2 ? n.quadraticCurveTo(i[2][0], i[2][1], i[1][0], i[1][1]) : n.lineTo(i[1][0], i[1][1])
                                                },
                                                findDataIndex: function(n, t) {
                                                    for (var i, r, s = this.shape, h = s.segs, c = s.polyline, e = Math.max(this.style.lineWidth, 1), u = 0; u < h.length; u++)
                                                        if (i = h[u], c) {
                                                            for (r = 1; r < i.length; r++)
                                                                if (f.containStroke(i[r - 1][0], i[r - 1][1], i[r][0], i[r][1], e, n, t)) return u
                                                        } else if (i.length > 2) {
                                                        if (o.containStroke(i[0][0], i[0][1], i[2][0], i[2][1], i[1][0], i[1][1], e, n, t)) return u
                                                    } else if (f.containStroke(i[0][0], i[0][1], i[1][0], i[1][1], e, n, t)) return u;
                                                    return -1
                                                }
                                            }),
                                            r = e.prototype;
                                        r.updateData = function(n) {
                                            var t, i, r;
                                            this.group.removeAll();
                                            t = this._lineEl;
                                            i = n.hostModel;
                                            t.setShape({
                                                segs: n.mapArray(n.getItemLayout),
                                                polyline: i.get("polyline")
                                            });
                                            t.useStyle(i.getModel("lineStyle.normal").getLineStyle());
                                            r = n.getVisual("color");
                                            r && t.setStyle("stroke", r);
                                            t.setStyle("fill");
                                            t.seriesIndex = i.seriesIndex;
                                            t.on("mousemove", function(n) {
                                                t.dataIndex = null;
                                                var i = t.findDataIndex(n.offsetX, n.offsetY);
                                                i > 0 && (t.dataIndex = i)
                                            });
                                            this.group.add(t)
                                        };
                                        r.updateLayout = function(n) {
                                            var t = n.getData();
                                            this._lineEl.setShape({
                                                segs: t.mapArray(t.getItemLayout)
                                            })
                                        };
                                        r.remove = function() {
                                            this.group.removeAll()
                                        };
                                        n.exports = e
                                    }, function(n) {
                                        n.exports = function(n) {
                                            n.eachSeriesByType("lines", function(n) {
                                                var t = n.coordinateSystem,
                                                    i = n.getData();
                                                i.each(function(r) {
                                                    var e = i.getItemModel(r),
                                                        f = e.option instanceof Array ? e.option : e.get("coords"),
                                                        u, o, s;
                                                    if (!0 && !(f instanceof Array && f.length > 0 && f[0] instanceof Array)) throw new Error("Invalid coords " + JSON.stringify(f) + ". Lines must have 2d coords array in data item.");
                                                    if (u = [], n.get("polyline"))
                                                        for (o = 0; o < f.length; o++) u.push(t.dataToPoint(f[o]));
                                                    else u[0] = t.dataToPoint(f[0]), u[1] = t.dataToPoint(f[1]), s = e.get("lineStyle.normal.curveness"), +s && (u[2] = [(u[0][0] + u[1][0]) / 2 - (u[0][1] - u[1][1]) * s, (u[0][1] + u[1][1]) / 2 - (u[1][0] - u[0][0]) * s]);
                                                    i.setItemLayout(r, u)
                                                })
                                            })
                                        }
                                    }, function(n, t, i) {
                                        i(271);
                                        i(272)
                                    }, function(n, t, i) {
                                        var r = i(28),
                                            u = i(101);
                                        n.exports = r.extend({
                                            type: "series.heatmap",
                                            getInitialData: function(n, t) {
                                                return u(n.data, this, t)
                                            },
                                            defaultOption: {
                                                coordinateSystem: "cartesian2d",
                                                zlevel: 0,
                                                z: 2,
                                                geoIndex: 0,
                                                blurSize: 30,
                                                pointSize: 20,
                                                maxOpacity: 1,
                                                minOpacity: 0
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            var e = n[1] - n[0],
                                                f, r;
                                            return t = u.map(t, function(t) {
                                                    return {
                                                        interval: [(t.interval[0] - n[0]) / e, (t.interval[1] - n[0]) / e]
                                                    }
                                                }), f = t.length, r = 0,
                                                function(n) {
                                                    for (var e, u = r; u < f; u++)
                                                        if (e = t[u].interval, e[0] <= n && n <= e[1]) {
                                                            r = u;
                                                            break
                                                        }
                                                    if (u === f)
                                                        for (u = r - 1; u >= 0; u--)
                                                            if (e = t[u].interval, e[0] <= n && n <= e[1]) {
                                                                r = u;
                                                                break
                                                            }
                                                    return u >= 0 && u < f && i[u]
                                                }
                                        }

                                        function o(n, t) {
                                            var i = n[1] - n[0];
                                            return t = [(t[0] - n[0]) / i, (t[1] - n[0]) / i],
                                                function(n) {
                                                    return n >= t[0] && n <= t[1]
                                                }
                                        }

                                        function s(n) {
                                            var t = n.dimensions;
                                            return t[0] === "lng" && t[1] === "lat"
                                        }
                                        var r = i(43),
                                            f = i(273),
                                            u = i(4);
                                        n.exports = i(1).extendChartView({
                                            type: "heatmap",
                                            render: function(n, t, i) {
                                                var u, r;
                                                if (t.eachComponent("visualMap", function(t) {
                                                        t.eachTargetSeries(function(i) {
                                                            i === n && (u = t)
                                                        })
                                                    }), !0 && !u) throw new Error("Heatmap must use with visualMap");
                                                this.group.removeAll();
                                                r = n.coordinateSystem;
                                                r.type === "cartesian2d" ? this._renderOnCartesian(r, n, i) : s(r) && this._renderOnGeo(r, n, u, i)
                                            },
                                            dispose: function() {},
                                            _renderOnCartesian: function(n, t) {
                                                var o = n.getAxis("x"),
                                                    s = n.getAxis("y"),
                                                    p = this.group;
                                                if (1) {
                                                    if (!(o.type === "category" && s.type === "category")) throw new Error("Heatmap on cartesian must have two category axes");
                                                    if (!(o.onBand && s.onBand)) throw new Error("Heatmap on cartesian must have two axes with boundaryGap true");
                                                }
                                                var l = o.getBandWidth(),
                                                    a = s.getBandWidth(),
                                                    i = t.getData(),
                                                    v = "itemStyle.normal",
                                                    y = "itemStyle.emphasis",
                                                    w = "label.normal",
                                                    b = "label.emphasis",
                                                    e = t.getModel(v).getItemStyle(["color"]),
                                                    f = t.getModel(y).getItemStyle(),
                                                    h = t.getModel("label.normal"),
                                                    c = t.getModel("label.emphasis");
                                                i.each(["x", "y", "z"], function(o, s, k, d) {
                                                    var nt = i.getItemModel(d),
                                                        rt = n.dataToPoint([o, s]),
                                                        g, tt, it;
                                                    isNaN(k) || (g = new r.Rect({
                                                        shape: {
                                                            x: rt[0] - l / 2,
                                                            y: rt[1] - a / 2,
                                                            width: l,
                                                            height: a
                                                        },
                                                        style: {
                                                            fill: i.getItemVisual(d, "color"),
                                                            opacity: i.getItemVisual(d, "opacity")
                                                        }
                                                    }), i.hasItemOption && (e = nt.getModel(v).getItemStyle(["color"]), f = nt.getModel(y).getItemStyle(), h = nt.getModel(w), c = nt.getModel(b)), tt = t.getRawValue(d), it = "-", tt && tt[2] != null && (it = tt[2]), h.getShallow("show") && (r.setText(e, h), e.text = t.getFormattedLabel(d, "normal") || it), c.getShallow("show") && (r.setText(f, c), f.text = t.getFormattedLabel(d, "emphasis") || it), g.setStyle(e), r.setHoverStyle(g, i.hasItemOption ? f : u.extend({}, f)), p.add(g), i.setItemGraphicEl(d, g))
                                                })
                                            },
                                            _renderOnGeo: function(n, t, i, u) {
                                                var a = i.targetVisuals.inRange,
                                                    k = i.targetVisuals.outOfRange,
                                                    d = t.getData(),
                                                    h = this._hmLayer || this._hmLayer || new f,
                                                    s, v, b;
                                                h.blurSize = t.get("blurSize");
                                                h.pointSize = t.get("pointSize");
                                                h.minOpacity = t.get("minOpacity");
                                                h.maxOpacity = t.get("maxOpacity");
                                                s = n.getViewRect().clone();
                                                v = n.getRoamTransform().transform;
                                                s.applyTransform(v);
                                                var c = Math.max(s.x, 0),
                                                    l = Math.max(s.y, 0),
                                                    g = Math.min(s.width + s.x, u.getWidth()),
                                                    nt = Math.min(s.height + s.y, u.getHeight()),
                                                    y = g - c,
                                                    p = nt - l,
                                                    tt = d.mapArray(["lng", "lat", "value"], function(t, i, r) {
                                                        var u = n.dataToPoint([t, i]);
                                                        return u[0] -= c, u[1] -= l, u.push(r), u
                                                    }),
                                                    w = i.getExtent(),
                                                    it = i.type === "visualMap.continuous" ? o(w, i.option.range) : e(w, i.getPieceList(), i.option.selected);
                                                h.update(tt, y, p, a.color.getNormalizer(), {
                                                    inRange: a.color.getColorMapper(),
                                                    outOfRange: k.color.getColorMapper()
                                                }, it);
                                                b = new r.Image({
                                                    style: {
                                                        width: y,
                                                        height: p,
                                                        x: c,
                                                        y: l,
                                                        image: h.canvas
                                                    },
                                                    silent: !0
                                                });
                                                this.group.add(b)
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function u() {
                                            var n = r.createCanvas();
                                            this.canvas = n;
                                            this.blurSize = 30;
                                            this.pointSize = 20;
                                            this.maxOpacity = 1;
                                            this.minOpacity = 0;
                                            this._gradientPixels = {}
                                        }
                                        var f = 256,
                                            r = i(4);
                                        u.prototype = {
                                            update: function(n, t, i, r, u, e) {
                                                var d = this._getBrush(),
                                                    g = this._getGradient(n, u, "inRange"),
                                                    nt = this._getGradient(n, u, "outOfRange"),
                                                    w = this.pointSize + this.blurSize,
                                                    h = this.canvas,
                                                    v = h.getContext("2d"),
                                                    tt = n.length,
                                                    y, o, l, a;
                                                for (h.width = t, h.height = i, y = 0; y < tt; ++y) {
                                                    var p = n[y],
                                                        it = p[0],
                                                        rt = p[1],
                                                        ut = p[2],
                                                        o = r(ut);
                                                    v.globalAlpha = o;
                                                    v.drawImage(d, it - w, rt - w)
                                                }
                                                for (var b = v.getImageData(0, 0, h.width, h.height), c = b.data, s = 0, ft = c.length, k = this.minOpacity, et = this.maxOpacity, ot = et - k; s < ft;) o = c[s + 3] / 256, l = Math.floor(o * (f - 1)) * 4, o > 0 ? (a = e(o) ? g : nt, o > 0 && (o = o * ot + k), c[s++] = a[l], c[s++] = a[l + 1], c[s++] = a[l + 2], c[s++] = a[l + 3] * o * 256) : s += 4;
                                                return v.putImageData(b, 0, 0), h
                                            },
                                            _getBrush: function() {
                                                var i = this._brushCanvas || (this._brushCanvas = r.createCanvas()),
                                                    u = this.pointSize + this.blurSize,
                                                    t = u * 2,
                                                    n;
                                                return i.width = t, i.height = t, n = i.getContext("2d"), n.clearRect(0, 0, t, t), n.shadowOffsetX = t, n.shadowBlur = this.blurSize, n.shadowColor = "#000", n.beginPath(), n.arc(-u, u, this.pointSize, 0, Math.PI * 2, !0), n.closePath(), n.fill(), i
                                            },
                                            _getGradient: function(n, t, i) {
                                                for (var o = this._gradientPixels, r = o[i] || (o[i] = new Uint8ClampedArray(1024)), u = [], f = 0, e = 0; e < 256; e++) t[i](e / 255, !0, u), r[f++] = u[0], r[f++] = u[1], r[f++] = u[2], r[f++] = u[3];
                                                return r
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        i(275);
                                        i(276);
                                        i(277);
                                        var r = i(1);
                                        r.registerProcessor(i(279))
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(4),
                                            f = i(12),
                                            u = i(1).extendComponentModel({
                                                type: "legend",
                                                dependencies: ["series"],
                                                layoutMode: {
                                                    type: "box",
                                                    ignoreSize: !0
                                                },
                                                init: function(n, t, i) {
                                                    this.mergeDefaultAndTheme(n, i);
                                                    n.selected = n.selected || {}
                                                },
                                                mergeOption: function(n) {
                                                    u.superCall(this, "mergeOption", n)
                                                },
                                                optionUpdated: function() {
                                                    var n, i, t, r;
                                                    if (this._updateData(this.ecModel), n = this._data, n[0] && this.get("selectedMode") === "single") {
                                                        for (i = !1, t = 0; t < n.length; t++)
                                                            if (r = n[t].get("name"), this.isSelected(r)) {
                                                                this.select(r);
                                                                i = !0;
                                                                break
                                                            }
                                                        i || this.select(n[0].get("name"))
                                                    }
                                                },
                                                _updateData: function(n) {
                                                    var i = r.map(this.get("data") || [], function(n) {
                                                            return (typeof n == "string" || typeof n == "number") && (n = {
                                                                name: n
                                                            }), new f(n, this, this.ecModel)
                                                        }, this),
                                                        t;
                                                    this._data = i;
                                                    t = r.map(n.getSeries(), function(n) {
                                                        return n.name
                                                    });
                                                    n.eachSeries(function(n) {
                                                        if (n.legendDataProvider) {
                                                            var i = n.legendDataProvider();
                                                            t = t.concat(i.mapArray(i.getName))
                                                        }
                                                    });
                                                    this._availableNames = t
                                                },
                                                getData: function() {
                                                    return this._data
                                                },
                                                select: function(n) {
                                                    var t = this.option.selected,
                                                        u = this.get("selectedMode"),
                                                        i;
                                                    u === "single" && (i = this._data, r.each(i, function(n) {
                                                        t[n.get("name")] = !1
                                                    }));
                                                    t[n] = !0
                                                },
                                                unSelect: function(n) {
                                                    this.get("selectedMode") !== "single" && (this.option.selected[n] = !1)
                                                },
                                                toggleSelected: function(n) {
                                                    var t = this.option.selected;
                                                    t.hasOwnProperty(n) || (t[n] = !0);
                                                    this[t[n] ? "unSelect" : "select"](n)
                                                },
                                                isSelected: function(n) {
                                                    var t = this.option.selected;
                                                    return !(t.hasOwnProperty(n) && !t[n]) && r.indexOf(this._availableNames, n) >= 0
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 4,
                                                    show: !0,
                                                    orient: "horizontal",
                                                    left: "center",
                                                    top: "top",
                                                    align: "auto",
                                                    backgroundColor: "rgba(0,0,0,0)",
                                                    borderColor: "#ccc",
                                                    borderWidth: 0,
                                                    padding: 5,
                                                    itemGap: 10,
                                                    itemWidth: 25,
                                                    itemHeight: 14,
                                                    inactiveColor: "#ccc",
                                                    textStyle: {
                                                        color: "#333"
                                                    },
                                                    selectedMode: !0,
                                                    tooltip: {
                                                        show: !1
                                                    }
                                                }
                                            });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function f(n, t, i) {
                                            var u = {},
                                                e = n === "toggleSelected",
                                                f;
                                            return i.eachComponent("legend", function(i) {
                                                e && f != null ? i[f ? "select" : "unSelect"](t.name) : (i[n](t.name), f = i.isSelected(t.name));
                                                var o = i.getData();
                                                r.each(o, function(n) {
                                                    var t = n.get("name"),
                                                        r;
                                                    t !== "\n" && t !== "" && (r = i.isSelected(t), u[t] = t in u ? u[t] && r : r)
                                                })
                                            }), {
                                                name: t.name,
                                                selected: u
                                            }
                                        }
                                        var u = i(1),
                                            r = i(4);
                                        u.registerAction("legendToggleSelect", "legendselectchanged", r.curry(f, "toggleSelected"));
                                        u.registerAction("legendSelect", "legendselected", r.curry(f, "select"));
                                        u.registerAction("legendUnSelect", "legendunselected", r.curry(f, "unSelect"))
                                    }, function(n, t, i) {
                                        function s(n, t) {
                                            t.dispatchAction({
                                                type: "legendToggleSelect",
                                                name: n
                                            })
                                        }

                                        function h(n, t, i) {
                                            var r = i.getZr().storage.getDisplayList()[0];
                                            r && r.useHoverLayer || n.get("legendHoverLink") && i.dispatchAction({
                                                type: "highlight",
                                                seriesName: n.name,
                                                name: t
                                            })
                                        }

                                        function c(n, t, i) {
                                            var r = i.getZr().storage.getDisplayList()[0];
                                            r && r.useHoverLayer || n.get("legendHoverLink") && i.dispatchAction({
                                                type: "downplay",
                                                seriesName: n.name,
                                                name: t
                                            })
                                        }
                                        var f = i(4),
                                            e = i(106),
                                            u = i(43),
                                            o = i(278),
                                            r = f.curry;
                                        n.exports = i(1).extendComponentView({
                                            type: "legend",
                                            init: function() {
                                                this._symbolTypeStore = {}
                                            },
                                            render: function(n, t, i) {
                                                var a = this.group,
                                                    v, l, e;
                                                (a.removeAll(), n.get("show")) && (v = n.get("selectedMode"), l = n.get("align"), l === "auto" && (l = n.get("left") === "right" && n.get("orient") === "vertical" ? "right" : "left"), e = {}, f.each(n.getData(), function(f) {
                                                    var o = f.get("name"),
                                                        y, w, p;
                                                    if (o === "" || o === "\n") {
                                                        a.add(new u.Group({
                                                            newline: !0
                                                        }));
                                                        return
                                                    }
                                                    if (y = t.getSeriesByName(o)[0], !e[o]) {
                                                        if (y) {
                                                            w = y.getData();
                                                            p = w.getVisual("color");
                                                            typeof p == "function" && (p = p(y.getDataParams(0)));
                                                            var b = w.getVisual("legendSymbol") || "roundRect",
                                                                k = w.getVisual("symbol"),
                                                                d = this._createItem(o, f, n, b, k, l, p, v);
                                                            d.on("click", r(s, o, i)).on("mouseover", r(h, y, null, i)).on("mouseout", r(c, y, null, i));
                                                            e[o] = !0
                                                        } else t.eachRawSeries(function(t) {
                                                            var u, a;
                                                            if (!e[o] && t.legendDataProvider) {
                                                                if (u = t.legendDataProvider(), a = u.indexOfName(o), a < 0) return;
                                                                var y = u.getItemVisual(a, "color"),
                                                                    p = this._createItem(o, f, n, "roundRect", null, l, y, v);
                                                                p.on("click", r(s, o, i)).on("mouseover", r(h, t, o, i)).on("mouseout", r(c, t, o, i));
                                                                e[o] = !0
                                                            }
                                                        }, this);
                                                        !0 && (e[o] || console.warn(o + " series not exists. Legend data should be same with series name or data name."))
                                                    }
                                                }, this), o.layout(a, n, i), o.addBackground(a, n))
                                            },
                                            _createItem: function(n, t, i, r, o, s, h, c) {
                                                var p = i.get("itemWidth"),
                                                    y = i.get("itemHeight"),
                                                    w = i.get("inactiveColor"),
                                                    b = i.isSelected(n),
                                                    l = new u.Group,
                                                    nt = t.getModel("textStyle"),
                                                    tt = t.get("icon"),
                                                    k = t.getModel("tooltip"),
                                                    rt = k.parentModel,
                                                    a, it, g;
                                                r = tt || r;
                                                l.add(e.createSymbol(r, 0, 0, p, y, b ? h : w));
                                                !tt && o && (o !== r || o == "none") && (a = y * .8, o === "none" && (o = "circle"), l.add(e.createSymbol(o, (p - a) / 2, (y - a) / 2, a, a, b ? h : w)));
                                                var ut = s === "left" ? p + 5 : -5,
                                                    ft = s,
                                                    v = i.get("formatter"),
                                                    d = n;
                                                return typeof v == "string" && v ? d = v.replace("{name}", n) : typeof v == "function" && (d = v(n)), it = new u.Text({
                                                    style: {
                                                        text: d,
                                                        x: ut,
                                                        y: y / 2,
                                                        fill: b ? nt.getTextColor() : w,
                                                        textFont: nt.getFont(),
                                                        textAlign: ft,
                                                        textVerticalAlign: "middle"
                                                    }
                                                }), l.add(it), g = new u.Rect({
                                                    shape: l.getBoundingRect(),
                                                    invisible: !0,
                                                    tooltip: k.get("show") ? f.extend({
                                                        content: n,
                                                        formatter: rt.get("formatter", !0) || function() {
                                                            return n
                                                        },
                                                        formatterParams: {
                                                            componentType: "legend",
                                                            legendIndex: i.componentIndex,
                                                            name: n,
                                                            $vars: ["name"]
                                                        }
                                                    }, k.option) : null
                                                }), l.add(g), l.eachChild(function(n) {
                                                    n.silent = !0
                                                }), g.silent = !c, this.group.add(l), u.setHoverStyle(l), l
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            r.positionGroup(n, t.getBoxLayoutParams(), {
                                                width: i.getWidth(),
                                                height: i.getHeight()
                                            }, t.get("padding"))
                                        }
                                        var r = i(21),
                                            f = i(6),
                                            u = i(43);
                                        n.exports = {
                                            layout: function(n, t, i) {
                                                var u = r.getLayoutRect(t.getBoxLayoutParams(), {
                                                    width: i.getWidth(),
                                                    height: i.getHeight()
                                                }, t.get("padding"));
                                                r.box(t.get("orient"), n, t.get("itemGap"), u.width, u.height);
                                                e(n, t, i)
                                            },
                                            addBackground: function(n, t) {
                                                var i = f.normalizeCssArray(t.get("padding")),
                                                    r = n.getBoundingRect(),
                                                    o = t.getItemStyle(["color", "opacity"]),
                                                    e;
                                                o.fill = t.get("backgroundColor");
                                                e = new u.Rect({
                                                    shape: {
                                                        x: r.x - i[3],
                                                        y: r.y - i[0],
                                                        width: r.width + i[1] + i[3],
                                                        height: r.height + i[0] + i[2]
                                                    },
                                                    style: o,
                                                    silent: !0,
                                                    z2: -1
                                                });
                                                u.subPixelOptimizeRect(e);
                                                n.add(e)
                                            }
                                        }
                                    }, function(n) {
                                        n.exports = function(n) {
                                            var t = n.findComponents({
                                                mainType: "legend"
                                            });
                                            t && t.length && n.filterSeries(function(n) {
                                                for (var i = 0; i < t.length; i++)
                                                    if (!t[i].isSelected(n.name)) return !1;
                                                return !0
                                            })
                                        }
                                    }, function(n, t, i) {
                                        i(281);
                                        i(282);
                                        i(1).registerAction({
                                            type: "showTip",
                                            event: "showTip",
                                            update: "none"
                                        }, function() {});
                                        i(1).registerAction({
                                            type: "hideTip",
                                            event: "hideTip",
                                            update: "none"
                                        }, function() {})
                                    }, function(n, t, i) {
                                        i(1).extendComponentModel({
                                            type: "tooltip",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 8,
                                                show: !0,
                                                showContent: !0,
                                                trigger: "item",
                                                triggerOn: "mousemove",
                                                alwaysShowContent: !1,
                                                showDelay: 0,
                                                hideDelay: 100,
                                                transitionDuration: .4,
                                                enterable: !1,
                                                backgroundColor: "rgba(50,50,50,0.7)",
                                                borderColor: "#333",
                                                borderRadius: 4,
                                                borderWidth: 0,
                                                padding: 5,
                                                extraCssText: "",
                                                axisPointer: {
                                                    type: "line",
                                                    axis: "auto",
                                                    animation: !0,
                                                    animationDurationUpdate: 200,
                                                    animationEasingUpdate: "exponentialOut",
                                                    lineStyle: {
                                                        color: "#555",
                                                        width: 1,
                                                        type: "solid"
                                                    },
                                                    crossStyle: {
                                                        color: "#555",
                                                        width: 1,
                                                        type: "dashed",
                                                        textStyle: {}
                                                    },
                                                    shadowStyle: {
                                                        color: "rgba(150,150,150,0.3)"
                                                    }
                                                },
                                                textStyle: {
                                                    color: "#fff",
                                                    fontSize: 14
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function b(n, t) {
                                            if (!n || !t) return !1;
                                            var i = h.round;
                                            return i(n[0]) === i(t[0]) && i(n[1]) === i(t[1])
                                        }

                                        function f(n, t, i, r) {
                                            return {
                                                x1: n,
                                                y1: t,
                                                x2: i,
                                                y2: r
                                            }
                                        }

                                        function a(n, t, i, r) {
                                            return {
                                                x: n,
                                                y: t,
                                                width: i,
                                                height: r
                                            }
                                        }

                                        function v(n, t, i, r, u, f) {
                                            return {
                                                cx: n,
                                                cy: t,
                                                r0: i,
                                                r: r,
                                                startAngle: u,
                                                endAngle: f,
                                                clockwise: !0
                                            }
                                        }

                                        function k(n, t, i, r, u) {
                                            var e = i.clientWidth,
                                                o = i.clientHeight,
                                                f = 20;
                                            return n + e + f > r ? n -= e + f : n += f, t + o + f > u ? t -= o + f : t += f, [n, t]
                                        }

                                        function d(n, t, i) {
                                            var f = i.clientWidth,
                                                e = i.clientHeight,
                                                o = 5,
                                                r = 0,
                                                u = 0,
                                                s = t.width,
                                                h = t.height;
                                            switch (n) {
                                                case "inside":
                                                    r = t.x + s / 2 - f / 2;
                                                    u = t.y + h / 2 - e / 2;
                                                    break;
                                                case "top":
                                                    r = t.x + s / 2 - f / 2;
                                                    u = t.y - e - o;
                                                    break;
                                                case "bottom":
                                                    r = t.x + s / 2 - f / 2;
                                                    u = t.y + h + o;
                                                    break;
                                                case "left":
                                                    r = t.x - f - o;
                                                    u = t.y + h / 2 - e / 2;
                                                    break;
                                                case "right":
                                                    r = t.x + s + o;
                                                    u = t.y + h / 2 - e / 2
                                            }
                                            return [r, u]
                                        }

                                        function o(n, t, i, u, f, e, o) {
                                            var l = o.getWidth(),
                                                a = o.getHeight(),
                                                h = e && e.getBoundingRect().clone(),
                                                s;
                                            e && h.applyTransform(e.transform);
                                            typeof n == "function" && (n = n([t, i], f, u.el, h));
                                            r.isArray(n) ? (t = c(n[0], l), i = c(n[1], a)) : typeof n == "string" && e ? (s = d(n, h, u.el), t = s[0], i = s[1]) : (s = k(t, i, u.el, l, a), t = s[0], i = s[1]);
                                            u.moveTo(t, i)
                                        }

                                        function y(n) {
                                            var t = n.coordinateSystem,
                                                i = n.get("tooltip.trigger", !0);
                                            return !(!t || t.type !== "cartesian2d" && t.type !== "polar" && t.type !== "singleAxis" || i === "item")
                                        }
                                        var p = i(283),
                                            u = i(43),
                                            r = i(4),
                                            s = i(6),
                                            h = i(7),
                                            w = i(5),
                                            c = h.parsePercent,
                                            e = i(2),
                                            l = i(12);
                                        i(1).extendComponentView({
                                            type: "tooltip",
                                            _axisPointers: {},
                                            init: function(n, t) {
                                                if (!e.node) {
                                                    var i = new p(t.getDom(), t);
                                                    this._tooltipContent = i;
                                                    t.on("showTip", this._manuallyShowTip, this);
                                                    t.on("hideTip", this._manuallyHideTip, this)
                                                }
                                            },
                                            render: function(n, t, i) {
                                                var o, s, u, f, r;
                                                if (!e.node)
                                                    if (this.group.removeAll(), this._axisPointers = {}, this._tooltipModel = n, this._ecModel = t, this._api = i, this._lastHover = {}, o = this._tooltipContent, o.update(), o.enterable = n.get("enterable"), this._alwaysShowContent = n.get("alwaysShowContent"), this._seriesGroupByAxis = this._prepareAxisTriggerData(n, t), s = this._crossText, s && this.group.add(s), u = n.get("triggerOn"), this._lastX != null && this._lastY != null && u !== "none" && (f = this, clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
                                                            f._manuallyShowTip({
                                                                x: f._lastX,
                                                                y: f._lastY
                                                            })
                                                        })), r = this._api.getZr(), r.off("click", this._tryShow), r.off("mousemove", this._mousemove), r.off("mouseout", this._hide), r.off("globalout", this._hide), u === "click") r.on("click", this._tryShow, this);
                                                    else if (u === "mousemove") {
                                                    r.on("mousemove", this._mousemove, this);
                                                    r.on("mouseout", this._hide, this);
                                                    r.on("globalout", this._hide, this)
                                                }
                                            },
                                            _mousemove: function(n) {
                                                var t = this._tooltipModel.get("showDelay"),
                                                    i = this;
                                                clearTimeout(this._showTimeout);
                                                t > 0 ? this._showTimeout = setTimeout(function() {
                                                    i._tryShow(n)
                                                }, t) : this._tryShow(n)
                                            },
                                            _manuallyShowTip: function(n) {
                                                var c, f, o, s, h, i, e, u;
                                                if (n.from !== this.uid) {
                                                    var l = this._ecModel,
                                                        a = n.seriesIndex,
                                                        t = l.getSeriesByIndex(a),
                                                        v = this._api;
                                                    if (n.x == null || n.y == null) {
                                                        if (t || l.eachSeries(function(n) {
                                                                y(n) && !t && (t = n)
                                                            }), t) {
                                                            if (c = t.getData(), f = w.queryDataIndex(c, n), f == null || r.isArray(f)) return;
                                                            u = c.getItemGraphicEl(f);
                                                            h = t.coordinateSystem;
                                                            t.getTooltipPosition ? (i = t.getTooltipPosition(f) || [], o = i[0], s = i[1]) : h && h.dataToPoint ? (i = h.dataToPoint(c.getValues(r.map(h.dimensions, function(n) {
                                                                return t.coordDimToDataDim(n)[0]
                                                            }), f, !0)), o = i && i[0], s = i && i[1]) : u && (e = u.getBoundingRect().clone(), e.applyTransform(u.transform), o = e.x + e.width / 2, s = e.y + e.height / 2);
                                                            o != null && s != null && this._tryShow({
                                                                offsetX: o,
                                                                offsetY: s,
                                                                position: n.position,
                                                                target: u,
                                                                event: {}
                                                            })
                                                        }
                                                    } else u = v.getZr().handler.findHover(n.x, n.y), this._tryShow({
                                                        offsetX: n.x,
                                                        offsetY: n.y,
                                                        position: n.position,
                                                        target: u,
                                                        event: {}
                                                    })
                                                }
                                            },
                                            _manuallyHideTip: function(n) {
                                                n.from !== this.uid && this._hide()
                                            },
                                            _prepareAxisTriggerData: function(n, t) {
                                                var i = {};
                                                return t.eachSeries(function(n) {
                                                    if (y(n)) {
                                                        var r = n.coordinateSystem,
                                                            t, u;
                                                        r.type === "cartesian2d" ? (t = r.getBaseAxis(), u = t.dim + t.index) : r.type === "singleAxis" ? (t = r.getAxis(), u = t.dim + t.type) : (t = r.getBaseAxis(), u = t.dim + r.name);
                                                        i[u] = i[u] || {
                                                            coordSys: [],
                                                            series: []
                                                        };
                                                        i[u].coordSys.push(r);
                                                        i[u].series.push(n)
                                                    }
                                                }, this), i
                                            },
                                            _tryShow: function(n) {
                                                var t = n.target,
                                                    i = this._tooltipModel,
                                                    s = i.get("trigger"),
                                                    u = this._ecModel,
                                                    f = this._api,
                                                    r, e;
                                                if (i)
                                                    if (this._lastX = n.offsetX, this._lastY = n.offsetY, t && t.dataIndex != null) {
                                                        var h = t.dataModel || u.getSeriesByIndex(t.seriesIndex),
                                                            c = t.dataIndex,
                                                            a = h.getData().getItemModel(c);
                                                        (a.get("tooltip.trigger") || s) === "axis" ? this._showAxisTooltip(i, u, n): (this._ticket = "", this._hideAxisPointer(), this._resetLastHover(), this._showItemTooltipContent(h, c, t.dataType, n));
                                                        f.dispatchAction({
                                                            type: "showTip",
                                                            from: this.uid,
                                                            dataIndexInside: t.dataIndex,
                                                            seriesIndex: t.seriesIndex
                                                        })
                                                    } else if (t && t.tooltip) {
                                                    r = t.tooltip;
                                                    typeof r == "string" && (e = r, r = {
                                                        content: e,
                                                        formatter: e
                                                    });
                                                    var o = new l(r, i),
                                                        v = o.get("content"),
                                                        y = Math.random();
                                                    this._showTooltipContent(o, v, o.get("formatterParams") || {}, y, n.offsetX, n.offsetY, n.position, t, f)
                                                } else s === "item" ? this._hide() : this._showAxisTooltip(i, u, n), i.get("axisPointer.type") === "cross" && f.dispatchAction({
                                                    type: "showTip",
                                                    from: this.uid,
                                                    x: n.offsetX,
                                                    y: n.offsetY
                                                })
                                            },
                                            _showAxisTooltip: function(n, t, i) {
                                                var f = n.getModel("axisPointer"),
                                                    e = f.get("type"),
                                                    u, s, h, o;
                                                e === "cross" && (u = i.target, u && u.dataIndex != null && (s = t.getSeriesByIndex(u.seriesIndex), h = u.dataIndex, this._showItemTooltipContent(s, h, u.dataType, i)));
                                                this._showAxisPointer();
                                                o = !0;
                                                r.each(this._seriesGroupByAxis, function(n) {
                                                    var p = n.coordSys,
                                                        t = p[0],
                                                        u = [i.offsetX, i.offsetY],
                                                        v, s, y, h, c, l, a;
                                                    if (!t.containPoint(u)) {
                                                        this._hideAxisPointer(t.name);
                                                        return
                                                    }
                                                    o = !1;
                                                    v = t.dimensions;
                                                    s = t.pointToData(u, !0);
                                                    u = t.dataToPoint(s);
                                                    y = t.getBaseAxis();
                                                    h = f.get("axis");
                                                    h === "auto" && (h = y.dim);
                                                    c = !1;
                                                    l = this._lastHover;
                                                    e === "cross" ? (b(l.data, s) && (c = !0), l.data = s) : (a = r.indexOf(v, h), l.data === s[a] && (c = !0), l.data = s[a]);
                                                    t.type !== "cartesian2d" || c ? t.type !== "polar" || c ? t.type !== "singleAxis" || c || this._showSinglePointer(f, t, h, u) : this._showPolarPointer(f, t, h, u) : this._showCartesianPointer(f, t, h, u);
                                                    e !== "cross" && this._dispatchAndShowSeriesTooltipContent(t, n.series, u, s, c, i.position)
                                                }, this);
                                                this._tooltipModel.get("show") || this._hideAxisPointer();
                                                o && this._hide()
                                            },
                                            _showCartesianPointer: function(n, t, i, r) {
                                                function o(i, r, e) {
                                                    var o = i === "x" ? f(r[0], e[0], r[0], e[1]) : f(e[0], r[1], e[1], r[1]),
                                                        h = s._getPointerElement(t, n, i, o);
                                                    u.subPixelOptimizeLine({
                                                        shape: o,
                                                        style: h.style
                                                    });
                                                    c ? u.updateProps(h, {
                                                        shape: o
                                                    }, n) : h.attr({
                                                        shape: o
                                                    })
                                                }

                                                function y(i, r, f) {
                                                    var v = t.getAxis(i),
                                                        e = v.getBandWidth(),
                                                        h = f[1] - f[0],
                                                        o = i === "x" ? a(r[0] - e / 2, f[0], e, h) : a(f[0], r[1] - e / 2, h, e),
                                                        l = s._getPointerElement(t, n, i, o);
                                                    c ? u.updateProps(l, {
                                                        shape: o
                                                    }, n) : l.attr({
                                                        shape: o
                                                    })
                                                }
                                                var s = this,
                                                    e = n.get("type"),
                                                    h = t.getBaseAxis(),
                                                    c = e !== "cross" && h.type === "category" && h.getBandWidth() > 20,
                                                    l, v;
                                                e === "cross" ? (o("x", r, t.getAxis("y").getGlobalExtent()), o("y", r, t.getAxis("x").getGlobalExtent()), this._updateCrossText(t, r, n)) : (l = t.getAxis(i === "x" ? "y" : "x"), v = l.getGlobalExtent(), t.type === "cartesian2d" && (e === "line" ? o : y)(i, r, v))
                                            },
                                            _showSinglePointer: function(n, t, i, r) {
                                                function l(i, r, e) {
                                                    var l = t.getAxis(),
                                                        a = l.orient,
                                                        s = a === "horizontal" ? f(r[0], e[0], r[0], e[1]) : f(e[0], r[1], e[1], r[1]),
                                                        c = o._getPointerElement(t, n, i, s);
                                                    h ? u.updateProps(c, {
                                                        shape: s
                                                    }, n) : c.attr({
                                                        shape: s
                                                    })
                                                }
                                                var o = this,
                                                    s = n.get("type"),
                                                    h = s !== "cross" && t.getBaseAxis().type === "category",
                                                    e = t.getRect(),
                                                    c = [e.y, e.y + e.height];
                                                l(i, r, c)
                                            },
                                            _showPolarPointer: function(n, t, i, r) {
                                                function o(i, r, e) {
                                                    var c = t.pointToCoord(r),
                                                        o, l, a, v;
                                                    i === "angle" ? (l = t.coordToPoint([e[0], c[1]]), a = t.coordToPoint([e[1], c[1]]), o = f(l[0], l[1], a[0], a[1])) : o = {
                                                        cx: t.cx,
                                                        cy: t.cy,
                                                        r: c[0]
                                                    };
                                                    v = s._getPointerElement(t, n, i, o);
                                                    h ? u.updateProps(v, {
                                                        shape: o
                                                    }, n) : v.attr({
                                                        shape: o
                                                    })
                                                }

                                                function p(i, r, f) {
                                                    var y = t.getAxis(i),
                                                        e = y.getBandWidth(),
                                                        o = t.pointToCoord(r),
                                                        c, a = Math.PI / 180,
                                                        l;
                                                    c = i === "angle" ? v(t.cx, t.cy, f[0], f[1], (-o[1] - e / 2) * a, (-o[1] + e / 2) * a) : v(t.cx, t.cy, o[0] - e / 2, o[0] + e / 2, 0, Math.PI * 2);
                                                    l = s._getPointerElement(t, n, i, c);
                                                    h ? u.updateProps(l, {
                                                        shape: c
                                                    }, n) : l.attr({
                                                        shape: c
                                                    })
                                                }
                                                var s = this,
                                                    e = n.get("type"),
                                                    a = t.getAngleAxis(),
                                                    y = t.getRadiusAxis(),
                                                    h = e !== "cross" && t.getBaseAxis().type === "category",
                                                    c, l;
                                                e === "cross" ? (o("angle", r, y.getExtent()), o("radius", r, a.getExtent()), this._updateCrossText(t, r, n)) : (c = t.getAxis(i === "radius" ? "angle" : "radius"), l = c.getExtent(), (e === "line" ? o : p)(i, r, l))
                                            },
                                            _updateCrossText: function(n, t, i) {
                                                var o = i.getModel("crossStyle"),
                                                    h = o.getModel("textStyle"),
                                                    c = this._tooltipModel,
                                                    f = this._crossText,
                                                    e, l;
                                                f || (f = this._crossText = new u.Text({
                                                    style: {
                                                        textAlign: "left",
                                                        textVerticalAlign: "bottom"
                                                    }
                                                }), this.group.add(f));
                                                e = n.pointToData(t);
                                                l = n.dimensions;
                                                e = r.map(e, function(t, i) {
                                                    var r = n.getAxis(l[i]);
                                                    return r.type === "category" || r.type === "time" ? r.scale.getLabel(t) : s.addCommas(t.toFixed(r.getPixelPrecision()))
                                                });
                                                f.setStyle({
                                                    fill: h.getTextColor() || o.get("color"),
                                                    textFont: h.getFont(),
                                                    text: e.join(", "),
                                                    x: t[0] + 5,
                                                    y: t[1] - 5
                                                });
                                                f.z = c.get("z");
                                                f.zlevel = c.get("zlevel")
                                            },
                                            _getPointerElement: function(n, t, i, r) {
                                                var c = this._tooltipModel,
                                                    a = c.get("z"),
                                                    v = c.get("zlevel"),
                                                    f = this._axisPointers,
                                                    e = n.name,
                                                    h;
                                                if (f[e] = f[e] || {}, f[e][i]) return f[e][i];
                                                var l = t.get("type"),
                                                    y = t.getModel(l + "Style"),
                                                    o = l === "shadow",
                                                    s = y[o ? "getAreaStyle" : "getLineStyle"](),
                                                    p = n.type === "polar" ? o ? "Sector" : i === "radius" ? "Circle" : "Line" : o ? "Rect" : "Line";
                                                return o ? s.stroke = null : s.fill = null, h = f[e][i] = new u[p]({
                                                    style: s,
                                                    z: a,
                                                    zlevel: v,
                                                    silent: !0,
                                                    shape: r
                                                }), this.group.add(h), h
                                            },
                                            _dispatchAndShowSeriesTooltipContent: function(n, t, i, u, f, e) {
                                                var l = this._tooltipModel,
                                                    s = n.getBaseAxis(),
                                                    y = s.dim === "x" || s.dim === "radius" ? 0 : 1,
                                                    h = r.map(t, function(n) {
                                                        return {
                                                            seriesIndex: n.seriesIndex,
                                                            dataIndexInside: n.getAxisTooltipDataIndex ? n.getAxisTooltipDataIndex(n.coordDimToDataDim(s.dim), u, s) : n.getData().indexOfNearest(n.coordDimToDataDim(s.dim)[0], u[y], !1, s.type === "category" ? .5 : null)
                                                        }
                                                    }),
                                                    a = this._lastHover,
                                                    c = this._api,
                                                    v;
                                                if (a.payloadBatch && !f && c.dispatchAction({
                                                        type: "downplay",
                                                        batch: a.payloadBatch
                                                    }), f || (c.dispatchAction({
                                                        type: "highlight",
                                                        batch: h
                                                    }), a.payloadBatch = h), c.dispatchAction({
                                                        type: "showTip",
                                                        dataIndexInside: h[0].dataIndexInside,
                                                        seriesIndex: h[0].seriesIndex,
                                                        from: this.uid
                                                    }), s && l.get("showContent") && l.get("show"))
                                                    if (v = r.map(t, function(n, t) {
                                                            return n.getDataParams(h[t].dataIndexInside)
                                                        }), f) o(e || l.get("position"), i[0], i[1], this._tooltipContent, v, null, c);
                                                    else {
                                                        var p = h[0].dataIndexInside,
                                                            w = s.type === "time" ? s.scale.getLabel(u[y]) : t[0].getData().getName(p),
                                                            b = (w ? w + "<br />" : "") + r.map(t, function(n, t) {
                                                                return n.formatTooltip(h[t].dataIndexInside, !0)
                                                            }).join("<br />"),
                                                            k = "axis_" + n.name + "_" + p;
                                                        this._showTooltipContent(l, b, v, k, i[0], i[1], e, null, c)
                                                    }
                                            },
                                            _showItemTooltipContent: function(n, t, i, r) {
                                                var o = this._api,
                                                    s = n.getData(i),
                                                    h = s.getItemModel(t),
                                                    u = h.get("tooltip", !0),
                                                    f;
                                                typeof u == "string" && (f = u, u = {
                                                    formatter: f
                                                });
                                                var c = this._tooltipModel,
                                                    e = n.getModel("tooltip", c),
                                                    a = new l(u, e, e.ecModel),
                                                    v = n.getDataParams(t, i),
                                                    y = n.formatTooltip(t, !1, i),
                                                    p = "item_" + n.name + "_" + t;
                                                this._showTooltipContent(a, y, v, p, r.offsetX, r.offsetY, r.position, r.target, o)
                                            },
                                            _showTooltipContent: function(n, t, i, r, u, f, e, h, c) {
                                                var l, a, v;
                                                if (this._ticket = "", n.get("showContent") && n.get("show")) {
                                                    if (l = this._tooltipContent, a = n.get("formatter"), e = e || n.get("position"), v = t, a)
                                                        if (typeof a == "string") v = s.formatTpl(a, i);
                                                        else if (typeof a == "function") {
                                                        var y = this,
                                                            p = r,
                                                            w = function(n, t) {
                                                                n === y._ticket && (l.setContent(t), o(e, u, f, l, i, h, c))
                                                            };
                                                        y._ticket = p;
                                                        v = a(i, p, w)
                                                    }
                                                    l.show(n);
                                                    l.setContent(v);
                                                    o(e, u, f, l, i, h, c)
                                                }
                                            },
                                            _showAxisPointer: function(n) {
                                                if (n) {
                                                    var t = this._axisPointers[n];
                                                    t && r.each(t, function(n) {
                                                        n.show()
                                                    })
                                                } else this.group.eachChild(function(n) {
                                                    n.show()
                                                }), this.group.show()
                                            },
                                            _resetLastHover: function() {
                                                var n = this._lastHover;
                                                n.payloadBatch && this._api.dispatchAction({
                                                    type: "downplay",
                                                    batch: n.payloadBatch
                                                });
                                                this._lastHover = {}
                                            },
                                            _hideAxisPointer: function(n) {
                                                if (n) {
                                                    var t = this._axisPointers[n];
                                                    t && r.each(t, function(n) {
                                                        n.hide()
                                                    })
                                                } else this.group.children().length && this.group.hide()
                                            },
                                            _hide: function() {
                                                clearTimeout(this._showTimeout);
                                                this._hideAxisPointer();
                                                this._resetLastHover();
                                                this._alwaysShowContent || this._tooltipContent.hideLater(this._tooltipModel.get("hideDelay"));
                                                this._api.dispatchAction({
                                                    type: "hideTip",
                                                    from: this.uid
                                                });
                                                this._lastX = this._lastY = null
                                            },
                                            dispose: function(n, t) {
                                                if (!e.node) {
                                                    var i = t.getZr();
                                                    this._tooltipContent.hide();
                                                    i.off("click", this._tryShow);
                                                    i.off("mousemove", this._mousemove);
                                                    i.off("mouseout", this._hide);
                                                    i.off("globalout", this._hide);
                                                    t.off("showTip", this._manuallyShowTip);
                                                    t.off("hideTip", this._manuallyHideTip)
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function v(n) {
                                            var t = "cubic-bezier(0.23, 1, 0.32, 1)",
                                                i = "left " + n + "s " + t + ",top " + n + "s " + t;
                                            return u.map(l, function(n) {
                                                return n + "transition:" + i
                                            }).join(";")
                                        }

                                        function y(n) {
                                            var t = [],
                                                i = n.get("fontSize"),
                                                r = n.getTextColor();
                                            return r && t.push("color:" + r), t.push("font:" + n.getFont()), i && t.push("line-height:" + Math.round(i * 3 / 2) + "px"), o(["decoration", "align"], function(i) {
                                                var r = n.get(i);
                                                r && t.push("text-" + i + ":" + r)
                                            }), t.join(";")
                                        }

                                        function p(n) {
                                            n = n;
                                            var t = [],
                                                r = n.get("transitionDuration"),
                                                i = n.get("backgroundColor"),
                                                f = n.getModel("textStyle"),
                                                u = n.get("padding");
                                            return r && t.push(v(r)), i && (c.canvasSupported ? t.push("background-Color:" + i) : (t.push("background-Color:#" + s.toHex(i)), t.push("filter:alpha(opacity=70)"))), o(["width", "color", "radius"], function(i) {
                                                var r = "border-" + i,
                                                    f = h(r),
                                                    u = n.get(f);
                                                u != null && t.push(r + ":" + u + (i === "color" ? "" : "px"))
                                            }), t.push(y(f)), u != null && t.push("padding:" + e.normalizeCssArray(u).join("px ") + "px"), t.join(";") + ";"
                                        }

                                        function f(n, t) {
                                            var u = document.createElement("div"),
                                                f = t.getZr(),
                                                i;
                                            this.el = u;
                                            this._x = t.getWidth() / 2;
                                            this._y = t.getHeight() / 2;
                                            n.appendChild(u);
                                            this._container = n;
                                            this._show = !1;
                                            this._hideTimeout;
                                            i = this;
                                            u.onmouseenter = function() {
                                                i.enterable && (clearTimeout(i._hideTimeout), i._show = !0);
                                                i._inContent = !0
                                            };
                                            u.onmousemove = function(t) {
                                                if (t = t || window.event, !i.enterable) {
                                                    var u = f.handler;
                                                    r.normalizeEvent(n, t);
                                                    u.dispatch("mousemove", t)
                                                }
                                            };
                                            u.onmouseleave = function() {
                                                i.enterable && i._show && i.hideLater(i._hideDelay);
                                                i._inContent = !1
                                            };
                                            w(u, n)
                                        }

                                        function w(n, t) {
                                            function i(n) {
                                                u(n.target) || n.preventDefault()
                                            }

                                            function u(i) {
                                                while (i && i !== t) {
                                                    if (i === n) return !0;
                                                    i = i.parentNode
                                                }
                                            }
                                            r.addEventListener(t, "touchstart", i);
                                            r.addEventListener(t, "touchmove", i);
                                            r.addEventListener(t, "touchend", i)
                                        }
                                        var u = i(4),
                                            s = i(39),
                                            r = i(87),
                                            e = i(6),
                                            o = u.each,
                                            h = e.toCamelCase,
                                            c = i(2),
                                            l = ["", "-webkit-", "-moz-", "-o-"],
                                            a = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;";
                                        f.prototype = {
                                            constructor: f,
                                            enterable: !0,
                                            update: function() {
                                                var n = this._container,
                                                    i = n.currentStyle || document.defaultView.getComputedStyle(n),
                                                    t = n.style;
                                                t.position !== "absolute" && i.position !== "absolute" && (t.position = "relative")
                                            },
                                            show: function(n) {
                                                clearTimeout(this._hideTimeout);
                                                var t = this.el;
                                                t.style.cssText = a + p(n) + ";left:" + this._x + "px;top:" + this._y + "px;" + (n.get("extraCssText") || "");
                                                t.style.display = t.innerHTML ? "block" : "none";
                                                this._show = !0
                                            },
                                            setContent: function(n) {
                                                var t = this.el;
                                                t.innerHTML = n;
                                                t.style.display = n ? "block" : "none"
                                            },
                                            moveTo: function(n, t) {
                                                var i = this.el.style;
                                                i.left = n + "px";
                                                i.top = t + "px";
                                                this._x = n;
                                                this._y = t
                                            },
                                            hide: function() {
                                                this.el.style.display = "none";
                                                this._show = !1
                                            },
                                            hideLater: function(n) {
                                                !this._show || this._inContent && this.enterable || (n ? (this._hideDelay = n, this._show = !1, this._hideTimeout = setTimeout(u.bind(this.hide, this), n)) : this.hide())
                                            },
                                            isShow: function() {
                                                return this._show
                                            }
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        "use strict";
                                        i(285);
                                        i(291);
                                        i(293);
                                        i(1).extendComponentView({
                                            type: "polar"
                                        })
                                    }, function(n, t, i) {
                                        function c(n, t) {
                                            var r = n.get("center"),
                                                h = n.get("radius"),
                                                u = t.getWidth(),
                                                f = t.getHeight(),
                                                i = s.parsePercent,
                                                e, o;
                                            this.cx = i(r[0], u);
                                            this.cy = i(r[1], f);
                                            e = this.getRadiusAxis();
                                            o = Math.min(u, f) / 2;
                                            e.setExtent(0, i(h, o))
                                        }

                                        function l(n) {
                                            var u = this,
                                                t = u.getAngleAxis(),
                                                i = u.getRadiusAxis(),
                                                r, e;
                                            t.scale.setExtent(Infinity, -Infinity);
                                            i.scale.setExtent(Infinity, -Infinity);
                                            n.eachSeries(function(n) {
                                                if (n.coordinateSystem === u) {
                                                    var r = n.getData();
                                                    i.scale.unionExtent(r.getDataExtent("radius", i.type !== "category"));
                                                    t.scale.unionExtent(r.getDataExtent("angle", t.type !== "category"))
                                                }
                                            });
                                            f(t, t.model);
                                            f(i, i.model);
                                            t.type !== "category" || t.onBand || (r = t.getExtent(), e = 360 / t.scale.count(), t.inverse ? r[1] += e : r[1] -= e, t.setExtent(r[0], r[1]))
                                        }

                                        function e(n, t) {
                                            if (n.type = t.get("type"), n.scale = u.createScaleByModel(t), n.onBand = t.get("boundaryGap") && n.type === "category", t.mainType === "angleAxis") {
                                                var i = t.get("startAngle");
                                                n.inverse = t.get("inverse") ^ t.get("clockwise");
                                                n.setExtent(i, i + (n.inverse ? -360 : 360))
                                            }
                                            t.axis = n;
                                            n.model = t
                                        }
                                        var r = i(286),
                                            s = i(7),
                                            h = i(4),
                                            u = i(114),
                                            f = u.niceScaleExtent,
                                            o;
                                        i(289);
                                        o = {
                                            dimensions: r.prototype.dimensions,
                                            create: function(n, t) {
                                                var i = [];
                                                return n.eachComponent("polar", function(n, u) {
                                                    var f = new r(u);
                                                    f.resize = c;
                                                    f.update = l;
                                                    var o = f.getRadiusAxis(),
                                                        s = f.getAngleAxis(),
                                                        h = n.findAxisModel("radiusAxis"),
                                                        a = n.findAxisModel("angleAxis");
                                                    e(o, h);
                                                    e(s, a);
                                                    f.resize(n, t);
                                                    i.push(f);
                                                    n.coordinateSystem = f
                                                }), n.eachSeries(function(t) {
                                                    if (t.get("coordinateSystem") === "polar") {
                                                        var i = n.queryComponents({
                                                            mainType: "polar",
                                                            index: t.get("polarIndex"),
                                                            id: t.get("polarId")
                                                        })[0];
                                                        if (!0 && !i) throw new Error('Polar "' + h.retrieve(t.get("polarIndex"), t.get("polarId"), 0) + '" not found');
                                                        t.coordinateSystem = i.coordinateSystem
                                                    }
                                                }), i
                                            }
                                        };
                                        i(26).register("polar", o)
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(287),
                                            f = i(288),
                                            r = function(n) {
                                                this.name = n || "";
                                                this.cx = 0;
                                                this.cy = 0;
                                                this._radiusAxis = new u;
                                                this._angleAxis = new f
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            type: "polar",
                                            dimensions: ["radius", "angle"],
                                            containPoint: function(n) {
                                                var t = this.pointToCoord(n);
                                                return this._radiusAxis.contain(t[0]) && this._angleAxis.contain(t[1])
                                            },
                                            containData: function(n) {
                                                return this._radiusAxis.containData(n[0]) && this._angleAxis.containData(n[1])
                                            },
                                            getAxis: function(n) {
                                                return this["_" + n + "Axis"]
                                            },
                                            getAxesByScale: function(n) {
                                                var t = [],
                                                    i = this._angleAxis,
                                                    r = this._radiusAxis;
                                                return i.scale.type === n && t.push(i), r.scale.type === n && t.push(r), t
                                            },
                                            getAngleAxis: function() {
                                                return this._angleAxis
                                            },
                                            getRadiusAxis: function() {
                                                return this._radiusAxis
                                            },
                                            getOtherAxis: function(n) {
                                                var t = this._angleAxis;
                                                return n === t ? this._radiusAxis : t
                                            },
                                            getBaseAxis: function() {
                                                return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis()
                                            },
                                            dataToPoints: function(n) {
                                                return n.mapArray(this.dimensions, function(n, t) {
                                                    return this.dataToPoint([n, t])
                                                }, this)
                                            },
                                            dataToPoint: function(n, t) {
                                                return this.coordToPoint([this._radiusAxis.dataToRadius(n[0], t), this._angleAxis.dataToAngle(n[1], t)])
                                            },
                                            pointToData: function(n, t) {
                                                var i = this.pointToCoord(n);
                                                return [this._radiusAxis.radiusToData(i[0], t), this._angleAxis.angleToData(i[1], t)]
                                            },
                                            pointToCoord: function(n) {
                                                var i = n[0] - this.cx,
                                                    r = n[1] - this.cy,
                                                    s = this.getAngleAxis(),
                                                    u = s.getExtent(),
                                                    f = Math.min(u[0], u[1]),
                                                    o = Math.max(u[0], u[1]),
                                                    e, t, h;
                                                for (s.inverse ? f = o - 360 : o = f + 360, e = Math.sqrt(i * i + r * r), i /= e, r /= e, t = Math.atan2(-r, i) / Math.PI * 180, h = t < f ? 1 : -1; t < f || t > o;) t += h * 360;
                                                return [e, t]
                                            },
                                            coordToPoint: function(n) {
                                                var t = n[0],
                                                    i = n[1] / 180 * Math.PI,
                                                    r = Math.cos(i) * t + this.cx,
                                                    u = -Math.sin(i) * t + this.cy;
                                                return [r, u]
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n, t) {
                                            r.call(this, "radius", n, t);
                                            this.type = "category"
                                        }
                                        var f = i(4),
                                            r = i(123);
                                        u.prototype = {
                                            constructor: u,
                                            dataToRadius: r.prototype.dataToCoord,
                                            radiusToData: r.prototype.coordToData
                                        };
                                        f.inherits(u, r);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n, t) {
                                            t = t || [0, 360];
                                            r.call(this, "angle", n, t);
                                            this.type = "category"
                                        }
                                        var f = i(4),
                                            r = i(123);
                                        u.prototype = {
                                            constructor: u,
                                            dataToAngle: r.prototype.dataToCoord,
                                            angleToData: r.prototype.coordToData
                                        };
                                        f.inherits(u, r);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        "use strict";
                                        i(290);
                                        i(1).extendComponentModel({
                                            type: "polar",
                                            dependencies: ["polarAxis", "angleAxis"],
                                            coordinateSystem: null,
                                            findAxisModel: function(n) {
                                                var t, i = this.ecModel;
                                                return i.eachComponent(n, function(n) {
                                                    var r = i.queryComponents({
                                                        mainType: "polar",
                                                        index: n.getShallow("polarIndex"),
                                                        id: n.getShallow("polarId")
                                                    })[0];
                                                    r === this && (t = n)
                                                }, this), t
                                            },
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 0,
                                                center: ["50%", "50%"],
                                                radius: "80%"
                                            }
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function o(n, t) {
                                            return t.type || (t.data ? "category" : "value")
                                        }
                                        var f = i(4),
                                            s = i(19),
                                            e = i(127),
                                            r = s.extend({
                                                type: "polarAxis",
                                                axis: null
                                            }),
                                            u;
                                        f.merge(r.prototype, i(129));
                                        f.merge(r.prototype, i(130));
                                        u = {
                                            angle: {
                                                startAngle: 90,
                                                clockwise: !0,
                                                splitNumber: 12,
                                                axisLabel: {
                                                    rotate: !1
                                                }
                                            },
                                            radius: {
                                                splitNumber: 5
                                            }
                                        };
                                        e("angle", r, o, u.angle);
                                        e("radius", r, o, u.radius)
                                    }, function(n, t, i) {
                                        "use strict";
                                        i(285);
                                        i(292)
                                    }, function(n, t, i) {
                                        "use strict";

                                        function f(n, t, i, r) {
                                            var u = n.coordToPoint([t, r]),
                                                f = n.coordToPoint([i, r]);
                                            return {
                                                x1: u[0],
                                                y1: u[1],
                                                x2: f[0],
                                                y2: f[1]
                                            }
                                        }
                                        var u = i(4),
                                            r = i(43),
                                            e = i(12),
                                            o = ["axisLine", "axisLabel", "axisTick", "splitLine", "splitArea"];
                                        i(1).extendComponentView({
                                            type: "angleAxis",
                                            render: function(n, t) {
                                                if (this.group.removeAll(), n.get("show")) {
                                                    var e = t.getComponent("polar", n.get("polarIndex")),
                                                        i = n.axis,
                                                        r = e.coordinateSystem,
                                                        s = r.getRadiusAxis().getExtent(),
                                                        f = i.getTicksCoords();
                                                    i.type !== "category" && f.pop();
                                                    u.each(o, function(t) {
                                                        n.get(t + ".show") && this["_" + t](n, r, f, s)
                                                    }, this)
                                                }
                                            },
                                            _axisLine: function(n, t, i, u) {
                                                var e = n.getModel("axisLine.lineStyle"),
                                                    f = new r.Circle({
                                                        shape: {
                                                            cx: t.cx,
                                                            cy: t.cy,
                                                            r: u[1]
                                                        },
                                                        style: e.getLineStyle(),
                                                        z2: 1,
                                                        silent: !0
                                                    });
                                                f.style.fill = null;
                                                this.group.add(f)
                                            },
                                            _axisTick: function(n, t, i, e) {
                                                var o = n.getModel("axisTick"),
                                                    s = (o.get("inside") ? -1 : 1) * o.get("length"),
                                                    h = u.map(i, function(n) {
                                                        return new r.Line({
                                                            shape: f(t, e[1], e[1] + s, n)
                                                        })
                                                    });
                                                this.group.add(r.mergePath(h, {
                                                    style: u.defaults(o.getModel("lineStyle").getLineStyle(), {
                                                        stroke: n.get("axisLine.lineStyle.color")
                                                    })
                                                }))
                                            },
                                            _axisLabel: function(n, t, i, u) {
                                                for (var p = n.axis, s = n.get("data"), l = n.getModel("axisLabel"), a = l.getModel("textStyle"), w = n.getFormattedLabels(), b = l.get("margin"), k = p.getLabelsCoords(), f = 0; f < i.length; f++) {
                                                    var h = u[1],
                                                        o = t.coordToPoint([h + b, k[f]]),
                                                        v = t.cx,
                                                        y = t.cy,
                                                        d = Math.abs(o[0] - v) / h < .3 ? "center" : o[0] > v ? "left" : "right",
                                                        g = Math.abs(o[1] - y) / h < .3 ? "middle" : o[1] > y ? "top" : "bottom",
                                                        c = a;
                                                    s && s[f] && s[f].textStyle && (c = new e(s[f].textStyle, a));
                                                    this.group.add(new r.Text({
                                                        style: {
                                                            x: o[0],
                                                            y: o[1],
                                                            fill: c.getTextColor() || n.get("axisLine.lineStyle.color"),
                                                            text: w[f],
                                                            textAlign: d,
                                                            textVerticalAlign: g,
                                                            textFont: c.getFont()
                                                        },
                                                        silent: !0
                                                    }))
                                                }
                                            },
                                            _splitLine: function(n, t, i, e) {
                                                var a = n.getModel("splitLine"),
                                                    l = a.getModel("lineStyle"),
                                                    s = l.get("color"),
                                                    v = 0,
                                                    h, c, o;
                                                for (s = s instanceof Array ? s : [s], h = [], o = 0; o < i.length; o++) c = v++ % s.length, h[c] = h[c] || [], h[c].push(new r.Line({
                                                    shape: f(t, e[0], e[1], i[o])
                                                }));
                                                for (o = 0; o < h.length; o++) this.group.add(r.mergePath(h[o], {
                                                    style: u.defaults({
                                                        stroke: s[o % s.length]
                                                    }, l.getLineStyle()),
                                                    silent: !0,
                                                    z: n.get("z")
                                                }))
                                            },
                                            _splitArea: function(n, t, i, f) {
                                                var v = n.getModel("splitArea"),
                                                    l = v.getModel("areaStyle"),
                                                    o = l.get("color"),
                                                    y = 0,
                                                    h, e;
                                                o = o instanceof Array ? o : [o];
                                                var s = [],
                                                    c = Math.PI / 180,
                                                    a = -i[0] * c,
                                                    p = Math.min(f[0], f[1]),
                                                    w = Math.max(f[0], f[1]),
                                                    b = n.get("clockwise");
                                                for (e = 1; e < i.length; e++) h = y++ % o.length, s[h] = s[h] || [], s[h].push(new r.Sector({
                                                    shape: {
                                                        cx: t.cx,
                                                        cy: t.cy,
                                                        r0: p,
                                                        r: w,
                                                        startAngle: a,
                                                        endAngle: -i[e] * c,
                                                        clockwise: b
                                                    },
                                                    silent: !0
                                                })), a = -i[e] * c;
                                                for (e = 0; e < s.length; e++) this.group.add(r.mergePath(s[e], {
                                                    style: u.defaults({
                                                        fill: o[e % o.length]
                                                    }, l.getAreaStyle()),
                                                    silent: !0
                                                }))
                                            }
                                        })
                                    }, function(n, t, i) {
                                        i(285);
                                        i(294)
                                    }, function(n, t, i) {
                                        "use strict";

                                        function s(n, t, i) {
                                            return {
                                                position: [n.cx, n.cy],
                                                rotation: i / 180 * Math.PI,
                                                labelDirection: -1,
                                                tickDirection: -1,
                                                nameDirection: 1,
                                                labelRotation: t.getModel("axisLabel").get("rotate"),
                                                z2: 1
                                            }
                                        }
                                        var r = i(4),
                                            u = i(43),
                                            f = i(133),
                                            e = ["axisLine", "axisLabel", "axisTick", "axisName"],
                                            o = ["splitLine", "splitArea"];
                                        i(1).extendComponentView({
                                            type: "radiusAxis",
                                            render: function(n, t) {
                                                if (this.group.removeAll(), n.get("show")) {
                                                    var u = t.getComponent("polar", n.get("polarIndex")),
                                                        a = u.coordinateSystem.getAngleAxis(),
                                                        h = n.axis,
                                                        c = u.coordinateSystem,
                                                        v = h.getTicksCoords(),
                                                        l = a.getExtent()[0],
                                                        y = h.getExtent(),
                                                        p = s(c, n, l),
                                                        i = new f(n, p);
                                                    r.each(e, i.add, i);
                                                    this.group.add(i.getGroup());
                                                    r.each(o, function(t) {
                                                        n.get(t + ".show") && this["_" + t](n, c, l, y, v)
                                                    }, this)
                                                }
                                            },
                                            _splitLine: function(n, t, i, f, e) {
                                                var a = n.getModel("splitLine"),
                                                    l = a.getModel("lineStyle"),
                                                    s = l.get("color"),
                                                    v = 0,
                                                    h, c, o;
                                                for (s = s instanceof Array ? s : [s], h = [], o = 0; o < e.length; o++) c = v++ % s.length, h[c] = h[c] || [], h[c].push(new u.Circle({
                                                    shape: {
                                                        cx: t.cx,
                                                        cy: t.cy,
                                                        r: e[o]
                                                    },
                                                    silent: !0
                                                }));
                                                for (o = 0; o < h.length; o++) this.group.add(u.mergePath(h[o], {
                                                    style: r.defaults({
                                                        stroke: s[o % s.length],
                                                        fill: null
                                                    }, l.getLineStyle()),
                                                    silent: !0
                                                }))
                                            },
                                            _splitArea: function(n, t, i, f, e) {
                                                var v = n.getModel("splitArea"),
                                                    a = v.getModel("areaStyle"),
                                                    s = a.get("color"),
                                                    y = 0,
                                                    h, l, c, o;
                                                for (s = s instanceof Array ? s : [s], h = [], l = e[0], o = 1; o < e.length; o++) c = y++ % s.length, h[c] = h[c] || [], h[c].push(new u.Sector({
                                                    shape: {
                                                        cx: t.cx,
                                                        cy: t.cy,
                                                        r0: l,
                                                        r: e[o],
                                                        startAngle: 0,
                                                        endAngle: Math.PI * 2
                                                    },
                                                    silent: !0
                                                })), l = e[o];
                                                for (o = 0; o < h.length; o++) this.group.add(u.mergePath(h[o], {
                                                    style: r.defaults({
                                                        fill: s[o % s.length]
                                                    }, a.getAreaStyle()),
                                                    silent: !0
                                                }))
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function r(n, t) {
                                            t.update = "updateView";
                                            u.registerAction(t, function(t, i) {
                                                var r = {};
                                                return i.eachComponent({
                                                    mainType: "geo",
                                                    query: t
                                                }, function(i) {
                                                    i[n](t.name);
                                                    var u = i.coordinateSystem;
                                                    f.each(u.regions, function(n) {
                                                        r[n.name] = i.isSelected(n.name) || !1
                                                    })
                                                }), {
                                                    selected: r,
                                                    name: t.name
                                                }
                                            })
                                        }
                                        i(296);
                                        i(164);
                                        i(297);
                                        i(177);
                                        var u = i(1),
                                            f = i(4);
                                        r("toggleSelected", {
                                            type: "geoToggleSelect",
                                            event: "geoselectchanged"
                                        });
                                        r("select", {
                                            type: "geoSelect",
                                            event: "geoselected"
                                        });
                                        r("unSelect", {
                                            type: "geoUnSelect",
                                            event: "geounselected"
                                        })
                                    }, function(n, t, i) {
                                        "use strict";
                                        var e = i(5),
                                            r = i(19),
                                            o = i(12),
                                            u = i(4),
                                            s = i(141),
                                            h = i(164),
                                            f = r.extend({
                                                type: "geo",
                                                coordinateSystem: null,
                                                layoutMode: "box",
                                                init: function(n) {
                                                    r.prototype.init.apply(this, arguments);
                                                    e.defaultEmphasis(n.label, ["position", "show", "textStyle", "distance", "formatter"])
                                                },
                                                optionUpdated: function() {
                                                    var n = this.option,
                                                        t = this;
                                                    n.regions = h.getFilledRegions(n.regions, n.map);
                                                    this._optionModelMap = u.reduce(n.regions || [], function(n, i) {
                                                        return i.name && (n[i.name] = new o(i, t)), n
                                                    }, {});
                                                    this.updateSelectedMap(n.regions)
                                                },
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 0,
                                                    show: !0,
                                                    left: "center",
                                                    top: "center",
                                                    aspectScale: .75,
                                                    silent: !1,
                                                    map: "",
                                                    center: null,
                                                    zoom: 1,
                                                    scaleLimit: null,
                                                    label: {
                                                        normal: {
                                                            show: !1,
                                                            textStyle: {
                                                                color: "#000"
                                                            }
                                                        },
                                                        emphasis: {
                                                            show: !0,
                                                            textStyle: {
                                                                color: "rgb(100,0,0)"
                                                            }
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            borderWidth: .5,
                                                            borderColor: "#444",
                                                            color: "#eee"
                                                        },
                                                        emphasis: {
                                                            color: "rgba(255,215,0,0.8)"
                                                        }
                                                    },
                                                    regions: []
                                                },
                                                getRegionModel: function(n) {
                                                    return this._optionModelMap[n]
                                                },
                                                getFormattedLabel: function(n, t) {
                                                    var i = this.get("label." + t + ".formatter"),
                                                        r = {
                                                            name: n
                                                        };
                                                    return typeof i == "function" ? (r.status = t, i(r)) : typeof i == "string" ? i.replace("{a}", r.seriesName) : void 0
                                                },
                                                setZoom: function(n) {
                                                    this.option.zoom = n
                                                },
                                                setCenter: function(n) {
                                                    this.option.center = n
                                                }
                                            });
                                        u.mixin(f, s);
                                        n.exports = f
                                    }, function(n, t, i) {
                                        "use strict";
                                        var r = i(174);
                                        n.exports = i(1).extendComponentView({
                                            type: "geo",
                                            init: function(n, t) {
                                                var i = new r(t, !0);
                                                this._mapDraw = i;
                                                this.group.add(i.group)
                                            },
                                            render: function(n, t, i, r) {
                                                if (!r || r.type !== "geoToggleSelect" || r.from !== this.uid) {
                                                    var u = this._mapDraw;
                                                    n.get("show") ? u.draw(n, t, i, this, r) : this._mapDraw.group.removeAll();
                                                    this.group.silent = n.get("silent")
                                                }
                                            },
                                            dispose: function() {
                                                this._mapDraw && this._mapDraw.remove()
                                            }
                                        })
                                    }, function(n, t, i) {
                                        i(299);
                                        i(302);
                                        i(303);
                                        var r = i(1);
                                        r.extendComponentView({
                                            type: "single"
                                        })
                                    }, function(n, t, i) {
                                        function u(n, t) {
                                            var i = [];
                                            return n.eachComponent("singleAxis", function(u, f) {
                                                var e = new r(u, n, t);
                                                e.name = "single_" + f;
                                                e.resize(u, t);
                                                u.coordinateSystem = e;
                                                i.push(e)
                                            }), n.eachSeries(function(t) {
                                                if (t.get("coordinateSystem") === "singleAxis") {
                                                    var i = n.queryComponents({
                                                        mainType: "singleAxis",
                                                        index: t.get("singleAxisIndex"),
                                                        id: t.get("singleAxisId")
                                                    })[0];
                                                    t.coordinateSystem = i.coordinateSystem
                                                }
                                            }), i
                                        }
                                        var r = i(300);
                                        i(26).register("single", {
                                            create: u,
                                            dimensions: r.prototype.dimensions
                                        })
                                    }, function(n, t, i) {
                                        function r(n, t, i) {
                                            this.dimension = "x";
                                            this.dimensions = ["x"];
                                            this._axis = null;
                                            this._rect;
                                            this._init(n, t, i);
                                            this._model = n
                                        }
                                        var f = i(301),
                                            u = i(114),
                                            e = i(21);
                                        r.prototype = {
                                            type: "singleAxis",
                                            constructor: r,
                                            _init: function(n) {
                                                var i = this.dimension,
                                                    t = new f(i, u.createScaleByModel(n), [0, 0], n.get("type"), n.get("position")),
                                                    r = t.type === "category";
                                                t.onBand = r && n.get("boundaryGap");
                                                t.inverse = n.get("inverse");
                                                t.orient = n.get("orient");
                                                n.axis = t;
                                                t.model = n;
                                                this._axis = t
                                            },
                                            update: function(n) {
                                                this._updateAxisFromSeries(n)
                                            },
                                            _updateAxisFromSeries: function(n) {
                                                n.eachSeries(function(n) {
                                                    var t = n.getData(),
                                                        i = this.dimension;
                                                    this._axis.scale.unionExtent(t.getDataExtent(n.coordDimToDataDim(i)));
                                                    u.niceScaleExtent(this._axis, this._axis.model)
                                                }, this)
                                            },
                                            resize: function(n, t) {
                                                this._rect = e.getLayoutRect({
                                                    left: n.get("left"),
                                                    top: n.get("top"),
                                                    right: n.get("right"),
                                                    bottom: n.get("bottom"),
                                                    width: n.get("width"),
                                                    height: n.get("height")
                                                }, {
                                                    width: t.getWidth(),
                                                    height: t.getHeight()
                                                });
                                                this._adjustAxis()
                                            },
                                            getRect: function() {
                                                return this._rect
                                            },
                                            _adjustAxis: function() {
                                                var n = this._rect,
                                                    t = this._axis,
                                                    i = t.isHorizontal(),
                                                    r = i ? [0, n.width] : [0, n.height],
                                                    u = t.reverse ? 1 : 0;
                                                t.setExtent(r[u], r[1 - u]);
                                                this._updateAxisTransform(t, i ? n.x : n.y)
                                            },
                                            _updateAxisTransform: function(n, t) {
                                                var i = n.getExtent(),
                                                    r = i[0] + i[1],
                                                    u = n.isHorizontal();
                                                n.toGlobalCoord = u ? function(n) {
                                                    return n + t
                                                } : function(n) {
                                                    return r - n + t
                                                };
                                                n.toLocalCoord = u ? function(n) {
                                                    return n - t
                                                } : function(n) {
                                                    return r - n + t
                                                }
                                            },
                                            getAxis: function() {
                                                return this._axis
                                            },
                                            getBaseAxis: function() {
                                                return this._axis
                                            },
                                            containPoint: function(n) {
                                                var t = this.getRect(),
                                                    i = this.getAxis(),
                                                    r = i.orient;
                                                return r === "horizontal" ? i.contain(i.toLocalCoord(n[0])) && n[1] >= t.y && n[1] <= t.y + t.height : i.contain(i.toLocalCoord(n[1])) && n[0] >= t.y && n[0] <= t.y + t.height
                                            },
                                            pointToData: function(n) {
                                                var t = this.getAxis();
                                                return [t.coordToData(t.toLocalCoord(n[t.orient === "horizontal" ? 0 : 1]))]
                                            },
                                            dataToPoint: function(n) {
                                                var i = this.getAxis(),
                                                    t = this.getRect(),
                                                    r = [],
                                                    u = i.orient === "horizontal" ? 0 : 1;
                                                return r[u] = i.toGlobalCoord(i.dataToCoord(+n)), r[1 - u] = u === 0 ? t.y + t.height / 2 : t.x + t.width / 2, r
                                            }
                                        };
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            f = i(123),
                                            e = i(114),
                                            r = function(n, t, i, r, u) {
                                                f.call(this, n, t, i);
                                                this.type = r || "value";
                                                this.position = u || "bottom";
                                                this.orient = null;
                                                this._labelInterval = null
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            model: null,
                                            isHorizontal: function() {
                                                var n = this.position;
                                                return n === "top" || n === "bottom"
                                            },
                                            getLabelInterval: function() {
                                                var n = this._labelInterval;
                                                if (!n) {
                                                    var i = this.model,
                                                        r = i.getModel("axisLabel"),
                                                        t = r.get("interval");
                                                    if (!(this.type === "category" && t === "auto")) return this._labelInterval = t === "auto" ? 0 : t;
                                                    n = this._labelInterval = e.getAxisLabelInterval(u.map(this.scale.getTicks(), this.dataToCoord, this), i.getFormattedLabels(), r.getModel("textStyle").getFont(), this.isHorizontal())
                                                }
                                                return n
                                            },
                                            toGlobalCoord: null,
                                            toLocalCoord: null
                                        };
                                        u.inherits(r, f);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        function l(n) {
                                            var l = n.coordinateSystem,
                                                f = n.axis,
                                                t = {},
                                                u = f.position,
                                                e = f.orient,
                                                i = l.getRect(),
                                                r = [i.x, i.x + i.width, i.y, i.y + i.height],
                                                s = {
                                                    horizontal: {
                                                        top: r[2],
                                                        bottom: r[3]
                                                    },
                                                    vertical: {
                                                        left: r[0],
                                                        right: r[1]
                                                    }
                                                },
                                                h, c, o;
                                            return t.position = [e === "vertical" ? s.vertical[u] : r[0], e === "horizontal" ? s.horizontal[u] : r[3]], h = {
                                                horizontal: 0,
                                                vertical: 1
                                            }, t.rotation = Math.PI / 2 * h[e], c = {
                                                top: -1,
                                                bottom: 1,
                                                right: 1,
                                                left: -1
                                            }, t.labelDirection = t.tickDirection = t.nameDirection = c[u], n.getModel("axisTick").get("inside") && (t.tickDirection = -t.tickDirection), n.getModel("axisLabel").get("inside") && (t.labelDirection = -t.labelDirection), o = n.getModel("axisLabel").get("rotate"), t.labelRotation = u === "top" ? -o : o, t.labelInterval = f.getLabelInterval(), t.z2 = 1, t
                                        }
                                        var r = i(133),
                                            e = i(4),
                                            u = i(43),
                                            o = r.getInterval,
                                            s = r.ifIgnoreOnTick,
                                            h = ["axisLine", "axisLabel", "axisTick", "axisName"],
                                            f = "splitLine",
                                            c = i(1).extendComponentView({
                                                type: "singleAxis",
                                                render: function(n) {
                                                    var u = this.group,
                                                        i, t;
                                                    u.removeAll();
                                                    i = l(n);
                                                    t = new r(n, i);
                                                    e.each(h, t.add, t);
                                                    u.add(t.getGroup());
                                                    n.get(f + ".show") && this["_" + f](n, i.labelInterval)
                                                },
                                                _splitLine: function(n, t) {
                                                    var a = n.axis,
                                                        w = n.getModel("splitLine"),
                                                        y = w.getModel("lineStyle"),
                                                        p = y.get("width"),
                                                        r = y.get("color"),
                                                        k = o(w, t),
                                                        l, v, i;
                                                    r = r instanceof Array ? r : [r];
                                                    var f = n.coordinateSystem.getRect(),
                                                        d = a.isHorizontal(),
                                                        c = [],
                                                        g = 0,
                                                        b = a.getTicksCoords(),
                                                        e = [],
                                                        h = [];
                                                    for (i = 0; i < b.length; ++i) s(a, i, k) || (l = a.toGlobalCoord(b[i]), d ? (e[0] = l, e[1] = f.y, h[0] = l, h[1] = f.y + f.height) : (e[0] = f.x, e[1] = l, h[0] = f.x + f.width, h[1] = l), v = g++ % r.length, c[v] = c[v] || [], c[v].push(new u.Line(u.subPixelOptimizeLine({
                                                        shape: {
                                                            x1: e[0],
                                                            y1: e[1],
                                                            x2: h[0],
                                                            y2: h[1]
                                                        },
                                                        style: {
                                                            lineWidth: p
                                                        },
                                                        silent: !0
                                                    }))));
                                                    for (i = 0; i < c.length; ++i) this.group.add(u.mergePath(c[i], {
                                                        style: {
                                                            stroke: r[i % r.length],
                                                            lineDash: y.getLineDash(p),
                                                            lineWidth: p
                                                        },
                                                        silent: !0
                                                    }))
                                                }
                                            });
                                        n.exports = c
                                    }, function(n, t, i) {
                                        function o(n, t) {
                                            return t.type || (t.data ? "category" : "value")
                                        }
                                        var u = i(19),
                                            f = i(127),
                                            e = i(4),
                                            r = u.extend({
                                                type: "singleAxis",
                                                layoutMode: "box",
                                                axis: null,
                                                coordinateSystem: null
                                            });
                                        e.merge(r.prototype, i(129));
                                        f("single", r, o, {
                                            left: "5%",
                                            top: "5%",
                                            right: "5%",
                                            bottom: "5%",
                                            type: "value",
                                            position: "bottom",
                                            orient: "horizontal",
                                            axisLine: {
                                                show: !0,
                                                lineStyle: {
                                                    width: 2,
                                                    type: "solid"
                                                }
                                            },
                                            axisTick: {
                                                show: !0,
                                                length: 6,
                                                lineStyle: {
                                                    width: 2
                                                }
                                            },
                                            axisLabel: {
                                                show: !0,
                                                interval: "auto"
                                            },
                                            splitLine: {
                                                show: !0,
                                                lineStyle: {
                                                    type: "dashed",
                                                    opacity: .2
                                                }
                                            }
                                        });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        i(1).registerPreprocessor(i(305));
                                        i(306);
                                        i(311);
                                        i(312);
                                        i(313);
                                        i(314)
                                    }, function(n, t, i) {
                                        function f(n) {
                                            var t = {};
                                            r.each(n, function(n) {
                                                t[n] = 1
                                            });
                                            n.length = 0;
                                            r.each(t, function(t, i) {
                                                n.push(i)
                                            })
                                        }
                                        var r = i(4),
                                            u = ["rect", "polygon", "keep", "clear"];
                                        n.exports = function(n, t) {
                                            var e = n && n.brush,
                                                s, i;
                                            if (r.isArray(e) || (e = e ? [e] : []), e.length) {
                                                s = [];
                                                r.each(e, function(n) {
                                                    var t = n.hasOwnProperty("toolbox") ? n.toolbox : [];
                                                    t instanceof Array && (s = s.concat(t))
                                                });
                                                i = n && n.toolbox;
                                                r.isArray(i) && (i = i[0]);
                                                i || (i = {
                                                    feature: {}
                                                }, n.toolbox = [i]);
                                                var h = i.feature || (i.feature = {}),
                                                    c = h.brush || (h.brush = {}),
                                                    o = c.type || (c.type = []);
                                                o.push.apply(o, s);
                                                f(o);
                                                t && !o.length && o.push.apply(o, u)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function k(n, t, i, r, u) {
                                            var f, e;
                                            u && ((f = n.getZr(), f[s]) || (f[o] || (f[o] = d), e = b.createOrUpdate(f, o, i, t), e(n, r)))
                                        }

                                        function d(n, t) {
                                            if (!n.isDisposed()) {
                                                var i = n.getZr();
                                                i[s] = !0;
                                                n.dispatchAction({
                                                    type: "brushSelect",
                                                    batch: t
                                                });
                                                i[s] = !1
                                            }
                                        }

                                        function a(n, t, i, r) {
                                            for (var u, e = i.getItemLayout(r), f = 0, o = t.length; f < o; f++)
                                                if (u = t[f], n[u.brushType](e, u.selectors, u)) return !0
                                        }

                                        function v(n) {
                                            var t = n.brushSelector,
                                                i, u;
                                            return r.isString(t) ? (i = [], r.each(f, function(n, r) {
                                                i[r] = n[t]
                                            }), i) : r.isFunction(t) ? (u = {}, r.each(f, function(n, i) {
                                                u[i] = t
                                            }), u) : t
                                        }

                                        function g(n, t) {
                                            var i = n.option.seriesIndex;
                                            return i != null && i !== "all" && (r.isArray(i) ? r.indexOf(i, t) < 0 : t !== i)
                                        }

                                        function nt(n) {
                                            var t = n.selectors = {};
                                            return r.each(f[n.brushType], function(i, r) {
                                                t[r] = function(r) {
                                                    return i(r, t, n)
                                                }
                                            }), n
                                        }

                                        function p(n) {
                                            return new w(n[0][0], n[1][0], n[0][1] - n[0][0], n[1][1] - n[1][0])
                                        }
                                        var u = i(1),
                                            h = i(307),
                                            r = i(4),
                                            w = i(9),
                                            f = i(308),
                                            b = i(309),
                                            e = i(310),
                                            c = ["inBrush", "outOfBrush"],
                                            o = "__ecBrushSelect",
                                            s = "__ecInBrushSelectEvent",
                                            l = u.PRIORITY.VISUAL.BRUSH,
                                            y;
                                        u.registerLayout(l, function(n, t, i) {
                                            n.eachComponent({
                                                mainType: "brush"
                                            }, function(t) {
                                                i && i.type === "takeGlobalCursor" && t.setBrushOption(i.key === "brush" ? i.brushOption : {
                                                    brushType: !1
                                                });
                                                t.coordInfoList = e.makeCoordInfoList(t.option, n);
                                                e.parseInputRanges(t, n)
                                            })
                                        });
                                        u.registerVisual(l, function(n, t, i) {
                                            var u = [],
                                                f, o;
                                            n.eachComponent({
                                                mainType: "brush"
                                            }, function(t, i) {
                                                function s(n) {
                                                    return p === "all" || tt[n]
                                                }

                                                function k(n) {
                                                    return !!n.length
                                                }

                                                function ft(n, t) {
                                                    var i = n.coordinateSystem;
                                                    b |= i.hasAxisbrushed();
                                                    s(t) && i.eachActiveState(n.getData(), function(n, t) {
                                                        n === "active" && (w[t] = 1)
                                                    })
                                                }

                                                function et(n, i, u) {
                                                    var f = v(n),
                                                        o;
                                                    f && !g(t, i) && (r.each(rt, function(i) {
                                                        f[i.brushType] && e.controlSeries(i, t, n) && u.push(i);
                                                        b |= k(u)
                                                    }), s(i) && k(u) && (o = n.getData(), o.each(function(n) {
                                                        a(f, u, o, n) && (w[n] = 1)
                                                    })))
                                                }
                                                var d = {
                                                        brushId: t.id,
                                                        brushIndex: i,
                                                        brushName: t.name,
                                                        areas: r.clone(t.areas),
                                                        selected: []
                                                    },
                                                    rt, ut;
                                                u.push(d);
                                                var l = t.option,
                                                    p = l.brushLink,
                                                    tt = [],
                                                    w = [],
                                                    it = [],
                                                    b = 0;
                                                i || (f = l.throttleType, o = l.throttleDelay);
                                                rt = r.map(t.areas, function(n) {
                                                    return nt(r.defaults({
                                                        boundingRect: y[n.brushType](n)
                                                    }, n))
                                                });
                                                ut = h.createVisualMappings(t.option, c, function(n) {
                                                    n.mappingMethod = "fixed"
                                                });
                                                r.isArray(p) && r.each(p, function(n) {
                                                    tt[n] = 1
                                                });
                                                n.eachSeries(function(n, t) {
                                                    var i = it[t] = [];
                                                    n.subType === "parallel" ? ft(n, t, i) : et(n, t, i)
                                                });
                                                n.eachSeries(function(n, t) {
                                                    var r = {
                                                        seriesId: n.id,
                                                        seriesIndex: t,
                                                        seriesName: n.name,
                                                        dataIndex: []
                                                    };
                                                    d.selected.push(r);
                                                    var f = v(n),
                                                        u = it[t],
                                                        i = n.getData(),
                                                        e = s(t) ? function(n) {
                                                            return w[n] ? (r.dataIndex.push(i.getRawIndex(n)), "inBrush") : "outOfBrush"
                                                        } : function(n) {
                                                            return a(f, u, i, n) ? (r.dataIndex.push(i.getRawIndex(n)), "inBrush") : "outOfBrush"
                                                        };
                                                    (s(t) ? b : k(u)) && h.applyVisual(c, ut, i, e)
                                                })
                                            });
                                            k(t, f, o, u, i)
                                        });
                                        y = {
                                            lineX: r.noop,
                                            lineY: r.noop,
                                            rect: function(n) {
                                                return p(n.range)
                                            },
                                            polygon: function(n) {
                                                for (var i, t, u = n.range, r = 0, f = u.length; r < f; r++) t = t || [
                                                    [Infinity, -Infinity],
                                                    [Infinity, -Infinity]
                                                ], i = u[r], i[0] < t[0][0] && (t[0][0] = i[0]), i[0] > t[0][1] && (t[0][1] = i[0]), i[1] < t[1][0] && (t[1][0] = i[1]), i[1] > t[1][1] && (t[1][1] = i[1]);
                                                return t && p(t)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function e(n) {
                                            if (n)
                                                for (var t in n)
                                                    if (n.hasOwnProperty(t)) return !0
                                        }
                                        var r = i(4),
                                            u = i(193),
                                            f = r.each,
                                            o = {
                                                createVisualMappings: function(n, t, i) {
                                                    function o() {
                                                        var n = function() {};
                                                        return n.prototype.__hidden = n.prototype, new n
                                                    }
                                                    var e = {};
                                                    return f(t, function(t) {
                                                        var s = e[t] = o();
                                                        f(n[t], function(n, f) {
                                                            if (u.isValidType(f)) {
                                                                var e = {
                                                                    type: f,
                                                                    visual: n
                                                                };
                                                                i && i(e, t);
                                                                s[f] = new u(e);
                                                                f === "opacity" && (e = r.clone(e), e.type = "colorAlpha", s.__hidden.__alphaForOpacity = new u(e))
                                                            }
                                                        })
                                                    }), e
                                                },
                                                replaceVisualOption: function(n, t, i) {
                                                    var u;
                                                    r.each(i, function(n) {
                                                        t.hasOwnProperty(n) && e(t[n]) && (u = !0)
                                                    });
                                                    u && r.each(i, function(i) {
                                                        t.hasOwnProperty(i) && e(t[i]) ? n[i] = r.clone(t[i]) : delete n[i]
                                                    })
                                                },
                                                applyVisual: function(n, t, i, f, e, o) {
                                                    function l(n) {
                                                        return i.getItemVisual(s, n)
                                                    }

                                                    function a(n, t) {
                                                        i.setItemVisual(s, n, t)
                                                    }

                                                    function c(n, i) {
                                                        var r, p, u;
                                                        s = o == null ? n : i;
                                                        var c = f.call(e, n),
                                                            v = t[c],
                                                            y = h[c];
                                                        for (r = 0, p = y.length; r < p; r++) u = y[r], v[u] && v[u].applyVisual(n, l, a)
                                                    }
                                                    var h = {},
                                                        s;
                                                    r.each(n, function(n) {
                                                        var i = u.prepareVisualTypes(t[n]);
                                                        h[n] = i
                                                    });
                                                    o == null ? i.each(c, !0) : i.each([o], c, !0)
                                                }
                                            };
                                        n.exports = o
                                    }, function(n, t, i) {
                                        function o(n) {
                                            var t = ["x", "y"],
                                                i = ["width", "height"];
                                            return {
                                                point: function(t, i, r) {
                                                    var u = r.range,
                                                        e = t[n];
                                                    return f(e, u)
                                                },
                                                rect: function(r, u, e) {
                                                    var o = e.range;
                                                    return f(r[t[n]], o) || f(r[t[n]] + r[i[n]], o)
                                                }
                                            }
                                        }

                                        function f(n, t) {
                                            return t[0] <= n && n <= t[1]
                                        }

                                        function u(n, t, i, r, u) {
                                            for (var o, f = 0, e = u[u.length - 1]; f < u.length; f++) {
                                                if (o = u[f], c(n, t, i, r, o[0], o[1], e[0], e[1])) return !0;
                                                e = o
                                            }
                                        }

                                        function c(n, t, i, r, u, f, o, s) {
                                            var h = e(i - n, u - o, r - t, f - s),
                                                c, a;
                                            return l(h) ? !1 : (c = e(u - n, u - o, f - t, f - s) / h, c < 0 || c > 1) ? !1 : (a = e(i - n, u - n, r - t, f - t) / h, a < 0 || a > 1) ? !1 : !0
                                        }

                                        function l(n) {
                                            return n <= 1e-6 && n >= -1e-6
                                        }

                                        function e(n, t, i, r) {
                                            return n * r - t * i
                                        }
                                        var r = i(168).contain,
                                            s = i(9),
                                            h = {
                                                lineX: o(0),
                                                lineY: o(1),
                                                rect: {
                                                    point: function(n, t, i) {
                                                        return i.boundingRect.contain(n[0], n[1])
                                                    },
                                                    rect: function(n, t, i) {
                                                        return i.boundingRect.intersect(n)
                                                    }
                                                },
                                                polygon: {
                                                    point: function(n, t, i) {
                                                        return i.boundingRect.contain(n[0], n[1]) && r(i.range, n[0], n[1])
                                                    },
                                                    rect: function(n, t, i) {
                                                        var o = i.range;
                                                        if (o.length <= 1) return !1;
                                                        var f = n.x,
                                                            e = n.y,
                                                            h = n.width,
                                                            c = n.height,
                                                            l = o[0];
                                                        if (r(o, f, e) || r(o, f + h, e) || r(o, f, e + c) || r(o, f + h, e + c) || s.create(n).contain(l[0], l[1]) || u(f, e, f + h, e, o) || u(f, e, f, e + c, o) || u(f + h, e, f + h, e + c, o) || u(f, e + c, f + h, e + c, o)) return !0
                                                    }
                                                }
                                            };
                                        n.exports = h
                                    }, function(n) {
                                        var t = {},
                                            i = '\0__throttleOriginMethod',
                                            r = '\0__throttleRate',
                                            u = '\0__throttleType';
                                        t.throttle = function(n, t, i) {
                                            function e() {
                                                h = (new Date).getTime();
                                                r = null;
                                                n.apply(c, l || [])
                                            }
                                            var u, s = 0,
                                                h = 0,
                                                r = null,
                                                f, c, l, o;
                                            return t = t || 0, o = function() {
                                                u = (new Date).getTime();
                                                c = this;
                                                l = arguments;
                                                f = u - (i ? s : h) - t;
                                                clearTimeout(r);
                                                i ? r = setTimeout(e, t) : f >= 0 ? e() : r = setTimeout(e, -f);
                                                s = u
                                            }, o.clear = function() {
                                                r && (clearTimeout(r), r = null)
                                            }, o
                                        };
                                        t.createOrUpdate = function(n, f, e, o) {
                                            var s = n[f];
                                            if (s) {
                                                var h = s[i] || s,
                                                    c = s[u],
                                                    l = s[r];
                                                if (l !== e || c !== o) {
                                                    if (e == null || !o) return n[f] = h;
                                                    s = n[f] = t.throttle(h, e, o === "debounce");
                                                    s[i] = h;
                                                    s[u] = o;
                                                    s[r] = e
                                                }
                                                return s
                                            }
                                        };
                                        t.clear = function(n, t) {
                                            var r = n[t];
                                            r && r[i] && (n[t] = r[i])
                                        };
                                        n.exports = t
                                    }, function(n, t, i) {
                                        function s(n) {
                                            return n[0] > n[1] && n.reverse(), n
                                        }

                                        function h(n, t) {
                                            for (var r, i, f = !0, u = 0; u < e.length; u++)
                                                if (r = e[u] + "Index", n[r] >= 0)
                                                    for (f = !1, i = 0; i < t.length; i++)
                                                        if (t[i][r] === n[r]) return t[i];
                                            return f
                                        }

                                        function a(n, t, i, u) {
                                            var f = i.coordSys.getAxis(n);
                                            return !0 && r.assert(f, "line brush is only available in cartesian (grid)."), s(r.map([0, 1], function(n) {
                                                return t ? f.coordToData(f.toLocalCoord(u[n])) : f.toGlobalCoord(f.dataToCoord(u[n]))
                                            }))
                                        }
                                        var r = i(4),
                                            v = i(43),
                                            f = r.each,
                                            u = {},
                                            e = ["geo", "xAxis", "yAxis"],
                                            l = "--",
                                            o = ["dataToPoint", "pointToData"],
                                            c;
                                        u.parseOutputRanges = function(n, t, i, r) {
                                            f(n, function(n, i) {
                                                var u = n.panelId,
                                                    f;
                                                u && (u = u.split(l), n[u[0] + "Index"] = +u[1], f = h(n, t), n.coordRange = c[n.brushType](1, f, n.range), r && (r[i] = f))
                                            })
                                        };
                                        u.parseInputRanges = function(n) {
                                            f(n.areas, function(t) {
                                                var i = h(t, n.coordInfoList);
                                                !0 && (r.assert(!i || i === !0 || t.coordRange, "coordRange must be specified when coord index specified."), r.assert(!i || i !== !0 || t.range, "range must be specified."));
                                                t.range = t.range || [];
                                                i && i !== !0 && (t.range = c[t.brushType](0, i, t.coordRange), t.panelId = i.panelId)
                                            })
                                        };
                                        u.makePanelOpts = function(n) {
                                            var t = [];
                                            return f(n, function(n) {
                                                var r = n.coordSys,
                                                    i;
                                                n.geoIndex >= 0 ? (i = r.getBoundingRect().clone(), i.applyTransform(v.getTransform(r))) : i = r.grid.getRect().clone();
                                                t.push({
                                                    panelId: n.panelId,
                                                    rect: i
                                                })
                                            }), t
                                        };
                                        u.makeCoordInfoList = function(n, t) {
                                            var i = [];
                                            return f(e, function(u) {
                                                var f = n[u + "Index"];
                                                f != null && f !== "none" && (f === "all" || r.isArray(f) || (f = [f]), t.eachComponent({
                                                    mainType: u
                                                }, function(n, t) {
                                                    var h, c, e, s, v, o, a;
                                                    if (f === "all" || !(r.indexOf(f, t) < 0)) {
                                                        for (u === "xAxis" || u === "yAxis" ? h = n.axis.grid : c = n.coordinateSystem, s = 0, v = i.length; s < v; s++)
                                                            if (o = i[s], !0 && r.assert(o[u + "Index"] != t, "Coord should not be defined duplicately: " + u + t), u === "yAxis" && !o.yAxis && o.xAxis && (a = h.getCartesian(o.xAxisIndex, t), a)) {
                                                                c = a;
                                                                e = o;
                                                                break
                                                            }
                                                        e || i.push(e = {});
                                                        e[u] = n;
                                                        e[u + "Index"] = t;
                                                        e.panelId = u + l + t;
                                                        e.coordSys = c || h.getCartesian(e.xAxisIndex, e.yAxisIndex);
                                                        e.coordSys ? i[u + "Has"] = !0 : i.pop()
                                                    }
                                                }))
                                            }), i
                                        };
                                        u.controlSeries = function(n, t, i) {
                                            var r = h(n, t.coordInfoList);
                                            return r === !0 || r && r.coordSys === i.coordinateSystem
                                        };
                                        c = {
                                            lineX: r.curry(a, "x"),
                                            lineY: r.curry(a, "y"),
                                            rect: function(n, t, i) {
                                                var r = t.coordSys,
                                                    u = r[o[n]]([i[0][0], i[1][0]]),
                                                    f = r[o[n]]([i[0][1], i[1][1]]);
                                                return [s([u[0], f[0]]), s([u[1], f[1]])]
                                            },
                                            polygon: function(n, t, i) {
                                                var u = t.coordSys;
                                                return r.map(i, u[o[n]], u)
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var u = i(1),
                                            r = i(4),
                                            f = i(307),
                                            e = i(12),
                                            o = ["#ddd"],
                                            s = u.extendComponentModel({
                                                type: "brush",
                                                dependencies: ["geo", "grid", "xAxis", "yAxis", "parallel", "series"],
                                                defaultOption: {
                                                    toolbox: null,
                                                    brushLink: null,
                                                    seriesIndex: "all",
                                                    geoIndex: null,
                                                    xAxisIndex: null,
                                                    yAxisIndex: null,
                                                    brushType: "rect",
                                                    brushMode: "single",
                                                    transformable: !0,
                                                    brushStyle: {
                                                        borderWidth: 1,
                                                        color: "rgba(120,140,180,0.3)",
                                                        borderColor: "rgba(120,140,180,0.8)",
                                                        width: null
                                                    },
                                                    throttleType: "fixRate",
                                                    throttleDelay: 0,
                                                    removeOnClick: !0
                                                },
                                                areas: [],
                                                brushType: null,
                                                brushOption: {},
                                                coordInfoList: [],
                                                optionUpdated: function(n, t) {
                                                    var i = this.option;
                                                    t || f.replaceVisualOption(i, n, ["inBrush", "outOfBrush"]);
                                                    i.inBrush = i.inBrush || {};
                                                    i.outOfBrush = i.outOfBrush || {
                                                        color: o
                                                    }
                                                },
                                                setAreas: function(n) {
                                                    (!0 && (r.assert(r.isArray(n)), r.each(n, function(n) {
                                                        r.assert(n.brushType, "Illegal areas")
                                                    })), n) && (this.areas = r.map(n, function(n) {
                                                        return this._mergeBrushOption(n)
                                                    }, this))
                                                },
                                                setBrushOption: function(n) {
                                                    this.brushOption = this._mergeBrushOption(n);
                                                    this.brushType = this.brushOption.brushType
                                                },
                                                _mergeBrushOption: function(n) {
                                                    var t = this.option;
                                                    return r.merge({
                                                        brushType: t.brushType,
                                                        brushMode: t.brushMode,
                                                        transformable: t.transformable,
                                                        brushStyle: new e(t.brushStyle).getItemStyle(),
                                                        removeOnClick: t.removeOnClick
                                                    }, n, !0)
                                                }
                                            });
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function r(n, t, i, r) {
                                            r && r.$from === n.id || this._brushController.setPanels(f.makePanelOpts(n.coordInfoList)).enableBrush(n.brushOption).updateCovers(n.areas.slice())
                                        }
                                        var u = i(4),
                                            e = i(234),
                                            o = i(1),
                                            f = i(310);
                                        n.exports = o.extendComponentView({
                                            type: "brush",
                                            init: function(n, t) {
                                                this.ecModel = n;
                                                this.api = t;
                                                this.model;
                                                (this._brushController = new e(t.getZr())).on("brush", u.bind(this._onBrush, this)).mount()
                                            },
                                            render: function(n) {
                                                return this.model = n, r.apply(this, arguments)
                                            },
                                            updateView: r,
                                            updateLayout: r,
                                            updateVisual: r,
                                            dispose: function() {
                                                this._brushController.dispose()
                                            },
                                            _onBrush: function(n, t) {
                                                var i = this.model.id;
                                                f.parseOutputRanges(n, this.model.coordInfoList, this.ecModel);
                                                (!t.isEnd || t.removeOnClick) && this.api.dispatchAction({
                                                    type: "brush",
                                                    brushId: i,
                                                    areas: u.clone(n),
                                                    $from: i
                                                })
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        r.registerAction({
                                            type: "brush",
                                            event: "brush",
                                            update: "updateView"
                                        }, function(n, t) {
                                            t.eachComponent({
                                                mainType: "brush",
                                                query: n
                                            }, function(t) {
                                                t.setAreas(n.areas)
                                            })
                                        });
                                        r.registerAction({
                                            type: "brushSelect",
                                            event: "brushSelected",
                                            update: "none"
                                        }, function() {})
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n, t, i) {
                                            this.model = n;
                                            this.ecModel = t;
                                            this.api = i;
                                            this._brushType;
                                            this._brushMode
                                        }
                                        var e = i(315),
                                            f = i(4),
                                            r;
                                        u.defaultOption = {
                                            show: !0,
                                            type: ["rect", "polygon", "lineX", "lineY", "keep", "clear"],
                                            icon: {
                                                rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
                                                polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
                                                lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
                                                lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
                                                keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
                                                clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
                                            },
                                            title: {
                                                rect: "矩形选择",
                                                polygon: "圈选",
                                                lineX: "横向选择",
                                                lineY: "纵向选择",
                                                keep: "保持选择",
                                                clear: "清除选择"
                                            }
                                        };
                                        r = u.prototype;
                                        r.render = r.updateView = r.updateLayout = function(n, t) {
                                            var i, r, u;
                                            t.eachComponent({
                                                mainType: "brush"
                                            }, function(n) {
                                                i = n.brushType;
                                                r = n.brushOption.brushMode || "single";
                                                u |= n.areas.length
                                            });
                                            this._brushType = i;
                                            this._brushMode = r;
                                            f.each(n.get("type", !0), function(t) {
                                                n.setIconStatus(t, (t === "keep" ? r === "multiple" : t === "clear" ? u : t === i) ? "emphasis" : "normal")
                                            })
                                        };
                                        r.getIcons = function() {
                                            var n = this.model,
                                                t = n.get("icon", !0),
                                                i = {};
                                            return f.each(n.get("type", !0), function(n) {
                                                t[n] && (i[n] = t[n])
                                            }), i
                                        };
                                        r.onclick = function(n, t, i) {
                                            var t = this.api,
                                                r = this._brushType,
                                                u = this._brushMode;
                                            i === "clear" ? t.dispatchAction({
                                                type: "brush",
                                                areas: []
                                            }) : t.dispatchAction({
                                                type: "takeGlobalCursor",
                                                key: "brush",
                                                brushOption: {
                                                    brushType: i === "keep" ? r : r === i ? !1 : i,
                                                    brushMode: i === "keep" ? u === "multiple" ? "single" : "multiple" : u
                                                }
                                            })
                                        };
                                        e.register("brush", u);
                                        n.exports = u
                                    }, function(n) {
                                        "use strict";
                                        var t = {};
                                        n.exports = {
                                            register: function(n, i) {
                                                t[n] = i
                                            },
                                            get: function(n) {
                                                return t[n]
                                            }
                                        }
                                    }, function(n, t, i) {
                                        "use strict";
                                        var u = i(1),
                                            r = i(43),
                                            f = i(21);
                                        u.extendComponentModel({
                                            type: "title",
                                            layoutMode: {
                                                type: "box",
                                                ignoreSize: !0
                                            },
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 6,
                                                show: !0,
                                                text: "",
                                                target: "blank",
                                                subtext: "",
                                                subtarget: "blank",
                                                left: 0,
                                                top: 0,
                                                backgroundColor: "rgba(0,0,0,0)",
                                                borderColor: "#ccc",
                                                borderWidth: 0,
                                                padding: 5,
                                                itemGap: 10,
                                                textStyle: {
                                                    fontSize: 18,
                                                    fontWeight: "bolder",
                                                    color: "#333"
                                                },
                                                subtextStyle: {
                                                    color: "#aaa"
                                                }
                                            }
                                        });
                                        u.extendComponentView({
                                            type: "title",
                                            render: function(n, t, i) {
                                                var o, v, u, w, h, b, k;
                                                if (this.group.removeAll(), n.get("show")) {
                                                    var c = this.group,
                                                        d = n.getModel("textStyle"),
                                                        g = n.getModel("subtextStyle"),
                                                        s = n.get("textAlign"),
                                                        e = n.get("textBaseline"),
                                                        l = new r.Text({
                                                            style: {
                                                                text: n.get("text"),
                                                                textFont: d.getFont(),
                                                                fill: d.getTextColor()
                                                            },
                                                            z2: 10
                                                        }),
                                                        tt = l.getBoundingRect(),
                                                        nt = n.get("subtext"),
                                                        a = new r.Text({
                                                            style: {
                                                                text: nt,
                                                                textFont: g.getFont(),
                                                                fill: g.getTextColor(),
                                                                y: tt.height + n.get("itemGap"),
                                                                textBaseline: "top"
                                                            },
                                                            z2: 10
                                                        }),
                                                        y = n.get("link"),
                                                        p = n.get("sublink");
                                                    if (l.silent = !y, a.silent = !p, y) l.on("click", function() {
                                                        window.open(y, "_" + n.get("target"))
                                                    });
                                                    if (p) a.on("click", function() {
                                                        window.open(p, "_" + n.get("subtarget"))
                                                    });
                                                    c.add(l);
                                                    nt && c.add(a);
                                                    o = c.getBoundingRect();
                                                    v = n.getBoxLayoutParams();
                                                    v.width = o.width;
                                                    v.height = o.height;
                                                    u = f.getLayoutRect(v, {
                                                        width: i.getWidth(),
                                                        height: i.getHeight()
                                                    }, n.get("padding"));
                                                    s || (s = n.get("left") || n.get("right"), s === "middle" && (s = "center"), s === "right" ? u.x += u.width : s === "center" && (u.x += u.width / 2));
                                                    e || (e = n.get("top") || n.get("bottom"), e === "center" && (e = "middle"), e === "bottom" ? u.y += u.height : e === "middle" && (u.y += u.height / 2), e = e || "top");
                                                    c.attr("position", [u.x, u.y]);
                                                    w = {
                                                        textAlign: s,
                                                        textVerticalAlign: e
                                                    };
                                                    l.setStyle(w);
                                                    a.setStyle(w);
                                                    o = c.getBoundingRect();
                                                    h = u.margin;
                                                    b = n.getItemStyle(["color", "opacity"]);
                                                    b.fill = n.get("backgroundColor");
                                                    k = new r.Rect({
                                                        shape: {
                                                            x: o.x - h[3],
                                                            y: o.y - h[0],
                                                            width: o.width + h[1] + h[3],
                                                            height: o.height + h[0] + h[2]
                                                        },
                                                        style: b,
                                                        silent: !0
                                                    });
                                                    r.subPixelOptimizeRect(k);
                                                    c.add(k)
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        i(318);
                                        i(319);
                                        i(322);
                                        i(323);
                                        i(324);
                                        i(326);
                                        i(327);
                                        i(329);
                                        i(330)
                                    }, function(n, t, i) {
                                        i(19).registerSubTypeDefaulter("dataZoom", function() {
                                            return "slider"
                                        })
                                    }, function(n, t, i) {
                                        function e(n) {
                                            var t = {};
                                            return f(["start", "end", "startValue", "endValue", "throttle"], function(i) {
                                                n.hasOwnProperty(i) && (t[i] = n[i])
                                            }), t
                                        }

                                        function o(n, t, i, r) {
                                            i[t] != null && i[n] == null && (r[n] = null)
                                        }
                                        var u = i(4),
                                            s = i(2),
                                            h = i(1),
                                            c = i(5),
                                            l = i(320),
                                            a = i(321),
                                            f = u.each,
                                            r = l.eachAxisDim,
                                            v = h.extendComponentModel({
                                                type: "dataZoom",
                                                dependencies: ["xAxis", "yAxis", "zAxis", "radiusAxis", "angleAxis", "series"],
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 4,
                                                    orient: null,
                                                    xAxisIndex: null,
                                                    yAxisIndex: null,
                                                    filterMode: "filter",
                                                    throttle: null,
                                                    start: 0,
                                                    end: 100,
                                                    startValue: null,
                                                    endValue: null
                                                },
                                                init: function(n, t, i) {
                                                    this._dataIntervalByAxis = {};
                                                    this._dataInfo = {};
                                                    this._axisProxies = {};
                                                    this.textStyleModel;
                                                    this._autoThrottle = !0;
                                                    var r = e(n);
                                                    this.mergeDefaultAndTheme(n, i);
                                                    this.doInit(r)
                                                },
                                                mergeOption: function(n) {
                                                    var t = e(n);
                                                    u.merge(this.option, n, !0);
                                                    this.doInit(t)
                                                },
                                                doInit: function(n) {
                                                    var t = this.option;
                                                    s.canvasSupported || (t.realtime = !1);
                                                    this._setDefaultThrottle(n);
                                                    o("start", "startValue", n, t);
                                                    o("end", "endValue", n, t);
                                                    this.textStyleModel = this.getModel("textStyle");
                                                    this._resetTarget();
                                                    this._giveAxisProxies()
                                                },
                                                _giveAxisProxies: function() {
                                                    var n = this._axisProxies;
                                                    this.eachTargetAxis(function(t, i, r, u) {
                                                        var f = this.dependentModels[t.axis][i],
                                                            e = f.__dzAxisProxy || (f.__dzAxisProxy = new a(t.name, i, this, u));
                                                        n[t.name + "_" + i] = e
                                                    }, this)
                                                },
                                                _resetTarget: function() {
                                                    var n = this.option,
                                                        t = this._judgeAutoMode();
                                                    r(function(t) {
                                                        var i = t.axisIndex;
                                                        n[i] = c.normalizeToArray(n[i])
                                                    }, this);
                                                    t === "axisIndex" ? this._autoSetAxisIndex() : t === "orient" && this._autoSetOrient()
                                                },
                                                _judgeAutoMode: function() {
                                                    var n = this.option,
                                                        t = !1,
                                                        i;
                                                    return (r(function(i) {
                                                        n[i.axisIndex] != null && (t = !0)
                                                    }, this), i = n.orient, i == null && t) ? "orient" : t ? void 0 : (i == null && (n.orient = "horizontal"), "axisIndex")
                                                },
                                                _autoSetAxisIndex: function() {
                                                    var n = !0,
                                                        f = this.get("orient", !0),
                                                        t = this.option,
                                                        i;
                                                    n && (i = f === "vertical" ? {
                                                        dim: "y",
                                                        axisIndex: "yAxisIndex",
                                                        axis: "yAxis"
                                                    } : {
                                                        dim: "x",
                                                        axisIndex: "xAxisIndex",
                                                        axis: "xAxis"
                                                    }, this.dependentModels[i.axis].length && (t[i.axisIndex] = [0], n = !1));
                                                    n && r(function(i) {
                                                        var r, f, u, e;
                                                        if (n) {
                                                            if (r = [], f = this.dependentModels[i.axis], f.length && !r.length)
                                                                for (u = 0, e = f.length; u < e; u++) f[u].get("type") === "category" && r.push(u);
                                                            t[i.axisIndex] = r;
                                                            r.length && (n = !1)
                                                        }
                                                    }, this);
                                                    n && this.ecModel.eachSeries(function(n) {
                                                        this._isSeriesHasAllAxesTypeOf(n, "value") && r(function(i) {
                                                            var f = t[i.axisIndex],
                                                                r = n.get(i.axisIndex),
                                                                e = n.get(i.axisId),
                                                                o = n.ecModel.queryComponents({
                                                                    mainType: i.axis,
                                                                    index: r,
                                                                    id: e
                                                                })[0];
                                                            if (!0 && !o) throw new Error(i.axis + ' "' + u.retrieve(r, e, 0) + '" not found');
                                                            r = o.componentIndex;
                                                            u.indexOf(f, r) < 0 && f.push(r)
                                                        })
                                                    }, this)
                                                },
                                                _autoSetOrient: function() {
                                                    var n;
                                                    this.eachTargetAxis(function(t) {
                                                        n || (n = t.name)
                                                    }, this);
                                                    this.option.orient = n === "y" ? "vertical" : "horizontal"
                                                },
                                                _isSeriesHasAllAxesTypeOf: function(n, t) {
                                                    var i = !0;
                                                    return r(function(r) {
                                                        var f = n.get(r.axisIndex),
                                                            u = this.dependentModels[r.axis][f];
                                                        u && u.get("type") === t || (i = !1)
                                                    }, this), i
                                                },
                                                _setDefaultThrottle: function(n) {
                                                    if (n.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
                                                        var t = this.ecModel.option;
                                                        this.option.throttle = t.animation && t.animationDurationUpdate > 0 ? 100 : 20
                                                    }
                                                },
                                                getFirstTargetAxisModel: function() {
                                                    var n;
                                                    return r(function(t) {
                                                        if (n == null) {
                                                            var i = this.get(t.axisIndex);
                                                            i.length && (n = this.dependentModels[t.axis][i[0]])
                                                        }
                                                    }, this), n
                                                },
                                                eachTargetAxis: function(n, t) {
                                                    var i = this.ecModel;
                                                    r(function(r) {
                                                        f(this.get(r.axisIndex), function(u) {
                                                            n.call(t, r, u, this, i)
                                                        }, this)
                                                    }, this)
                                                },
                                                getAxisProxy: function(n, t) {
                                                    return this._axisProxies[n + "_" + t]
                                                },
                                                setRawRange: function(n) {
                                                    f(["start", "end", "startValue", "endValue"], function(t) {
                                                        this.option[t] = n[t]
                                                    }, this)
                                                },
                                                getPercentRange: function() {
                                                    var n = this.findRepresentativeAxisProxy();
                                                    if (n) return n.getDataPercentWindow()
                                                },
                                                getValueRange: function(n, t) {
                                                    if (n == null && t == null) {
                                                        var i = this.findRepresentativeAxisProxy();
                                                        if (i) return i.getDataValueWindow()
                                                    } else return this.getAxisProxy(n, t).getDataValueWindow()
                                                },
                                                findRepresentativeAxisProxy: function() {
                                                    var n = this._axisProxies;
                                                    for (var t in n)
                                                        if (n.hasOwnProperty(t) && n[t].hostedBy(this)) return n[t];
                                                    for (t in n)
                                                        if (n.hasOwnProperty(t) && !n[t].hostedBy(this)) return n[t]
                                                }
                                            });
                                        n.exports = v
                                    }, function(n, t, i) {
                                        var f = i(6),
                                            r = i(4),
                                            u = {};
                                        u.createNameEach = function(n, t) {
                                            var i, u;
                                            return n = n.slice(), i = r.map(n, f.capitalFirst), t = (t || []).slice(), u = r.map(t, f.capitalFirst),
                                                function(f, e) {
                                                    r.each(n, function(n, r) {
                                                        for (var s = {
                                                                name: n,
                                                                capital: i[r]
                                                            }, o = 0; o < t.length; o++) s[t[o]] = n + u[o];
                                                        f.call(e, s)
                                                    })
                                                }
                                        };
                                        u.eachAxisDim = u.createNameEach(["x", "y", "z", "radius", "angle"], ["axisIndex", "axis", "index", "id"]);
                                        u.createLinkedNodesFinder = function(n, t, i) {
                                            function f(n, t) {
                                                return r.indexOf(t.nodes, n) >= 0
                                            }

                                            function e(n, u) {
                                                var f = !1;
                                                return t(function(t) {
                                                    r.each(i(n, t) || [], function(n) {
                                                        u.records[t.name][n] && (f = !0)
                                                    })
                                                }), f
                                            }

                                            function u(n, u) {
                                                u.nodes.push(n);
                                                t(function(t) {
                                                    r.each(i(n, t) || [], function(n) {
                                                        u.records[t.name][n] = !0
                                                    })
                                                })
                                            }
                                            return function(i) {
                                                function s(n) {
                                                    !f(n, r) && e(n, r) && (u(n, r), o = !0)
                                                }
                                                var r = {
                                                        nodes: [],
                                                        records: {}
                                                    },
                                                    o;
                                                if (t(function(n) {
                                                        r.records[n.name] = {}
                                                    }), !i) return r;
                                                u(i, r);
                                                do o = !1, n(s); while (o);
                                                return r
                                            }
                                        };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function h(n, t) {
                                            var i = [Infinity, -Infinity];
                                            return r(t, function(t) {
                                                var u = t.getData();
                                                u && r(t.coordDimToDataDim(n), function(n) {
                                                    var t = u.getDataExtent(n);
                                                    t[0] < i[0] && (i[0] = t[0]);
                                                    t[1] > i[1] && (i[1] = t[1])
                                                })
                                            }, this), i
                                        }

                                        function c(n, t, i) {
                                            var c = i.getAxisModel(),
                                                o = c.axis.scale,
                                                s = [0, 100],
                                                h = [n.start, n.end],
                                                f = [];
                                            return t = t.slice(), l(t, c, o), r(["startValue", "endValue"], function(t) {
                                                f.push(n[t] != null ? o.parse(n[t]) : null)
                                            }), r([0, 1], function(n) {
                                                var r = f[n],
                                                    i = h[n];
                                                i != null || r == null ? (i == null && (i = s[n]), r = o.parse(u.linearMap(i, s, t, !0))) : i = u.linearMap(r, t, s, !0);
                                                f[n] = r;
                                                h[n] = i
                                            }), {
                                                valueWindow: e(f),
                                                percentWindow: e(h)
                                            }
                                        }

                                        function l(n, t, i) {
                                            return r(["min", "max"], function(r, u) {
                                                var f = t.get(r, !0);
                                                f != null && (f + "").toLowerCase() !== "data" + r && (n[u] = i.parse(f))
                                            }), t.get("scale", !0) || (n[0] > 0 && (n[0] = 0), n[1] < 0 && (n[1] = 0)), n
                                        }

                                        function o(n, t) {
                                            var e = n.getAxisModel(),
                                                r = n._percentWindow,
                                                f = n._valueWindow;
                                            if (r) {
                                                var s = t || r[0] === 0 && r[1] === 100,
                                                    i = !t && u.getPixelPrecision(f, [0, 500]),
                                                    h = !t && !(i < 20 && i >= 0),
                                                    o = t || s || h;
                                                e.setRange && e.setRange(o ? null : +f[0].toFixed(i), o ? null : +f[1].toFixed(i))
                                            }
                                        }
                                        var s = i(4),
                                            u = i(7),
                                            r = s.each,
                                            e = u.asc,
                                            f = function(n, t, i, r) {
                                                this._dimName = n;
                                                this._axisIndex = t;
                                                this._valueWindow;
                                                this._percentWindow;
                                                this._dataExtent;
                                                this.ecModel = r;
                                                this._dataZoomModel = i
                                            };
                                        f.prototype = {
                                            constructor: f,
                                            hostedBy: function(n) {
                                                return this._dataZoomModel === n
                                            },
                                            getDataExtent: function() {
                                                return this._dataExtent.slice()
                                            },
                                            getDataValueWindow: function() {
                                                return this._valueWindow.slice()
                                            },
                                            getDataPercentWindow: function() {
                                                return this._percentWindow.slice()
                                            },
                                            getTargetSeriesModels: function() {
                                                var n = [],
                                                    t = this.ecModel;
                                                return t.eachSeries(function(i) {
                                                    var f = i.get("coordinateSystem"),
                                                        r, u;
                                                    (f === "cartesian2d" || f === "polar") && (r = this._dimName, u = t.queryComponents({
                                                        mainType: r + "Axis",
                                                        index: i.get(r + "AxisIndex"),
                                                        id: i.get(r + "AxisId")
                                                    })[0], this._axisIndex === (u && u.componentIndex) && n.push(i))
                                                }, this), n
                                            },
                                            getAxisModel: function() {
                                                return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex)
                                            },
                                            getOtherAxisModel: function() {
                                                var n = this._dimName,
                                                    u = this.ecModel,
                                                    f = this.getAxisModel(),
                                                    e = n === "x" || n === "y",
                                                    i, t, r;
                                                return e ? (t = "gridIndex", i = n === "x" ? "y" : "x") : (t = "polarIndex", i = n === "angle" ? "radius" : "angle"), u.eachComponent(i + "Axis", function(n) {
                                                    (n.get(t) || 0) === (f.get(t) || 0) && (r = n)
                                                }), r
                                            },
                                            reset: function(n) {
                                                if (n === this._dataZoomModel) {
                                                    var i = this._dataExtent = h(this._dimName, this.getTargetSeriesModels()),
                                                        t = c(n.option, i, this);
                                                    this._valueWindow = t.valueWindow;
                                                    this._percentWindow = t.percentWindow;
                                                    o(this)
                                                }
                                            },
                                            restore: function(n) {
                                                n === this._dataZoomModel && (this._valueWindow = this._percentWindow = null, o(this, !0))
                                            },
                                            filterData: function(n) {
                                                function f(n) {
                                                    return n >= i[0] && n <= i[1]
                                                }
                                                if (n === this._dataZoomModel) {
                                                    var e = this._dimName,
                                                        o = this.getTargetSeriesModels(),
                                                        t = n.get("filterMode"),
                                                        i = this._valueWindow,
                                                        u = this.getOtherAxisModel();
                                                    n.get("$fromToolbox") && u && u.get("type") === "category" && (t = "empty");
                                                    r(o, function(n) {
                                                        var i = n.getData();
                                                        i && r(n.coordDimToDataDim(e), function(r) {
                                                            t === "empty" ? n.setData(i.map(r, function(n) {
                                                                return f(n) ? n : NaN
                                                            })) : i.filterSelf(r, f)
                                                        })
                                                    })
                                                }
                                            }
                                        };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var r = i(29);
                                        n.exports = r.extend({
                                            type: "dataZoom",
                                            render: function(n, t, i) {
                                                this.dataZoomModel = n;
                                                this.ecModel = t;
                                                this.api = i
                                            },
                                            getTargetInfo: function() {
                                                function f(n, t, i, r) {
                                                    for (var u, f = 0; f < i.length; f++)
                                                        if (i[f].model === n) {
                                                            u = i[f];
                                                            break
                                                        }
                                                    u || i.push(u = {
                                                        model: n,
                                                        axisModels: [],
                                                        coordIndex: r
                                                    });
                                                    u.axisModels.push(t)
                                                }
                                                var u = this.dataZoomModel,
                                                    n = this.ecModel,
                                                    t = [],
                                                    i = [],
                                                    r = [];
                                                return u.eachTargetAxis(function(u, e) {
                                                    var s = n.getComponent(u.axis, e),
                                                        o, h, c;
                                                    s && (r.push(s), h = u.axis, h === "xAxis" || h === "yAxis" ? o = "grid" : (h === "angleAxis" || h === "radiusAxis") && (o = "polar"), c = o ? n.queryComponents({
                                                        mainType: o,
                                                        index: s.get(o + "Index"),
                                                        id: s.get(o + "Id")
                                                    })[0] : null, c != null && f(c, s, o === "grid" ? t : i, c.componentIndex))
                                                }, this), {
                                                    cartesians: t,
                                                    polars: i,
                                                    axisModels: r
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(319),
                                            u = r.extend({
                                                type: "dataZoom.slider",
                                                layoutMode: "box",
                                                defaultOption: {
                                                    show: !0,
                                                    right: "ph",
                                                    top: "ph",
                                                    width: "ph",
                                                    height: "ph",
                                                    left: null,
                                                    bottom: null,
                                                    backgroundColor: "rgba(47,69,84,0)",
                                                    dataBackground: {
                                                        lineStyle: {
                                                            color: "#2f4554",
                                                            width: .5,
                                                            opacity: .3
                                                        },
                                                        areaStyle: {
                                                            color: "rgba(47,69,84,0.3)",
                                                            opacity: .3
                                                        }
                                                    },
                                                    borderColor: "#ddd",
                                                    fillerColor: "rgba(167,183,204,0.4)",
                                                    handleIcon: "M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z",
                                                    handleSize: "100%",
                                                    handleStyle: {
                                                        color: "#a7b7cc"
                                                    },
                                                    labelPrecision: null,
                                                    labelFormatter: null,
                                                    showDetail: !0,
                                                    showDataShadow: "auto",
                                                    realtime: !0,
                                                    zoomLock: !1,
                                                    textStyle: {
                                                        color: "#333"
                                                    }
                                                }
                                            });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function it(n) {
                                            return n === "x" ? "y" : "x"
                                        }
                                        var f = i(4),
                                            r = i(43),
                                            h = i(309),
                                            k = i(322),
                                            c = r.Rect,
                                            l = i(7),
                                            e = l.linearMap,
                                            y = i(21),
                                            d = i(325),
                                            a = l.asc,
                                            u = f.bind,
                                            p = f.each,
                                            w = 7,
                                            g = 1,
                                            v = 30,
                                            o = "horizontal",
                                            b = "vertical",
                                            nt = 5,
                                            tt = ["line", "bar", "candlestick", "scatter"],
                                            s = k.extend({
                                                type: "dataZoom.slider",
                                                init: function(n, t) {
                                                    this._displayables = {};
                                                    this._orient;
                                                    this._range;
                                                    this._handleEnds;
                                                    this._size;
                                                    this._handleWidth;
                                                    this._handleHeight;
                                                    this._location;
                                                    this._dragging;
                                                    this._dataShadowInfo;
                                                    this.api = t
                                                },
                                                render: function(n, t, i, r) {
                                                    if (s.superApply(this, "render", arguments), h.createOrUpdate(this, "_dispatchZoomAction", this.dataZoomModel.get("throttle"), "fixRate"), this._orient = n.get("orient"), this.dataZoomModel.get("show") === !1) {
                                                        this.group.removeAll();
                                                        return
                                                    }
                                                    r && r.type === "dataZoom" && r.from === this.uid || this._buildView();
                                                    this._updateView()
                                                },
                                                remove: function() {
                                                    s.superApply(this, "remove", arguments);
                                                    h.clear(this, "_dispatchZoomAction")
                                                },
                                                dispose: function() {
                                                    s.superApply(this, "dispose", arguments);
                                                    h.clear(this, "_dispatchZoomAction")
                                                },
                                                _buildView: function() {
                                                    var n = this.group,
                                                        t;
                                                    n.removeAll();
                                                    this._resetLocation();
                                                    this._resetInterval();
                                                    t = this._displayables.barGroup = new r.Group;
                                                    this._renderBackground();
                                                    this._renderHandle();
                                                    this._renderDataShadow();
                                                    n.add(t);
                                                    this._positionGroup()
                                                },
                                                _resetLocation: function() {
                                                    var u = this.dataZoomModel,
                                                        e = this.api,
                                                        n = this._findCoordRect(),
                                                        i = {
                                                            width: e.getWidth(),
                                                            height: e.getHeight()
                                                        },
                                                        s = this._orient === o ? {
                                                            right: i.width - n.x - n.width,
                                                            top: i.height - v - w,
                                                            width: n.width,
                                                            height: v
                                                        } : {
                                                            right: w,
                                                            top: n.y,
                                                            width: v,
                                                            height: n.height
                                                        },
                                                        r = y.getLayoutParams(u.option),
                                                        t;
                                                    f.each(["right", "top", "width", "height"], function(n) {
                                                        r[n] === "ph" && (r[n] = s[n])
                                                    });
                                                    t = y.getLayoutRect(r, i, u.padding);
                                                    this._location = {
                                                        x: t.x,
                                                        y: t.y
                                                    };
                                                    this._size = [t.width, t.height];
                                                    this._orient === b && this._size.reverse()
                                                },
                                                _positionGroup: function() {
                                                    var u = this.group,
                                                        f = this._location,
                                                        t = this._orient,
                                                        e = this.dataZoomModel.getFirstTargetAxisModel(),
                                                        i = e && e.get("inverse"),
                                                        s = this._displayables.barGroup,
                                                        n = (this._dataShadowInfo || {}).otherAxisInverse,
                                                        r;
                                                    s.attr(t === o && !i ? {
                                                        scale: n ? [1, 1] : [1, -1]
                                                    } : t === o && i ? {
                                                        scale: n ? [-1, 1] : [-1, -1]
                                                    } : t === b && !i ? {
                                                        scale: n ? [1, -1] : [1, 1],
                                                        rotation: Math.PI / 2
                                                    } : {
                                                        scale: n ? [-1, -1] : [-1, 1],
                                                        rotation: Math.PI / 2
                                                    });
                                                    r = u.getBoundingRect([s]);
                                                    u.attr("position", [f.x - r.x, f.y - r.y])
                                                },
                                                _getViewExtent: function() {
                                                    return [0, this._size[0]]
                                                },
                                                _renderBackground: function() {
                                                    var t = this.dataZoomModel,
                                                        n = this._size;
                                                    this._displayables.barGroup.add(new c({
                                                        silent: !0,
                                                        shape: {
                                                            x: 0,
                                                            y: 0,
                                                            width: n[0],
                                                            height: n[1]
                                                        },
                                                        style: {
                                                            fill: t.get("backgroundColor")
                                                        },
                                                        z2: -40
                                                    }))
                                                },
                                                _renderDataShadow: function() {
                                                    var c = this._dataShadowInfo = this._prepareDataShadowInfo(),
                                                        h;
                                                    if (c) {
                                                        var o = this._size,
                                                            l = c.series,
                                                            s = l.getRawData(),
                                                            v = l.getShadowDim ? l.getShadowDim() : c.otherDim,
                                                            n = s.getDataExtent(v),
                                                            y = (n[1] - n[0]) * .3;
                                                        n = [n[0] - y, n[1] + y];
                                                        var b = [0, o[1]],
                                                            k = [0, o[0]],
                                                            t = [
                                                                [o[0], 0],
                                                                [0, 0]
                                                            ],
                                                            i = [],
                                                            p = k[1] / (s.count() - 1),
                                                            u = 0,
                                                            w = Math.round(s.count() / o[0]),
                                                            a;
                                                        s.each([v], function(r, f) {
                                                            if (w > 0 && f % w) {
                                                                u += p;
                                                                return
                                                            }
                                                            var o = r == null || isNaN(r) || r === "",
                                                                s = o ? 0 : e(r, n, b, !0);
                                                            o && !a && f ? (t.push([t[t.length - 1][0], 0]), i.push([i[i.length - 1][0], 0])) : !o && a && (t.push([u, 0]), i.push([u, 0]));
                                                            t.push([u, s]);
                                                            i.push([u, s]);
                                                            u += p;
                                                            a = o
                                                        });
                                                        h = this.dataZoomModel;
                                                        this._displayables.barGroup.add(new r.Polygon({
                                                            shape: {
                                                                points: t
                                                            },
                                                            style: f.defaults({
                                                                fill: h.get("dataBackgroundColor")
                                                            }, h.getModel("dataBackground.areaStyle").getAreaStyle()),
                                                            silent: !0,
                                                            z2: -20
                                                        }));
                                                        this._displayables.barGroup.add(new r.Polyline({
                                                            shape: {
                                                                points: i
                                                            },
                                                            style: h.getModel("dataBackground.lineStyle").getLineStyle(),
                                                            silent: !0,
                                                            z2: -19
                                                        }))
                                                    }
                                                },
                                                _prepareDataShadowInfo: function() {
                                                    var n = this.dataZoomModel,
                                                        i = n.get("showDataShadow"),
                                                        t, r;
                                                    if (i !== !1) return r = this.ecModel, n.eachTargetAxis(function(u, e) {
                                                        var o = n.getAxisProxy(u.name, e).getTargetSeriesModels();
                                                        f.each(o, function(n) {
                                                            if (!t && (i === !0 || !(f.indexOf(tt, n.get("type")) < 0))) {
                                                                var s = it(u.name),
                                                                    o = r.getComponent(u.axis, e).axis;
                                                                t = {
                                                                    thisAxis: o,
                                                                    series: n,
                                                                    thisDim: u.name,
                                                                    otherDim: s,
                                                                    otherAxisInverse: n.coordinateSystem.getOtherAxis(o).inverse
                                                                }
                                                            }
                                                        }, this)
                                                    }, this), t
                                                },
                                                _renderHandle: function() {
                                                    var t = this._displayables,
                                                        o = t.handles = [],
                                                        s = t.handleLabels = [],
                                                        i = this._displayables.barGroup,
                                                        f = this._size,
                                                        n = this.dataZoomModel,
                                                        e;
                                                    i.add(t.filler = new c({
                                                        draggable: !0,
                                                        cursor: "move",
                                                        drift: u(this._onDragMove, this, "all"),
                                                        ondragstart: u(this._showDataInfo, this, !0),
                                                        ondragend: u(this._onDragEnd, this),
                                                        onmouseover: u(this._showDataInfo, this, !0),
                                                        onmouseout: u(this._showDataInfo, this, !1),
                                                        style: {
                                                            fill: n.get("fillerColor"),
                                                            textPosition: "inside"
                                                        }
                                                    }));
                                                    i.add(new c(r.subPixelOptimizeRect({
                                                        silent: !0,
                                                        shape: {
                                                            x: 0,
                                                            y: 0,
                                                            width: f[0],
                                                            height: f[1]
                                                        },
                                                        style: {
                                                            stroke: n.get("dataBackgroundColor") || n.get("borderColor"),
                                                            lineWidth: g,
                                                            fill: "rgba(0,0,0,0)"
                                                        }
                                                    })));
                                                    e = n.get("handleIcon");
                                                    p([0, 1], function(t) {
                                                        var f = r.makePath(e, {
                                                                style: {
                                                                    strokeNoScale: !0
                                                                },
                                                                rectHover: !0,
                                                                cursor: this._orient === "vertical" ? "ns-resize" : "ew-resize",
                                                                draggable: !0,
                                                                drift: u(this._onDragMove, this, t),
                                                                ondragend: u(this._onDragEnd, this),
                                                                onmouseover: u(this._showDataInfo, this, !0),
                                                                onmouseout: u(this._showDataInfo, this, !1)
                                                            }, {
                                                                x: -.5,
                                                                y: 0,
                                                                width: 1,
                                                                height: 1
                                                            }, "center"),
                                                            a = f.getBoundingRect(),
                                                            h, c;
                                                        this._handleHeight = l.parsePercent(n.get("handleSize"), this._size[1]);
                                                        this._handleWidth = a.width / a.height * this._handleHeight;
                                                        f.setStyle(n.getModel("handleStyle").getItemStyle());
                                                        h = n.get("handleColor");
                                                        h != null && (f.style.fill = h);
                                                        i.add(o[t] = f);
                                                        c = n.textStyleModel;
                                                        this.group.add(s[t] = new r.Text({
                                                            silent: !0,
                                                            invisible: !0,
                                                            style: {
                                                                x: 0,
                                                                y: 0,
                                                                text: "",
                                                                textVerticalAlign: "middle",
                                                                textAlign: "center",
                                                                fill: c.getTextColor(),
                                                                textFont: c.getFont()
                                                            },
                                                            z2: 10
                                                        }))
                                                    }, this)
                                                },
                                                _resetInterval: function() {
                                                    var n = this._range = this.dataZoomModel.getPercentRange(),
                                                        t = this._getViewExtent();
                                                    this._handleEnds = [e(n[0], [0, 100], t, !0), e(n[1], [0, 100], t, !0)]
                                                },
                                                _updateInterval: function(n, t) {
                                                    var i = this._handleEnds,
                                                        r = this._getViewExtent();
                                                    d(t, i, r, n === "all" || this.dataZoomModel.get("zoomLock") ? "rigid" : "cross", n);
                                                    this._range = a([e(i[0], r, [0, 100], !0), e(i[1], r, [0, 100], !0)])
                                                },
                                                _updateView: function() {
                                                    var t = this._displayables,
                                                        i = this._handleEnds,
                                                        n = a(i.slice()),
                                                        r = this._size;
                                                    p([0, 1], function(n) {
                                                        var f = t.handles[n],
                                                            u = this._handleHeight;
                                                        f.attr({
                                                            scale: [u, u],
                                                            position: [i[n], r[1] / 2 - u / 2]
                                                        })
                                                    }, this);
                                                    t.filler.setShape({
                                                        x: n[0],
                                                        y: 0,
                                                        width: n[1] - n[0],
                                                        height: r[1]
                                                    });
                                                    this._updateDataInfo()
                                                },
                                                _updateDataInfo: function() {
                                                    function h(n) {
                                                        var t = r.getTransform(u.handles[n].parent, this.group),
                                                            i = r.transformDirection(n === 0 ? "right" : "left", t),
                                                            h = this._handleWidth / 2 + nt,
                                                            l = r.applyTransform([s[n] + (n === 0 ? -h : h), this._size[1] / 2], t);
                                                        c[n].setStyle({
                                                            x: l[0],
                                                            y: l[1],
                                                            textVerticalAlign: f === o ? "middle" : i,
                                                            textAlign: f === o ? i : "center",
                                                            text: e[n]
                                                        })
                                                    }
                                                    var t = this.dataZoomModel,
                                                        u = this._displayables,
                                                        c = u.handleLabels,
                                                        f = this._orient,
                                                        e = ["", ""],
                                                        n, i, s;
                                                    t.get("showDetail") && (t.eachTargetAxis(function(r, u) {
                                                        n || (n = t.getAxisProxy(r.name, u).getDataValueWindow(), i = this.ecModel.getComponent(r.axis, u).axis)
                                                    }, this), n && (e = [this._formatLabel(n[0], i), this._formatLabel(n[1], i)]));
                                                    s = a(this._handleEnds.slice());
                                                    h.call(this, 0);
                                                    h.call(this, 1)
                                                },
                                                _formatLabel: function(n, t) {
                                                    var e = this.dataZoomModel,
                                                        i = e.get("labelFormatter"),
                                                        r = e.get("labelPrecision"),
                                                        u;
                                                    return (r == null || r === "auto") && (r = t.getPixelPrecision()), u = n == null && isNaN(n) ? "" : t.type === "category" || t.type === "time" ? t.scale.getLabel(Math.round(n)) : n.toFixed(Math.min(r, 20)), f.isFunction(i) ? i(n, u) : f.isString(i) ? i.replace("{value}", u) : u
                                                },
                                                _showDataInfo: function(n) {
                                                    n = this._dragging || n;
                                                    var t = this._displayables.handleLabels;
                                                    t[0].attr("invisible", !n);
                                                    t[1].attr("invisible", !n)
                                                },
                                                _onDragMove: function(n, t, i) {
                                                    this._dragging = !0;
                                                    var r = this._applyBarTransform([t, i], !0);
                                                    this._updateInterval(n, r[0]);
                                                    this._updateView();
                                                    this.dataZoomModel.get("realtime") && this._dispatchZoomAction()
                                                },
                                                _onDragEnd: function() {
                                                    this._dragging = !1;
                                                    this._showDataInfo(!1);
                                                    this._dispatchZoomAction()
                                                },
                                                _dispatchZoomAction: function() {
                                                    var n = this._range;
                                                    this.api.dispatchAction({
                                                        type: "dataZoom",
                                                        from: this.uid,
                                                        dataZoomId: this.dataZoomModel.id,
                                                        start: n[0],
                                                        end: n[1]
                                                    })
                                                },
                                                _applyBarTransform: function(n, t) {
                                                    var i = this._displayables.barGroup.getLocalTransform();
                                                    return r.applyTransform(n, i, t)
                                                },
                                                _findCoordRect: function() {
                                                    var r = this.getTargetInfo(),
                                                        n, t, i;
                                                    return r.cartesians.length ? n = r.cartesians[0].model.coordinateSystem.getRect() : (t = this.api.getWidth(), i = this.api.getHeight(), n = {
                                                        x: t * .2,
                                                        y: i * .2,
                                                        width: t * .6,
                                                        height: i * .6
                                                    }), n
                                                }
                                            });
                                        n.exports = s
                                    }, function(n) {
                                        n.exports = function(n, t, i, r, u) {
                                            function f(n, t, i) {
                                                var r = t.length ? t.slice() : [t, t];
                                                return t[0] > t[1] && r.reverse(), n < 0 && r[0] + n < i[0] && (n = i[0] - r[0]), n > 0 && r[1] + n > i[1] && (n = i[1] - r[1]), n
                                            }
                                            return n ? (r === "rigid" ? (n = f(n, t, i), t[0] += n, t[1] += n) : (n = f(n, t[u], i), t[u] += n, r === "push" && t[0] > t[1] && (t[1 - u] = t[u])), t) : t
                                        }
                                    }, function(n, t, i) {
                                        n.exports = i(319).extend({
                                            type: "dataZoom.inside",
                                            defaultOption: {
                                                silent: !1,
                                                zoomLock: !1
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function c(n) {
                                            var t = [0, 100];
                                            return n[0] <= t[1] || (n[0] = t[1]), n[1] <= t[1] || (n[1] = t[1]), n[0] >= t[0] || (n[0] = t[0]), n[1] >= t[0] || (n[1] = t[0]), n
                                        }
                                        var s = i(322),
                                            u = i(4),
                                            h = i(325),
                                            r = i(328),
                                            f = u.bind,
                                            e = s.extend({
                                                type: "dataZoom.inside",
                                                init: function() {
                                                    this._range
                                                },
                                                render: function(n, t, i, s) {
                                                    e.superApply(this, "render", arguments);
                                                    r.shouldRecordRange(s, n.id) && (this._range = n.getPercentRange());
                                                    var h = this.getTargetInfo();
                                                    u.each(["cartesians", "polars"], function(t) {
                                                        var e = h[t],
                                                            s = u.map(e, function(n) {
                                                                return r.generateCoordId(n.model)
                                                            });
                                                        u.each(e, function(u) {
                                                            var e = u.model,
                                                                h = e.coordinateSystem;
                                                            r.register(i, {
                                                                coordId: r.generateCoordId(e),
                                                                allCoordIds: s,
                                                                coordinateSystem: h,
                                                                containsPoint: f(o[t].containsPoint, this, h),
                                                                dataZoomId: n.id,
                                                                throttleRate: n.get("throttle", !0),
                                                                panGetRange: f(this._onPan, this, u, t),
                                                                zoomGetRange: f(this._onZoom, this, u, t)
                                                            })
                                                        }, this)
                                                    }, this)
                                                },
                                                dispose: function() {
                                                    r.unregister(this.api, this.dataZoomModel.id);
                                                    e.superApply(this, "dispose", arguments);
                                                    this._range = null
                                                },
                                                _onPan: function(n, t, i, r, u, f, e, s, c) {
                                                    var l, v, a, y;
                                                    return this.dataZoomModel.option.silent ? this._range : (l = this._range.slice(), v = n.axisModels[0], !v) ? void 0 : (a = o[t].getDirectionInfo([f, e], [s, c], v, i, n), y = a.signal * (l[1] - l[0]) * a.pixel / a.pixelLength, h(y, l, [0, 100], "rigid"), this._range = l)
                                                },
                                                _onZoom: function(n, t, i, r, u, f) {
                                                    var a = this.dataZoomModel.option,
                                                        e, l, h, s;
                                                    return a.silent || a.zoomLock ? this._range : (e = this._range.slice(), l = n.axisModels[0], !l) ? void 0 : (h = o[t].getDirectionInfo(null, [u, f], l, i, n), s = (h.pixel - h.pixelStart) / h.pixelLength * (e[1] - e[0]) + e[0], r = Math.max(1 / r, 0), e[0] = (e[0] - s) * r + s, e[1] = (e[1] - s) * r + s, this._range = c(e))
                                                }
                                            }),
                                            o = {
                                                cartesians: {
                                                    getDirectionInfo: function(n, t, i, r, u) {
                                                        var o = i.axis,
                                                            f = {},
                                                            e = u.model.coordinateSystem.getRect();
                                                        return n = n || [0, 0], o.dim === "x" ? (f.pixel = t[0] - n[0], f.pixelLength = e.width, f.pixelStart = e.x, f.signal = o.inverse ? 1 : -1) : (f.pixel = t[1] - n[1], f.pixelLength = e.height, f.pixelStart = e.y, f.signal = o.inverse ? -1 : 1), f
                                                    },
                                                    containsPoint: function(n, t, i) {
                                                        return n.getRect().contain(t, i)
                                                    }
                                                },
                                                polars: {
                                                    getDirectionInfo: function(n, t, i, r, u) {
                                                        var h = i.axis,
                                                            f = {},
                                                            e = u.model.coordinateSystem,
                                                            o = e.getRadiusAxis().getExtent(),
                                                            s = e.getAngleAxis().getExtent();
                                                        return n = n ? e.pointToCoord(n) : [0, 0], t = e.pointToCoord(t), i.mainType === "radiusAxis" ? (f.pixel = t[0] - n[0], f.pixelLength = o[1] - o[0], f.pixelStart = o[0], f.signal = h.inverse ? 1 : -1) : (f.pixel = t[1] - n[1], f.pixelLength = s[1] - s[0], f.pixelStart = s[0], f.signal = h.inverse ? -1 : 1), f
                                                    },
                                                    containsPoint: function(n, t, i) {
                                                        var r = n.getRadiusAxis().getExtent()[1],
                                                            u = n.cx,
                                                            f = n.cy;
                                                        return Math.pow(t - u, 2) + Math.pow(i - f, 2) <= Math.pow(r, 2)
                                                    }
                                                }
                                            };
                                        n.exports = e
                                    }, function(n, t, i) {
                                        function e(n) {
                                            var t = n.getZr();
                                            return t[f] || (t[f] = {})
                                        }

                                        function a(n, t, i) {
                                            var r = new h(n.getZr());
                                            r.enable();
                                            r.on("pan", u(v, i));
                                            r.on("zoom", u(y, i));
                                            return r
                                        }

                                        function o(n) {
                                            r.each(n, function(t, i) {
                                                t.count || (t.controller.dispose(), delete n[i])
                                            })
                                        }

                                        function v(n, t, i, r, u, f, e) {
                                            s(n, function(o) {
                                                return o.panGetRange(n.controller, t, i, r, u, f, e)
                                            })
                                        }

                                        function y(n, t, i, r) {
                                            s(n, function(u) {
                                                return u.zoomGetRange(n.controller, t, i, r)
                                            })
                                        }

                                        function s(n, t) {
                                            var i = [];
                                            r.each(n.dataZoomInfos, function(n) {
                                                var r = t(n);
                                                r && i.push({
                                                    dataZoomId: n.dataZoomId,
                                                    start: r[0],
                                                    end: r[1]
                                                })
                                            });
                                            n.dispatchAction(i)
                                        }

                                        function p(n, t) {
                                            n.dispatchAction({
                                                type: "dataZoom",
                                                batch: t
                                            })
                                        }
                                        var r = i(4),
                                            h = i(175),
                                            c = i(309),
                                            u = r.curry,
                                            f = '\0_ec_dataZoom_roams',
                                            l = {
                                                register: function(n, t) {
                                                    var u = e(n),
                                                        f = t.dataZoomId,
                                                        s = t.coordId,
                                                        i;
                                                    r.each(u, function(n) {
                                                        var i = n.dataZoomInfos;
                                                        i[f] && r.indexOf(t.allCoordIds, s) < 0 && (delete i[f], n.count--)
                                                    });
                                                    o(u);
                                                    i = u[s];
                                                    i || (i = u[s] = {
                                                        coordId: s,
                                                        dataZoomInfos: {},
                                                        count: 0
                                                    }, i.controller = a(n, t, i), i.dispatchAction = r.curry(p, n));
                                                    i.controller.setContainsPoint(t.containsPoint);
                                                    c.createOrUpdate(i, "dispatchAction", t.throttleRate, "fixRate");
                                                    i.dataZoomInfos[f] || i.count++;
                                                    i.dataZoomInfos[f] = t
                                                },
                                                unregister: function(n, t) {
                                                    var i = e(n);
                                                    r.each(i, function(n) {
                                                        n.controller.dispose();
                                                        var i = n.dataZoomInfos;
                                                        i[t] && (delete i[t], n.count--)
                                                    });
                                                    o(i)
                                                },
                                                shouldRecordRange: function(n, t) {
                                                    if (n && n.type === "dataZoom" && n.batch)
                                                        for (var i = 0, r = n.batch.length; i < r; i++)
                                                            if (n.batch[i].dataZoomId === t) return !1;
                                                    return !0
                                                },
                                                generateCoordId: function(n) {
                                                    return n.type + '\0_' + n.id
                                                }
                                            };
                                        n.exports = l
                                    }, function(n, t, i) {
                                        function u(n, t, i) {
                                            i.getAxisProxy(n.name, t).reset(i)
                                        }

                                        function f(n, t, i) {
                                            i.getAxisProxy(n.name, t).filterData(i)
                                        }
                                        var r = i(1);
                                        r.registerProcessor(function(n) {
                                            n.eachComponent("dataZoom", function(n) {
                                                n.eachTargetAxis(u);
                                                n.eachTargetAxis(f)
                                            });
                                            n.eachComponent("dataZoom", function(n) {
                                                var t = n.findRepresentativeAxisProxy(),
                                                    i = t.getDataPercentWindow(),
                                                    r = t.getDataValueWindow();
                                                n.setRawRange({
                                                    start: i[0],
                                                    end: i[1],
                                                    startValue: r[0],
                                                    endValue: r[1]
                                                })
                                            })
                                        })
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(320),
                                            f = i(1);
                                        f.registerAction("dataZoom", function(n, t) {
                                            var f = u.createLinkedNodesFinder(r.bind(t.eachComponent, t, "dataZoom"), u.eachAxisDim, function(n, t) {
                                                    return n.get(t.axisIndex)
                                                }),
                                                i = [];
                                            t.eachComponent({
                                                mainType: "dataZoom",
                                                query: n
                                            }, function(n) {
                                                i.push.apply(i, f(n).nodes)
                                            });
                                            r.each(i, function(t) {
                                                t.setRawRange({
                                                    start: n.start,
                                                    end: n.end,
                                                    startValue: n.startValue,
                                                    endValue: n.endValue
                                                })
                                            })
                                        })
                                    }, function(n, t, i) {
                                        i(332);
                                        i(343)
                                    }, function(n, t, i) {
                                        i(1).registerPreprocessor(i(333));
                                        i(334);
                                        i(335);
                                        i(336);
                                        i(339);
                                        i(342)
                                    }, function(n, t, i) {
                                        function r(n, t) {
                                            return n && n.hasOwnProperty && n.hasOwnProperty(t)
                                        }
                                        var u = i(4),
                                            f = u.each;
                                        n.exports = function(n) {
                                            var t = n && n.visualMap;
                                            u.isArray(t) || (t = t ? [t] : []);
                                            f(t, function(n) {
                                                if (n) {
                                                    r(n, "splitList") && !r(n, "pieces") && (n.pieces = n.splitList, delete n.splitList);
                                                    var t = n.pieces;
                                                    t && u.isArray(t) && f(t, function(n) {
                                                        u.isObject(n) && (r(n, "start") && !r(n, "min") && (n.min = n.start), r(n, "end") && !r(n, "max") && (n.max = n.end))
                                                    })
                                                }
                                            })
                                        }
                                    }, function(n, t, i) {
                                        i(19).registerSubTypeDefaulter("visualMap", function(n) {
                                            return !n.categories && (!(n.pieces ? n.pieces.length > 0 : n.splitNumber > 0) || n.calculable) ? "continuous" : "piecewise"
                                        })
                                    }, function(n, t, i) {
                                        function e(n) {
                                            n.eachTargetSeries(function(t) {
                                                var i = t.getData();
                                                u.applyVisual(n.stateList, n.targetVisuals, i, n.getValueState, n, n.getDataDimension(i))
                                            })
                                        }

                                        function o(n) {
                                            n.eachSeries(function(t) {
                                                var r = t.getData(),
                                                    i = [];
                                                n.eachComponent("visualMap", function(n) {
                                                    if (n.isTargetSeries(t)) {
                                                        var u = {};
                                                        i.push(u);
                                                        u.stops = n.getStops(t, s);
                                                        u.dimension = n.getDataDimension(r)
                                                    }
                                                });
                                                t.getData().setVisual("visualMeta", i)
                                            })
                                        }

                                        function s(n, t, i) {
                                            function l(n) {
                                                return r[n]
                                            }

                                            function a(n, t) {
                                                r[n] = t
                                            }
                                            for (var e, o, s = n.targetVisuals[i], h = f.prepareVisualTypes(s), r = {}, u = 0, c = h.length; u < c; u++) e = h[u], o = s[e === "colorAlpha" ? "__alphaForOpacity" : e], o && o.applyVisual(t, l, a);
                                            return r.color
                                        }
                                        var r = i(1),
                                            u = i(307),
                                            f = i(193);
                                        r.registerVisual(r.PRIORITY.VISUAL.COMPONENT, function(n) {
                                            n.eachComponent("visualMap", function(t) {
                                                e(t, n)
                                            });
                                            o(n)
                                        })
                                    }, function(n, t, i) {
                                        function h(n, t, i) {
                                            var o = n.targetVisuals[t].color,
                                                r, e;
                                            if (!o || (r = o.option.visual.length, r <= 1 || i[0] === i[1])) return i.slice();
                                            var s = (i[1] - i[0]) / (r - 1),
                                                u = i[0],
                                                f = [];
                                            for (e = 0; e < r && u < i[1]; e++) f.push(u), u += s;
                                            return f.push(i[1]), f
                                        }

                                        function o(n, t, i, u) {
                                            var f = h(n, t, i);
                                            r.each(f, function(n) {
                                                for (var r = {
                                                        value: n,
                                                        valueState: t
                                                    }, f = 0, i = 0; i < u.length; i++) {
                                                    if (f |= u[i].valueState === "inRange", n < u[i].value) {
                                                        u.splice(i, 0, r);
                                                        return
                                                    }
                                                    f && (u[i].valueState = "inRange")
                                                }
                                                u.push(r)
                                            })
                                        }
                                        var f = i(337),
                                            r = i(4),
                                            s = i(7),
                                            e = [20, 140],
                                            u = f.extend({
                                                type: "visualMap.continuous",
                                                defaultOption: {
                                                    align: "auto",
                                                    calculable: !1,
                                                    range: null,
                                                    realtime: !0,
                                                    itemHeight: null,
                                                    itemWidth: null,
                                                    hoverLink: !0,
                                                    hoverLinkDataSize: null,
                                                    hoverLinkOnHandle: !0
                                                },
                                                optionUpdated: function() {
                                                    u.superApply(this, "optionUpdated", arguments);
                                                    this.resetTargetSeries();
                                                    this.resetExtent();
                                                    this.resetVisual(function(n) {
                                                        n.mappingMethod = "linear";
                                                        n.dataExtent = this.getExtent()
                                                    });
                                                    this._resetRange()
                                                },
                                                resetItemSize: function() {
                                                    u.superApply(this, "resetItemSize", arguments);
                                                    var n = this.itemSize;
                                                    this._orient === "horizontal" && n.reverse();
                                                    (n[0] == null || isNaN(n[0])) && (n[0] = e[0]);
                                                    (n[1] == null || isNaN(n[1])) && (n[1] = e[1])
                                                },
                                                _resetRange: function() {
                                                    var t = this.getExtent(),
                                                        n = this.option.range;
                                                    !n || n.auto ? (t.auto = 1, this.option.range = t) : r.isArray(n) && (n[0] > n[1] && n.reverse(), n[0] = Math.max(n[0], t[0]), n[1] = Math.min(n[1], t[1]))
                                                },
                                                completeVisualOption: function() {
                                                    f.prototype.completeVisualOption.apply(this, arguments);
                                                    r.each(this.stateList, function(n) {
                                                        var t = this.option.controller[n].symbolSize;
                                                        t && t[0] !== t[1] && (t[0] = 0)
                                                    }, this)
                                                },
                                                setSelected: function(n) {
                                                    this.option.range = n.slice();
                                                    this._resetRange()
                                                },
                                                getSelected: function() {
                                                    var t = this.getExtent(),
                                                        n = s.asc((this.get("range") || []).slice());
                                                    return n[0] > t[1] && (n[0] = t[1]), n[1] > t[1] && (n[1] = t[1]), n[0] < t[0] && (n[0] = t[0]), n[1] < t[0] && (n[1] = t[0]), n
                                                },
                                                getValueState: function(n) {
                                                    var t = this.option.range,
                                                        i = this.getExtent();
                                                    return (t[0] <= i[0] || t[0] <= n) && (t[1] >= i[1] || n <= t[1]) ? "inRange" : "outOfRange"
                                                },
                                                findTargetDataIndices: function(n) {
                                                    var t = [];
                                                    return this.eachTargetSeries(function(i) {
                                                        var r = [],
                                                            u = i.getData();
                                                        u.each(this.getDataDimension(u), function(t, i) {
                                                            n[0] <= t && t <= n[1] && r.push(i)
                                                        }, !0, this);
                                                        t.push({
                                                            seriesId: i.id,
                                                            dataIndex: r
                                                        })
                                                    }, this), t
                                                },
                                                getStops: function(n, t) {
                                                    var i = [];
                                                    return o(this, "outOfRange", this.getExtent(), i), o(this, "inRange", this.option.range.slice(), i), r.each(i, function(n) {
                                                        n.color = t(this, n.value, n.valueState)
                                                    }, this), i
                                                }
                                            });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        var l = i(1),
                                            r = i(4),
                                            a = i(2),
                                            o = i(338),
                                            u = i(193),
                                            f = i(307),
                                            s = u.mapVisual,
                                            v = i(5),
                                            y = u.eachVisual,
                                            h = i(7),
                                            p = r.isArray,
                                            e = r.each,
                                            w = h.asc,
                                            b = h.linearMap,
                                            c = r.noop,
                                            k = ["#f6efa6", "#d88273", "#bf444c"],
                                            d = l.extendComponentModel({
                                                type: "visualMap",
                                                dependencies: ["series"],
                                                stateList: ["inRange", "outOfRange"],
                                                replacableOptionKeys: ["inRange", "outOfRange", "target", "controller", "color"],
                                                dataBound: [-Infinity, Infinity],
                                                layoutMode: {
                                                    type: "box",
                                                    ignoreSize: !0
                                                },
                                                defaultOption: {
                                                    show: !0,
                                                    zlevel: 0,
                                                    z: 4,
                                                    seriesIndex: null,
                                                    min: 0,
                                                    max: 200,
                                                    dimension: null,
                                                    inRange: null,
                                                    outOfRange: null,
                                                    left: 0,
                                                    right: null,
                                                    top: null,
                                                    bottom: 0,
                                                    itemWidth: null,
                                                    itemHeight: null,
                                                    inverse: !1,
                                                    orient: "vertical",
                                                    backgroundColor: "rgba(0,0,0,0)",
                                                    borderColor: "#ccc",
                                                    contentColor: "#5793f3",
                                                    inactiveColor: "#aaa",
                                                    borderWidth: 0,
                                                    padding: 5,
                                                    textGap: 10,
                                                    precision: 0,
                                                    color: null,
                                                    formatter: null,
                                                    text: null,
                                                    textStyle: {
                                                        color: "#333"
                                                    }
                                                },
                                                init: function(n, t, i) {
                                                    this._dataExtent;
                                                    this.targetVisuals = {};
                                                    this.controllerVisuals = {};
                                                    this.textStyleModel;
                                                    this.itemSize;
                                                    this.mergeDefaultAndTheme(n, i)
                                                },
                                                optionUpdated: function(n, t) {
                                                    var i = this.option;
                                                    a.canvasSupported || (i.realtime = !1);
                                                    t || f.replaceVisualOption(i, n, this.replacableOptionKeys);
                                                    this.textStyleModel = this.getModel("textStyle");
                                                    this.resetItemSize();
                                                    this.completeVisualOption()
                                                },
                                                resetVisual: function(n) {
                                                    var t = this.stateList;
                                                    n = r.bind(n, this);
                                                    this.controllerVisuals = f.createVisualMappings(this.option.controller, t, n);
                                                    this.targetVisuals = f.createVisualMappings(this.option.target, t, n)
                                                },
                                                resetTargetSeries: function() {
                                                    var n = this.option,
                                                        t = n.seriesIndex == null;
                                                    n.seriesIndex = t ? [] : v.normalizeToArray(n.seriesIndex);
                                                    t && this.ecModel.eachSeries(function(t, i) {
                                                        n.seriesIndex.push(i)
                                                    })
                                                },
                                                eachTargetSeries: function(n, t) {
                                                    r.each(this.option.seriesIndex, function(i) {
                                                        n.call(t, this.ecModel.getSeriesByIndex(i))
                                                    }, this)
                                                },
                                                isTargetSeries: function(n) {
                                                    var t = !1;
                                                    return this.eachTargetSeries(function(i) {
                                                        i === n && (t = !0)
                                                    }), t
                                                },
                                                formatValueText: function(n, t, i) {
                                                    function s(n) {
                                                        return n === o[0] ? "min" : n === o[1] ? "max" : (+n).toFixed(c)
                                                    }
                                                    var h = this.option,
                                                        c = h.precision,
                                                        o = this.dataBound,
                                                        e = h.formatter,
                                                        f, u;
                                                    return (i = i || ["<", ">"], r.isArray(n) && (n = n.slice(), f = !0), u = t ? n : f ? [s(n[0]), s(n[1])] : s(n), r.isString(e)) ? e.replace("{value}", f ? u[0] : u).replace("{value2}", f ? u[1] : u) : r.isFunction(e) ? f ? e(n[0], n[1]) : e(n) : f ? n[0] === o[0] ? i[0] + " " + u[1] : n[1] === o[1] ? i[1] + " " + u[0] : u[0] + " - " + u[1] : u
                                                },
                                                resetExtent: function() {
                                                    var n = this.option,
                                                        t = w([n.min, n.max]);
                                                    this._dataExtent = t
                                                },
                                                getDataDimension: function(n) {
                                                    var t = this.option.dimension;
                                                    return t != null ? t : n.dimensions.length - 1
                                                },
                                                getExtent: function() {
                                                    return this._dataExtent.slice()
                                                },
                                                completeVisualOption: function() {
                                                    function c(i) {
                                                        p(n.color) && !i.inRange && (i.inRange = {
                                                            color: n.color.slice().reverse()
                                                        });
                                                        i.inRange = i.inRange || {
                                                            color: k
                                                        };
                                                        e(this.stateList, function(n) {
                                                            var u = i[n],
                                                                f;
                                                            r.isString(u) && (f = o.get(u, "active", t), f ? (i[n] = {}, i[n][u] = f) : delete i[n])
                                                        }, this)
                                                    }

                                                    function l(n, i, r) {
                                                        var s = n[i],
                                                            f = n[r];
                                                        s && !f && (f = n[r] = {}, e(s, function(n, i) {
                                                            if (u.isValidType(i)) {
                                                                var r = o.get(i, "inactive", t);
                                                                r != null && (f[i] = r, i !== "color" || f.hasOwnProperty("opacity") || f.hasOwnProperty("colorAlpha") || (f.opacity = [0, 0]))
                                                            }
                                                        }))
                                                    }

                                                    function a(n) {
                                                        var i = (n.inRange || {}).symbol || (n.outOfRange || {}).symbol,
                                                            u = (n.inRange || {}).symbolSize || (n.outOfRange || {}).symbolSize,
                                                            f = this.get("inactiveColor");
                                                        e(this.stateList, function(e) {
                                                            var h = this.itemSize,
                                                                o = n[e],
                                                                c, l;
                                                            o || (o = n[e] = {
                                                                color: t ? f : [f]
                                                            });
                                                            o.symbol == null && (o.symbol = i && r.clone(i) || (t ? "roundRect" : ["roundRect"]));
                                                            o.symbolSize == null && (o.symbolSize = u && r.clone(u) || (t ? h[0] : [h[0], h[0]]));
                                                            o.symbol = s(o.symbol, function(n) {
                                                                return n === "none" || n === "square" ? "roundRect" : n
                                                            });
                                                            c = o.symbolSize;
                                                            c != null && (l = -Infinity, y(c, function(n) {
                                                                n > l && (l = n)
                                                            }), o.symbolSize = s(c, function(n) {
                                                                return b(n, [0, l], [0, h[0]], !0)
                                                            }))
                                                        }, this)
                                                    }
                                                    var n = this.option,
                                                        h = {
                                                            inRange: n.inRange,
                                                            outOfRange: n.outOfRange
                                                        },
                                                        i = n.target || (n.target = {}),
                                                        f = n.controller || (n.controller = {}),
                                                        t;
                                                    r.merge(i, h);
                                                    r.merge(f, h);
                                                    t = this.isCategory();
                                                    c.call(this, i);
                                                    c.call(this, f);
                                                    l.call(this, i, "inRange", "outOfRange");
                                                    a.call(this, f)
                                                },
                                                resetItemSize: function() {
                                                    this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))]
                                                },
                                                isCategory: function() {
                                                    return !!this.option.categories
                                                },
                                                setSelected: c,
                                                getValueState: c
                                            });
                                        n.exports = d
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = {
                                                get: function(n, t, i) {
                                                    var u = r.clone((f[n] || {})[t]);
                                                    return i ? r.isArray(u) ? u[u.length - 1] : u : u
                                                }
                                            },
                                            f = {
                                                color: {
                                                    active: ["#006edd", "#e0ffff"],
                                                    inactive: ["rgba(0,0,0,0)"]
                                                },
                                                colorHue: {
                                                    active: [0, 360],
                                                    inactive: [0, 0]
                                                },
                                                colorSaturation: {
                                                    active: [.3, 1],
                                                    inactive: [0, 0]
                                                },
                                                colorLightness: {
                                                    active: [.9, .5],
                                                    inactive: [0, 0]
                                                },
                                                colorAlpha: {
                                                    active: [.3, 1],
                                                    inactive: [0, 0]
                                                },
                                                opacity: {
                                                    active: [.3, 1],
                                                    inactive: [0, 0]
                                                },
                                                symbol: {
                                                    active: ["circle", "roundRect", "diamond"],
                                                    inactive: ["none"]
                                                },
                                                symbolSize: {
                                                    active: [10, 50],
                                                    inactive: [0, 0]
                                                }
                                            };
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function h(n, t, i, u) {
                                            return new r.Polygon({
                                                shape: {
                                                    points: n
                                                },
                                                draggable: !!i,
                                                cursor: t,
                                                drift: i,
                                                ondragend: u
                                            })
                                        }

                                        function g(n, t) {
                                            return n === 0 ? [
                                                [0, 0],
                                                [t, 0],
                                                [t, -t]
                                            ] : [
                                                [0, 0],
                                                [t, 0],
                                                [t, t]
                                            ]
                                        }

                                        function nt(n, t, i, r) {
                                            return n ? [
                                                [0, -s(t, e(i, 0))],
                                                [c, 0],
                                                [0, s(t, e(r - i, 0))]
                                            ] : [
                                                [0, 0],
                                                [5, -5],
                                                [5, 5]
                                            ]
                                        }

                                        function tt(n, t, i) {
                                            var r = d / 2,
                                                f = n.get("hoverLinkDataSize");
                                            return f && (r = u(f, t, i, !0) / 2), r
                                        }

                                        function a(n) {
                                            return !n.get("realtime") && n.get("hoverLinkOnHandle")
                                        }
                                        var v = i(340),
                                            r = i(43),
                                            f = i(4),
                                            y = i(7),
                                            p = i(325),
                                            w = i(79),
                                            o = i(341),
                                            b = i(5),
                                            u = y.linearMap,
                                            k = f.each,
                                            s = Math.min,
                                            e = Math.max,
                                            d = 12,
                                            c = 6,
                                            l = v.extend({
                                                type: "visualMap.continuous",
                                                init: function() {
                                                    l.superApply(this, "init", arguments);
                                                    this._shapes = {};
                                                    this._dataInterval = [];
                                                    this._handleEnds = [];
                                                    this._orient;
                                                    this._useHandle;
                                                    this._hoverLinkDataIndices = [];
                                                    this._dragging;
                                                    this._hovering
                                                },
                                                doRender: function(n, t, i, r) {
                                                    r && r.type === "selectDataRange" && r.from === this.uid || this._buildView()
                                                },
                                                _buildView: function() {
                                                    var t, n, i;
                                                    this.group.removeAll();
                                                    t = this.visualMapModel;
                                                    n = this.group;
                                                    this._orient = t.get("orient");
                                                    this._useHandle = t.get("calculable");
                                                    this._resetInterval();
                                                    this._renderBar(n);
                                                    i = t.get("text");
                                                    this._renderEndsText(n, i, 0);
                                                    this._renderEndsText(n, i, 1);
                                                    this._updateView(!0);
                                                    this.renderBackground(n);
                                                    this._updateView();
                                                    this._enableHoverLinkToSeries();
                                                    this._enableHoverLinkFromSeries();
                                                    this.positionGroup(n)
                                                },
                                                _renderEndsText: function(n, t, i) {
                                                    var u;
                                                    if (t) {
                                                        u = t[1 - i];
                                                        u = u != null ? u + "" : "";
                                                        var f = this.visualMapModel,
                                                            e = f.get("textGap"),
                                                            o = f.itemSize,
                                                            s = this._shapes.barGroup,
                                                            h = this._applyTransform([o[0] / 2, i === 0 ? -e : o[1] + e], s),
                                                            c = this._applyTransform(i === 0 ? "bottom" : "top", s),
                                                            l = this._orient,
                                                            a = this.visualMapModel.textStyleModel;
                                                        this.group.add(new r.Text({
                                                            style: {
                                                                x: h[0],
                                                                y: h[1],
                                                                textVerticalAlign: l === "horizontal" ? "middle" : c,
                                                                textAlign: l === "horizontal" ? c : "center",
                                                                text: u,
                                                                textFont: a.getFont(),
                                                                fill: a.getTextColor()
                                                            }
                                                        }))
                                                    }
                                                },
                                                _renderBar: function(n) {
                                                    var s = this.visualMapModel,
                                                        t = this._shapes,
                                                        r = s.itemSize,
                                                        c = this._orient,
                                                        v = this._useHandle,
                                                        l = o.getItemAlign(s, this.api, r),
                                                        i = t.barGroup = this._createBarGroup(l),
                                                        a, u;
                                                    i.add(t.outOfRange = h());
                                                    i.add(t.inRange = h(null, v ? "move" : null, f.bind(this._dragHandle, this, "all", !1), f.bind(this._dragHandle, this, "all", !0)));
                                                    a = s.textStyleModel.getTextRect("国");
                                                    u = e(a.width, a.height);
                                                    v && (t.handleThumbs = [], t.handleLabels = [], t.handleLabelPoints = [], this._createHandle(i, 0, r, u, c, l), this._createHandle(i, 1, r, u, c, l));
                                                    this._createIndicator(i, r, u, c);
                                                    n.add(i)
                                                },
                                                _createHandle: function(n, t, i, u, e) {
                                                    var a = f.bind(this._dragHandle, this, t, !1),
                                                        v = f.bind(this._dragHandle, this, t, !0),
                                                        s = h(g(t, u), "move", a, v),
                                                        c, l, y, o;
                                                    s.position[0] = i[0];
                                                    n.add(s);
                                                    c = this.visualMapModel.textStyleModel;
                                                    l = new r.Text({
                                                        draggable: !0,
                                                        drift: a,
                                                        ondragend: v,
                                                        style: {
                                                            x: 0,
                                                            y: 0,
                                                            text: "",
                                                            textFont: c.getFont(),
                                                            fill: c.getTextColor()
                                                        }
                                                    });
                                                    this.group.add(l);
                                                    y = [e === "horizontal" ? u / 2 : u * 1.5, e === "horizontal" ? t === 0 ? -(u * 1.5) : u * 1.5 : t === 0 ? -u / 2 : u / 2];
                                                    o = this._shapes;
                                                    o.handleThumbs[t] = s;
                                                    o.handleLabelPoints[t] = y;
                                                    o.handleLabels[t] = l
                                                },
                                                _createIndicator: function(n, t, i, u) {
                                                    var f = h([
                                                            [0, 0]
                                                        ], "move"),
                                                        o, s, l, e;
                                                    f.position[0] = t[0];
                                                    f.attr({
                                                        invisible: !0,
                                                        silent: !0
                                                    });
                                                    n.add(f);
                                                    o = this.visualMapModel.textStyleModel;
                                                    s = new r.Text({
                                                        silent: !0,
                                                        invisible: !0,
                                                        style: {
                                                            x: 0,
                                                            y: 0,
                                                            text: "",
                                                            textFont: o.getFont(),
                                                            fill: o.getTextColor()
                                                        }
                                                    });
                                                    this.group.add(s);
                                                    l = [u === "horizontal" ? i / 2 : c + 3, 0];
                                                    e = this._shapes;
                                                    e.indicator = f;
                                                    e.indicatorLabel = s;
                                                    e.indicatorLabelPoint = l
                                                },
                                                _dragHandle: function(n, t, i, r) {
                                                    if (this._useHandle) {
                                                        if (this._dragging = !t, !t) {
                                                            var u = this._applyTransform([i, r], this._shapes.barGroup, !0);
                                                            this._updateInterval(n, u[1]);
                                                            this._updateView()
                                                        }
                                                        t === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
                                                            type: "selectDataRange",
                                                            from: this.uid,
                                                            visualMapId: this.visualMapModel.id,
                                                            selected: this._dataInterval.slice()
                                                        });
                                                        t ? this._hovering || this._clearHoverLinkToSeries() : a(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[n], !1)
                                                    }
                                                },
                                                _resetInterval: function() {
                                                    var n = this.visualMapModel,
                                                        t = this._dataInterval = n.getSelected(),
                                                        i = n.getExtent(),
                                                        r = [0, n.itemSize[1]];
                                                    this._handleEnds = [u(t[0], i, r, !0), u(t[1], i, r, !0)]
                                                },
                                                _updateInterval: function(n, t) {
                                                    var i, r, f, e;
                                                    t = t || 0;
                                                    i = this.visualMapModel;
                                                    r = this._handleEnds;
                                                    p(t, r, [0, i.itemSize[1]], n === "all" ? "rigid" : "push", n);
                                                    f = i.getExtent();
                                                    e = [0, i.itemSize[1]];
                                                    this._dataInterval = [u(r[0], e, f, !0), u(r[1], e, f, !0)]
                                                },
                                                _updateView: function(n) {
                                                    var u = this.visualMapModel,
                                                        i = u.getExtent(),
                                                        f = this._shapes,
                                                        e = [0, u.itemSize[1]],
                                                        o = n ? e : this._handleEnds,
                                                        t = this._createBarVisual(this._dataInterval, i, o, "inRange"),
                                                        r = this._createBarVisual(i, i, e, "outOfRange");
                                                    f.inRange.setStyle({
                                                        fill: t.barColor,
                                                        opacity: t.opacity
                                                    }).setShape("points", t.barPoints);
                                                    f.outOfRange.setStyle({
                                                        fill: r.barColor,
                                                        opacity: r.opacity
                                                    }).setShape("points", r.barPoints);
                                                    this._updateHandle(o, t)
                                                },
                                                _createBarVisual: function(n, t, i, r) {
                                                    var f = {
                                                            forceState: r,
                                                            convertOpacityToAlpha: !0
                                                        },
                                                        u = this._makeColorGradient(n, f),
                                                        e = [this.getControllerVisual(n[0], "symbolSize", f), this.getControllerVisual(n[1], "symbolSize", f)],
                                                        o = this._createBarPoints(i, e);
                                                    return {
                                                        barColor: new w(0, 0, 0, 1, u),
                                                        barPoints: o,
                                                        handlesColor: [u[0].color, u[u.length - 1].color]
                                                    }
                                                },
                                                _makeColorGradient: function(n, t) {
                                                    var u = 100,
                                                        r = [],
                                                        e = (n[1] - n[0]) / u,
                                                        i, f;
                                                    for (r.push({
                                                            color: this.getControllerVisual(n[0], "color", t),
                                                            offset: 0
                                                        }), i = 1; i < u; i++) {
                                                        if (f = n[0] + e * i, f > n[1]) break;
                                                        r.push({
                                                            color: this.getControllerVisual(f, "color", t),
                                                            offset: i / u
                                                        })
                                                    }
                                                    return r.push({
                                                        color: this.getControllerVisual(n[1], "color", t),
                                                        offset: 1
                                                    }), r
                                                },
                                                _createBarPoints: function(n, t) {
                                                    var i = this.visualMapModel.itemSize;
                                                    return [
                                                        [i[0] - t[0], n[0]],
                                                        [i[0], n[0]],
                                                        [i[0], n[1]],
                                                        [i[0] - t[1], n[1]]
                                                    ]
                                                },
                                                _createBarGroup: function(n) {
                                                    var t = this._orient,
                                                        i = this.visualMapModel.get("inverse");
                                                    return new r.Group(t === "horizontal" && !i ? {
                                                        scale: n === "bottom" ? [1, 1] : [-1, 1],
                                                        rotation: Math.PI / 2
                                                    } : t === "horizontal" && i ? {
                                                        scale: n === "bottom" ? [-1, 1] : [1, 1],
                                                        rotation: -Math.PI / 2
                                                    } : t === "vertical" && !i ? {
                                                        scale: n === "left" ? [1, -1] : [-1, -1]
                                                    } : {
                                                        scale: n === "left" ? [1, 1] : [-1, 1]
                                                    })
                                                },
                                                _updateHandle: function(n, t) {
                                                    if (this._useHandle) {
                                                        var i = this._shapes,
                                                            u = this.visualMapModel,
                                                            f = i.handleThumbs,
                                                            e = i.handleLabels;
                                                        k([0, 1], function(o) {
                                                            var s = f[o],
                                                                h;
                                                            s.setStyle("fill", t.handlesColor[o]);
                                                            s.position[1] = n[o];
                                                            h = r.applyTransform(i.handleLabelPoints[o], r.getTransform(s, this.group));
                                                            e[o].setStyle({
                                                                x: h[0],
                                                                y: h[1],
                                                                text: u.formatValueText(this._dataInterval[o]),
                                                                textVerticalAlign: "middle",
                                                                textAlign: this._applyTransform(this._orient === "horizontal" ? o === 0 ? "bottom" : "top" : "left", i.barGroup)
                                                            })
                                                        }, this)
                                                    }
                                                },
                                                _showIndicator: function(n, t, i, f) {
                                                    var s = this.visualMapModel,
                                                        b = s.getExtent(),
                                                        v = s.itemSize,
                                                        k = [0, v[1]],
                                                        y = u(n, b, k, !0),
                                                        o = this._shapes,
                                                        e = o.indicator,
                                                        p, w, h, c, l, a;
                                                    e && (e.position[1] = y, e.attr("invisible", !1), e.setShape("points", nt(!!i, f, y, v[1])), p = {
                                                        convertOpacityToAlpha: !0
                                                    }, w = this.getControllerVisual(n, "color", p), e.setStyle("fill", w), h = r.applyTransform(o.indicatorLabelPoint, r.getTransform(e, this.group)), c = o.indicatorLabel, c.attr("invisible", !1), l = this._applyTransform("left", o.barGroup), a = this._orient, c.setStyle({
                                                        text: (i ? i : "") + s.formatValueText(t),
                                                        textVerticalAlign: a === "horizontal" ? l : "middle",
                                                        textAlign: a === "horizontal" ? "center" : l,
                                                        x: h[0],
                                                        y: h[1]
                                                    }))
                                                },
                                                _enableHoverLinkToSeries: function() {
                                                    var n = this;
                                                    this._shapes.barGroup.on("mousemove", function(t) {
                                                        if (n._hovering = !0, !n._dragging) {
                                                            var r = n.visualMapModel.itemSize,
                                                                i = n._applyTransform([t.offsetX, t.offsetY], n._shapes.barGroup, !0, !0);
                                                            i[1] = s(e(0, i[1]), r[1]);
                                                            n._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= r[0])
                                                        }
                                                    }).on("mouseout", function() {
                                                        n._hovering = !1;
                                                        n._dragging || n._clearHoverLinkToSeries()
                                                    })
                                                },
                                                _enableHoverLinkFromSeries: function() {
                                                    var n = this.api.getZr();
                                                    if (this.visualMapModel.option.hoverLink) {
                                                        n.on("mouseover", this._hoverLinkFromSeriesMouseOver, this);
                                                        n.on("mouseout", this._hideIndicator, this)
                                                    } else this._clearHoverLinkFromSeries()
                                                },
                                                _doHoverLinkToSeries: function(n, t) {
                                                    var f = this.visualMapModel,
                                                        k = f.itemSize,
                                                        i, h, w, y, p;
                                                    if (f.option.hoverLink) {
                                                        i = [0, k[1]];
                                                        h = f.getExtent();
                                                        n = s(e(i[0], n), i[1]);
                                                        var c = tt(f, h, i),
                                                            l = [n - c, n + c],
                                                            v = u(n, i, h, !0),
                                                            r = [u(l[0], i, h, !0), u(l[1], i, h, !0)];
                                                        l[0] < i[0] && (r[0] = -Infinity);
                                                        l[1] > i[1] && (r[1] = Infinity);
                                                        t && (r[0] === -Infinity ? this._showIndicator(v, r[1], "< ", c) : r[1] === Infinity ? this._showIndicator(v, r[0], "> ", c) : this._showIndicator(v, v, "≈ ", c));
                                                        w = this._hoverLinkDataIndices;
                                                        y = [];
                                                        (t || a(f)) && (y = this._hoverLinkDataIndices = f.findTargetDataIndices(r));
                                                        p = b.compressBatches(w, y);
                                                        this._dispatchHighDown("downplay", o.convertDataIndex(p[0]));
                                                        this._dispatchHighDown("highlight", o.convertDataIndex(p[1]))
                                                    }
                                                },
                                                _hoverLinkFromSeriesMouseOver: function(n) {
                                                    var t = n.target;
                                                    if (t && t.dataIndex != null) {
                                                        var u = t.dataModel || this.ecModel.getSeriesByIndex(t.seriesIndex),
                                                            i = u.getData(t.dataType),
                                                            f = i.getDimension(this.visualMapModel.getDataDimension(i)),
                                                            r = i.get(f, t.dataIndex, !0);
                                                        isNaN(r) || this._showIndicator(r, r)
                                                    }
                                                },
                                                _hideIndicator: function() {
                                                    var n = this._shapes;
                                                    n.indicator && n.indicator.attr("invisible", !0);
                                                    n.indicatorLabel && n.indicatorLabel.attr("invisible", !0)
                                                },
                                                _clearHoverLinkToSeries: function() {
                                                    this._hideIndicator();
                                                    var n = this._hoverLinkDataIndices;
                                                    this._dispatchHighDown("downplay", o.convertDataIndex(n));
                                                    n.length = 0
                                                },
                                                _clearHoverLinkFromSeries: function() {
                                                    this._hideIndicator();
                                                    var n = this.api.getZr();
                                                    n.off("mouseover", this._hoverLinkFromSeriesMouseOver);
                                                    n.off("mouseout", this._hideIndicator)
                                                },
                                                _applyTransform: function(n, t, i, u) {
                                                    var e = r.getTransform(t, u ? null : this.group);
                                                    return r[f.isArray(n) ? "applyTransform" : "transformDirection"](n, e, i)
                                                },
                                                _dispatchHighDown: function(n, t) {
                                                    t && t.length && this.api.dispatchAction({
                                                        type: n,
                                                        batch: t
                                                    })
                                                },
                                                dispose: function() {
                                                    this._clearHoverLinkFromSeries();
                                                    this._clearHoverLinkToSeries()
                                                },
                                                remove: function() {
                                                    this._clearHoverLinkFromSeries();
                                                    this._clearHoverLinkToSeries()
                                                }
                                            });
                                        n.exports = l
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            f = i(43),
                                            e = i(6),
                                            o = i(21),
                                            s = i(1),
                                            u = i(193);
                                        n.exports = s.extendComponentView({
                                            type: "visualMap",
                                            autoPositionValues: {
                                                left: 1,
                                                right: 1,
                                                top: 1,
                                                bottom: 1
                                            },
                                            init: function(n, t) {
                                                this.ecModel = n;
                                                this.api = t;
                                                this.visualMapModel
                                            },
                                            render: function(n) {
                                                if (this.visualMapModel = n, n.get("show") === !1) {
                                                    this.group.removeAll();
                                                    return
                                                }
                                                this.doRender.apply(this, arguments)
                                            },
                                            renderBackground: function(n) {
                                                var i = this.visualMapModel,
                                                    t = e.normalizeCssArray(i.get("padding") || 0),
                                                    r = n.getBoundingRect();
                                                n.add(new f.Rect({
                                                    z2: -1,
                                                    silent: !0,
                                                    shape: {
                                                        x: r.x - t[3],
                                                        y: r.y - t[0],
                                                        width: r.width + t[3] + t[1],
                                                        height: r.height + t[0] + t[2]
                                                    },
                                                    style: {
                                                        fill: i.get("backgroundColor"),
                                                        stroke: i.get("borderColor"),
                                                        lineWidth: i.get("borderWidth")
                                                    }
                                                }))
                                            },
                                            getControllerVisual: function(n, t, i) {
                                                function l(n) {
                                                    return f[n]
                                                }

                                                function a(n, t) {
                                                    f[n] = t
                                                }
                                                var s, o, h;
                                                i = i || {};
                                                var c = i.forceState,
                                                    e = this.visualMapModel,
                                                    f = {};
                                                return t === "symbol" && (f.symbol = e.get("itemSymbol")), t === "color" && (s = e.get("contentColor"), f.color = s), o = e.controllerVisuals[c || e.getValueState(n)], h = u.prepareVisualTypes(o), r.each(h, function(r) {
                                                    var f = o[r];
                                                    i.convertOpacityToAlpha && r === "opacity" && (r = "colorAlpha", f = o.__alphaForOpacity);
                                                    u.dependsOn(r, t) && f && f.applyVisual(n, l, a)
                                                }), f[t]
                                            },
                                            positionGroup: function(n) {
                                                var i = this.visualMapModel,
                                                    t = this.api;
                                                o.positionGroup(n, i.getBoxLayoutParams(), {
                                                    width: t.getWidth(),
                                                    height: t.getHeight()
                                                })
                                            },
                                            doRender: r.noop
                                        })
                                    }, function(n, t, i) {
                                        var r = i(4),
                                            u = i(21),
                                            f = {
                                                getItemAlign: function(n, t, i) {
                                                    var e = n.option,
                                                        s = e.align,
                                                        r, f, o;
                                                    if (s != null && s !== "auto") return s;
                                                    var a = {
                                                            width: t.getWidth(),
                                                            height: t.getHeight()
                                                        },
                                                        h = e.orient === "horizontal" ? 1 : 0,
                                                        v = [
                                                            ["left", "right", "width"],
                                                            ["top", "bottom", "height"]
                                                        ],
                                                        c = v[h],
                                                        y = [0, null, 10],
                                                        l = {};
                                                    for (r = 0; r < 3; r++) l[v[1 - h][r]] = y[r], l[c[r]] = r === 2 ? i[0] : e[c[r]];
                                                    return f = [
                                                        ["x", "width", 3],
                                                        ["y", "height", 0]
                                                    ][h], o = u.getLayoutRect(l, a, e.padding), c[(o.margin[f[2]] || 0) + o[f[0]] + o[f[1]] * .5 < a[f[1]] * .5 ? 0 : 1]
                                                },
                                                convertDataIndex: function(n) {
                                                    return r.each(n || [], function() {
                                                        n.dataIndex != null && (n.dataIndexInside = n.dataIndex, n.dataIndex = null)
                                                    }), n
                                                }
                                            };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        r.registerAction({
                                            type: "selectDataRange",
                                            event: "dataRangeSelected",
                                            update: "update"
                                        }, function(n, t) {
                                            t.eachComponent({
                                                mainType: "visualMap",
                                                query: n
                                            }, function(t) {
                                                t.setSelected(n.selected)
                                            })
                                        })
                                    }, function(n, t, i) {
                                        i(1).registerPreprocessor(i(333));
                                        i(334);
                                        i(335);
                                        i(344);
                                        i(345);
                                        i(342)
                                    }, function(n, t, i) {
                                        function e(n, t) {
                                            var i = n.inverse;
                                            (n.orient === "vertical" ? !i : i) && t.reverse()
                                        }

                                        function o(n) {
                                            function e(n, t, i) {
                                                return i = i || 0, n.interval[i] < t.interval[i] || n.interval[i] === t.interval[i] && (+n.close[i] > t.close[i] || e(n, t, 1))
                                            }
                                            var r, i, u, f, t;
                                            for (n.sort(function(n, t) {
                                                    return e(n, t) ? -1 : 1
                                                }), r = -Infinity, i = 0; i < n.length; i++)
                                                for (u = n[i].interval, f = n[i].close, t = 0; t < 2; t++) u[t] < r && (u[t] = r, f[t] = 1 - t), r = u[t]
                                        }
                                        var s = i(337),
                                            r = i(4),
                                            u = i(193),
                                            f = s.extend({
                                                type: "visualMap.piecewise",
                                                defaultOption: {
                                                    selected: null,
                                                    minOpen: !1,
                                                    maxOpen: !1,
                                                    align: "auto",
                                                    itemWidth: 20,
                                                    itemHeight: 14,
                                                    itemSymbol: "roundRect",
                                                    pieceList: null,
                                                    categories: null,
                                                    splitNumber: 5,
                                                    selectedMode: "multiple",
                                                    itemGap: 10,
                                                    hoverLink: !0
                                                },
                                                optionUpdated: function(n, t) {
                                                    var i, u;
                                                    f.superApply(this, "optionUpdated", arguments);
                                                    this._pieceList = [];
                                                    this.resetTargetSeries();
                                                    this.resetExtent();
                                                    i = this._mode = this._determineMode();
                                                    h[this._mode].call(this);
                                                    this._resetSelected(n, t);
                                                    u = this.option.categories;
                                                    this.resetVisual(function(n, t) {
                                                        i === "categories" ? (n.mappingMethod = "category", n.categories = r.clone(u)) : (n.dataExtent = this.getExtent(), n.mappingMethod = "piecewise", n.pieceList = r.map(this._pieceList, function(n) {
                                                            var n = r.clone(n);
                                                            return t !== "inRange" && (n.visual = null), n
                                                        }))
                                                    })
                                                },
                                                _resetSelected: function(n, t) {
                                                    var u = this.option,
                                                        e = this._pieceList,
                                                        i = (t ? u : n).selected || {},
                                                        f;
                                                    u.selected = i;
                                                    r.each(e, function(n) {
                                                        var t = this.getSelectedMapKey(n);
                                                        i.hasOwnProperty(t) || (i[t] = !0)
                                                    }, this);
                                                    u.selectedMode === "single" && (f = !1, r.each(e, function(n) {
                                                        var t = this.getSelectedMapKey(n);
                                                        i[t] && (f ? i[t] = !1 : f = !0)
                                                    }, this))
                                                },
                                                getSelectedMapKey: function(n) {
                                                    return this._mode === "categories" ? n.value + "" : n.index + ""
                                                },
                                                getPieceList: function() {
                                                    return this._pieceList
                                                },
                                                _determineMode: function() {
                                                    var n = this.option;
                                                    return n.pieces && n.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber"
                                                },
                                                setSelected: function(n) {
                                                    this.option.selected = r.clone(n)
                                                },
                                                getValueState: function(n) {
                                                    var t = u.findPieceIndex(n, this._pieceList);
                                                    return t != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[t])] ? "inRange" : "outOfRange" : "outOfRange"
                                                },
                                                findTargetDataIndices: function(n) {
                                                    var t = [];
                                                    return this.eachTargetSeries(function(i) {
                                                        var r = [],
                                                            f = i.getData();
                                                        f.each(this.getDataDimension(f), function(t, i) {
                                                            var f = u.findPieceIndex(t, this._pieceList);
                                                            f === n && r.push(i)
                                                        }, !0, this);
                                                        t.push({
                                                            seriesId: i.id,
                                                            dataIndex: r
                                                        })
                                                    }, this), t
                                                },
                                                getRepresentValue: function(n) {
                                                    var t, i;
                                                    return this.isCategory() ? t = n.value : n.value != null ? t = n.value : (i = n.interval || [], t = (i[0] + i[1]) / 2), t
                                                },
                                                getStops: function(n, t) {
                                                    function e(n) {
                                                        u.push(n);
                                                        n.color = t(f, f.getRepresentValue(n), n.valueState)
                                                    }
                                                    var u = [],
                                                        f = this,
                                                        i = -Infinity;
                                                    return r.each(this._pieceList, function(n) {
                                                        var t = n.interval;
                                                        t && (t[0] > i && e({
                                                            interval: [i, t[0]],
                                                            valueState: "outOfRange"
                                                        }), e({
                                                            interval: t.slice(),
                                                            valueState: this.getValueState((t[0] + t[1]) / 2)
                                                        }), i = t[1])
                                                    }, this), u
                                                }
                                            }),
                                            h = {
                                                splitNumber: function() {
                                                    var i = this.option,
                                                        e = this._pieceList,
                                                        s = i.precision,
                                                        u = this.getExtent(),
                                                        f = i.splitNumber,
                                                        n, t, h, c, l;
                                                    for (f = Math.max(parseInt(f, 10), 1), i.splitNumber = f, n = (u[1] - u[0]) / f; + n.toFixed(s) !== n && s < 5;) s++;
                                                    for (i.precision = s, n = +n.toFixed(s), t = 0, i.minOpen && e.push({
                                                            index: t++,
                                                            interval: [-Infinity, u[0]],
                                                            close: [0, 0]
                                                        }), h = u[0], c = t + f; t < c; h += n) l = t === f - 1 ? u[1] : h + n, e.push({
                                                        index: t++,
                                                        interval: [h, l],
                                                        close: [1, 1]
                                                    });
                                                    i.maxOpen && e.push({
                                                        index: t++,
                                                        interval: [u[1], Infinity],
                                                        close: [0, 0]
                                                    });
                                                    o(e);
                                                    r.each(e, function(n) {
                                                        n.text = this.formatValueText(n.interval)
                                                    }, this)
                                                },
                                                categories: function() {
                                                    var n = this.option;
                                                    r.each(n.categories, function(n) {
                                                        this._pieceList.push({
                                                            text: this.formatValueText(n, !0),
                                                            value: n
                                                        })
                                                    }, this);
                                                    e(n, this._pieceList)
                                                },
                                                pieces: function() {
                                                    var t = this.option,
                                                        n = this._pieceList;
                                                    r.each(t.pieces, function(t, i) {
                                                        var o, c, e, a, s;
                                                        if (r.isObject(t) || (t = {
                                                                value: t
                                                            }), o = {
                                                                text: "",
                                                                index: i
                                                            }, t.label != null && (o.text = t.label), t.hasOwnProperty("value")) c = o.value = t.value, o.interval = [c, c], o.close = [1, 1];
                                                        else {
                                                            var f = o.interval = [],
                                                                h = o.close = [0, 0],
                                                                v = [1, 0, 1],
                                                                y = [-Infinity, Infinity],
                                                                l = [];
                                                            for (e = 0; e < 2; e++) {
                                                                for (a = [
                                                                        ["gte", "gt", "min"],
                                                                        ["lte", "lt", "max"]
                                                                    ][e], s = 0; s < 3 && f[e] == null; s++) f[e] = t[a[s]], h[e] = v[s], l[e] = s === 2;
                                                                f[e] == null && (f[e] = y[e])
                                                            }
                                                            l[0] && f[1] === Infinity && (h[0] = 0);
                                                            l[1] && f[0] === -Infinity && (h[1] = 0);
                                                            !0 && f[0] > f[1] && console.warn("Piece " + i + "is illegal: " + f + " lower bound should not greater then uppper bound.");
                                                            f[0] === f[1] && h[0] && h[1] && (o.value = f[0])
                                                        }
                                                        o.visual = u.retrieveVisuals(t);
                                                        n.push(o)
                                                    }, this);
                                                    e(t, n);
                                                    o(n);
                                                    r.each(n, function(n) {
                                                        var t = n.close,
                                                            i = [
                                                                ["<", "≤"][t[1]],
                                                                [">", "≥"][t[0]]
                                                            ];
                                                        n.text = n.text || this.formatValueText(n.value != null ? n.value : n.interval, !1, i)
                                                    }, this)
                                                }
                                            };
                                        n.exports = f
                                    }, function(n, t, i) {
                                        var e = i(340),
                                            r = i(4),
                                            u = i(43),
                                            o = i(106),
                                            s = i(21),
                                            f = i(341),
                                            h = e.extend({
                                                type: "visualMap.piecewise",
                                                doRender: function() {
                                                    function y(f) {
                                                        var s = f.piece,
                                                            o = new u.Group,
                                                            l, y;
                                                        o.onclick = r.bind(this._onItemClick, this, s);
                                                        this._enableHoverLink(o, f.indexInModelPieceList);
                                                        l = t.getRepresentValue(s);
                                                        this._createItemSymbol(o, l, [0, 0, i[0], i[1]]);
                                                        c && (y = this.visualMapModel.getValueState(l), o.add(new u.Text({
                                                            style: {
                                                                x: h === "right" ? -e : i[0] + e,
                                                                y: i[1] / 2,
                                                                text: s.text,
                                                                textVerticalAlign: "middle",
                                                                textAlign: h,
                                                                textFont: a,
                                                                fill: v,
                                                                opacity: y === "outOfRange" ? .5 : 1
                                                            }
                                                        })));
                                                        n.add(o)
                                                    }
                                                    var n = this.group;
                                                    n.removeAll();
                                                    var t = this.visualMapModel,
                                                        e = t.get("textGap"),
                                                        o = t.textStyleModel,
                                                        a = o.getFont(),
                                                        v = o.getTextColor(),
                                                        h = this._getItemAlign(),
                                                        i = t.itemSize,
                                                        f = this._getViewData(),
                                                        c = !f.endsText,
                                                        l = !c;
                                                    l && this._renderEndsText(n, f.endsText[0], i);
                                                    r.each(f.viewPieceList, y, this);
                                                    l && this._renderEndsText(n, f.endsText[1], i);
                                                    s.box(t.get("orient"), n, t.get("itemGap"));
                                                    this.renderBackground(n);
                                                    this.positionGroup(n)
                                                },
                                                _enableHoverLink: function(n, t) {
                                                    function i(n) {
                                                        var i = this.visualMapModel;
                                                        i.option.hoverLink && this.api.dispatchAction({
                                                            type: n,
                                                            batch: f.convertDataIndex(i.findTargetDataIndices(t))
                                                        })
                                                    }
                                                    n.on("mouseover", r.bind(i, this, "highlight")).on("mouseout", r.bind(i, this, "downplay"))
                                                },
                                                _getItemAlign: function() {
                                                    var t = this.visualMapModel,
                                                        i = t.option,
                                                        n;
                                                    return i.orient === "vertical" ? f.getItemAlign(t, this.api, t.itemSize) : (n = i.align, n && n !== "auto" || (n = "left"), n)
                                                },
                                                _renderEndsText: function(n, t, i) {
                                                    if (t) {
                                                        var r = new u.Group,
                                                            f = this.visualMapModel.textStyleModel;
                                                        r.add(new u.Text({
                                                            style: {
                                                                x: i[0] / 2,
                                                                y: i[1] / 2,
                                                                textVerticalAlign: "middle",
                                                                textAlign: "center",
                                                                text: t,
                                                                textFont: f.getFont(),
                                                                fill: f.getTextColor()
                                                            }
                                                        }));
                                                        n.add(r)
                                                    }
                                                },
                                                _getViewData: function() {
                                                    var n = this.visualMapModel,
                                                        i = r.map(n.getPieceList(), function(n, t) {
                                                            return {
                                                                piece: n,
                                                                indexInModelPieceList: t
                                                            }
                                                        }),
                                                        t = n.get("text"),
                                                        f = n.get("orient"),
                                                        u = n.get("inverse");
                                                    return (f === "horizontal" ? u : !u) ? i.reverse() : t && (t = t.slice().reverse()), {
                                                        viewPieceList: i,
                                                        endsText: t
                                                    }
                                                },
                                                _createItemSymbol: function(n, t, i) {
                                                    n.add(o.createSymbol(this.getControllerVisual(t, "symbol"), i[0], i[1], i[2], i[3], this.getControllerVisual(t, "color")))
                                                },
                                                _onItemClick: function(n) {
                                                    var u = this.visualMapModel,
                                                        f = u.option,
                                                        t = r.clone(f.selected),
                                                        i = u.getSelectedMapKey(n);
                                                    f.selectedMode === "single" ? (t[i] = !0, r.each(t, function(n, r) {
                                                        t[r] = r === i
                                                    })) : t[i] = !t[i];
                                                    this.api.dispatchAction({
                                                        type: "selectDataRange",
                                                        from: this.uid,
                                                        visualMapId: this.visualMapModel.id,
                                                        selected: t
                                                    })
                                                }
                                            });
                                        n.exports = h
                                    }, function(n, t, i) {
                                        i(347);
                                        i(349);
                                        i(1).registerPreprocessor(function(n) {
                                            n.markPoint = n.markPoint || {}
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(348).extend({
                                            type: "markPoint",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 5,
                                                symbol: "pin",
                                                symbolSize: 50,
                                                tooltip: {
                                                    trigger: "item"
                                                },
                                                label: {
                                                    normal: {
                                                        show: !0,
                                                        position: "inside"
                                                    },
                                                    emphasis: {
                                                        show: !0
                                                    }
                                                },
                                                itemStyle: {
                                                    normal: {
                                                        borderWidth: 2
                                                    }
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function u(n) {
                                            f.defaultEmphasis(n.label, f.LABEL_OPTIONS)
                                        }
                                        var f = i(5),
                                            r = i(4),
                                            h = i(2),
                                            e = i(6),
                                            o = e.addCommas,
                                            c = e.encodeHTML,
                                            s = i(1).extendComponentModel({
                                                type: "marker",
                                                dependencies: ["series", "grid", "polar", "geo"],
                                                init: function(n, t, i, r) {
                                                    if (!0 && this.type === "marker") throw new Error("Marker component is abstract component. Use markLine, markPoint, markArea instead.");
                                                    this.mergeDefaultAndTheme(n, i);
                                                    this.mergeOption(n, i, r.createdBySelf, !0)
                                                },
                                                ifEnableAnimation: function() {
                                                    if (h.node) return !1;
                                                    var n = this.__hostSeries;
                                                    return this.getShallow("animation") && n && n.ifEnableAnimation()
                                                },
                                                mergeOption: function(n, t, i, f) {
                                                    var o = this.constructor,
                                                        e = this.mainType + "Model";
                                                    i || t.eachSeries(function(n) {
                                                        var i = n.get(this.mainType),
                                                            s = n[e];
                                                        if (!i || !i.data) {
                                                            n[e] = null;
                                                            return
                                                        }
                                                        s ? s.mergeOption(i, t, !0) : (f && u(i), r.each(i.data, function(n) {
                                                            n instanceof Array ? (u(n[0]), u(n[1])) : u(n)
                                                        }), s = new o(i, this, t), r.extend(s, {
                                                            mainType: this.mainType,
                                                            seriesIndex: n.seriesIndex,
                                                            name: n.name,
                                                            createdBySelf: !0
                                                        }), s.__hostSeries = n);
                                                        n[e] = s
                                                    }, this)
                                                },
                                                formatTooltip: function(n) {
                                                    var f = this.getData(),
                                                        t = this.getRawValue(n),
                                                        e = r.isArray(t) ? r.map(t, o).join(", ") : o(t),
                                                        u = f.getName(n),
                                                        i = this.name;
                                                    return (t != null || u) && (i += "<br />"), u && (i += c(u), t != null && (i += " : ")), t != null && (i += e), i
                                                },
                                                getData: function() {
                                                    return this._data
                                                },
                                                setData: function(n) {
                                                    this._data = n
                                                }
                                            });
                                        r.mixin(s, f.dataFormatMixin);
                                        n.exports = s
                                    }, function(n, t, i) {
                                        function e(n, t, i) {
                                            var r = t.coordinateSystem;
                                            n.each(function(u) {
                                                var h = n.getItemModel(u),
                                                    e, o = f.parsePercent(h.get("x"), i.getWidth()),
                                                    s = f.parsePercent(h.get("y"), i.getHeight()),
                                                    c, l;
                                                isNaN(o) || isNaN(s) ? t.getMarkerPosition ? e = t.getMarkerPosition(n.getValues(n.dimensions, u)) : r && (c = n.get(r.dimensions[0], u), l = n.get(r.dimensions[1], u), e = r.dataToPoint([c, l])) : e = [o, s];
                                                isNaN(o) || (e[0] = o);
                                                isNaN(s) || (e[1] = s);
                                                n.setItemLayout(u, e)
                                            })
                                        }

                                        function h(n, t, i) {
                                            var o, e, f;
                                            return o = n ? r.map(n && n.dimensions, function(n) {
                                                var i = t.getData().getDimensionInfo(t.coordDimToDataDim(n)[0]) || {};
                                                return i.name = n, i
                                            }) : [{
                                                name: "value",
                                                type: "float"
                                            }], e = new s(o, i), f = r.map(i.get("data"), r.curry(u.dataTransform, t)), n && (f = r.filter(f, r.curry(u.dataFilter, n))), e.initData(f, null, n ? u.dimValueGetter : function(n) {
                                                return n.value
                                            }), e
                                        }
                                        var o = i(104),
                                            r = i(4),
                                            f = i(7),
                                            s = i(97),
                                            u = i(350);
                                        i(351).extend({
                                            type: "markPoint",
                                            updateLayout: function(n, t, i) {
                                                t.eachSeries(function(n) {
                                                    var t = n.markPointModel;
                                                    t && (e(t.getData(), n, i), this.markerGroupMap[n.name].updateLayout(t))
                                                }, this)
                                            },
                                            renderSeries: function(n, t, i, r) {
                                                var l = n.coordinateSystem,
                                                    s = n.name,
                                                    a = n.getData(),
                                                    c = this.markerGroupMap,
                                                    f = c[s],
                                                    u;
                                                f || (f = c[s] = new o);
                                                u = h(l, n, t);
                                                t.setData(u);
                                                e(t.getData(), n, r);
                                                u.each(function(n) {
                                                    var r = u.getItemModel(n),
                                                        i = r.getShallow("symbolSize");
                                                    typeof i == "function" && (i = i(t.getRawValue(n), t.getDataParams(n)));
                                                    u.setItemVisual(n, {
                                                        symbolSize: i,
                                                        color: r.get("itemStyle.normal.color") || a.getVisual("color"),
                                                        symbol: r.getShallow("symbol")
                                                    })
                                                });
                                                f.updateData(u);
                                                this.group.add(f.group);
                                                u.eachItemGraphicEl(function(n) {
                                                    n.traverse(function(n) {
                                                        n.dataModel = t
                                                    })
                                                });
                                                f.__keep = !0;
                                                f.group.silent = t.get("silent") || n.get("silent")
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function l(n) {
                                            return !(isNaN(parseFloat(n.x)) && isNaN(parseFloat(n.y)))
                                        }

                                        function a(n) {
                                            return !isNaN(parseFloat(n.x)) && !isNaN(parseFloat(n.y))
                                        }

                                        function v(n, t, i) {
                                            var r = -1;
                                            do r = Math.max(c.getPrecision(n.get(t, i)), r), n = n.stackedOn; while (n);
                                            return r
                                        }

                                        function u(n, t, i, r, u, f) {
                                            var e = [],
                                                c = o(t, r, n),
                                                s = t.indexOfNearest(r, c, !0),
                                                h;
                                            return e[u] = t.get(i, s, !0), e[f] = t.get(r, s, !0), h = v(t, r, s), h >= 0 && (e[f] = +e[f].toFixed(h)), e
                                        }
                                        var r = i(4),
                                            c = i(7),
                                            s = r.indexOf,
                                            f = r.curry,
                                            e = {
                                                min: f(u, "min"),
                                                max: f(u, "max"),
                                                average: f(u, "average")
                                            },
                                            y = function(n, t) {
                                                var l = n.getData(),
                                                    v = n.coordinateSystem,
                                                    c, i, p, y, f, u, w;
                                                if (t && !a(t) && !r.isArray(t.coord) && v)
                                                    if (c = v.dimensions, i = h(t, l, v, n), t = r.clone(t), t.type && e[t.type] && i.baseAxis && i.valueAxis) p = s(c, i.baseAxis.dim), y = s(c, i.valueAxis.dim), t.coord = e[t.type](l, i.baseDataDim, i.valueDataDim, p, y), t.value = t.coord[y];
                                                    else {
                                                        for (f = [t.xAxis != null ? t.xAxis : t.radiusAxis, t.yAxis != null ? t.yAxis : t.angleAxis], u = 0; u < 2; u++) e[f[u]] && (w = n.coordDimToDataDim(c[u])[0], f[u] = o(l, w, f[u]));
                                                        t.coord = f
                                                    }
                                                return t
                                            },
                                            h = function(n, t, i, r) {
                                                var u = {};
                                                return n.valueIndex != null || n.valueDim != null ? (u.valueDataDim = n.valueIndex != null ? t.getDimension(n.valueIndex) : n.valueDim, u.valueAxis = i.getAxis(r.dataDimToCoordDim(u.valueDataDim)), u.baseAxis = i.getOtherAxis(u.valueAxis), u.baseDataDim = r.coordDimToDataDim(u.baseAxis.dim)[0]) : (u.baseAxis = r.getBaseAxis(), u.valueAxis = i.getOtherAxis(u.baseAxis), u.baseDataDim = r.coordDimToDataDim(u.baseAxis.dim)[0], u.valueDataDim = r.coordDimToDataDim(u.valueAxis.dim)[0]), u
                                            },
                                            p = function(n, t) {
                                                return n && n.containData && t.coord && !l(t) ? n.containData(t.coord) : !0
                                            },
                                            w = function(n, t, i, r) {
                                                return r < 2 ? n.coord && n.coord[r] : n.value
                                            },
                                            o = function(n, t, i) {
                                                if (i === "average") {
                                                    var r = 0,
                                                        u = 0;
                                                    return n.each(t, function(n) {
                                                        isNaN(n) || (r += n, u++)
                                                    }, !0), r / u
                                                }
                                                return n.getDataExtent(t, !0)[i === "max" ? 1 : 0]
                                            };
                                        n.exports = {
                                            dataTransform: y,
                                            dataFilter: p,
                                            dimValueGetter: w,
                                            getAxisInfo: h,
                                            numCalculate: o
                                        }
                                    }, function(n, t, i) {
                                        n.exports = i(1).extendComponentView({
                                            type: "marker",
                                            init: function() {
                                                this.markerGroupMap = {}
                                            },
                                            render: function(n, t, i) {
                                                var r = this.markerGroupMap,
                                                    f;
                                                for (var u in r) r.hasOwnProperty(u) && (r[u].__keep = !1);
                                                f = this.type + "Model";
                                                t.eachSeries(function(n) {
                                                    var r = n[f];
                                                    r && this.renderSeries(n, r, t, i)
                                                }, this);
                                                for (u in r) r.hasOwnProperty(u) && !r[u].__keep && this.group.remove(r[u].group)
                                            },
                                            renderSeries: function() {}
                                        })
                                    }, function(n, t, i) {
                                        i(353);
                                        i(354);
                                        i(1).registerPreprocessor(function(n) {
                                            n.markLine = n.markLine || {}
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(348).extend({
                                            type: "markLine",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 5,
                                                symbol: ["circle", "arrow"],
                                                symbolSize: [8, 16],
                                                precision: 2,
                                                tooltip: {
                                                    trigger: "item"
                                                },
                                                label: {
                                                    normal: {
                                                        show: !0,
                                                        position: "end"
                                                    },
                                                    emphasis: {
                                                        show: !0
                                                    }
                                                },
                                                lineStyle: {
                                                    normal: {
                                                        type: "dashed"
                                                    },
                                                    emphasis: {
                                                        width: 3
                                                    }
                                                },
                                                animationEasing: "linear"
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function f(n) {
                                            return !isNaN(n) && !isFinite(n)
                                        }

                                        function h(n, t, i, r) {
                                            var u = 1 - n,
                                                e = r.dimensions[n];
                                            return f(t[u]) && f(i[u]) && t[n] === i[n] && r.getAxis(e).containData(t[n])
                                        }

                                        function a(n, t) {
                                            if (n.type === "cartesian2d") {
                                                var i = t[0].coord,
                                                    r = t[1].coord;
                                                if (i && r && (h(1, i, r, n) || h(0, i, r, n))) return !0
                                            }
                                            return u.dataFilter(n, t[0]) && u.dataFilter(n, t[1])
                                        }

                                        function o(n, t, i, r, u) {
                                            var o = r.coordinateSystem,
                                                a = n.getItemModel(t),
                                                e, h = s.parsePercent(a.get("x"), u.getWidth()),
                                                c = s.parsePercent(a.get("y"), u.getHeight());
                                            if (isNaN(h) || isNaN(c)) {
                                                if (r.getMarkerPosition) e = r.getMarkerPosition(n.getValues(n.dimensions, t));
                                                else {
                                                    var l = o.dimensions,
                                                        p = n.get(l[0], t),
                                                        w = n.get(l[1], t);
                                                    e = o.dataToPoint([p, w])
                                                }
                                                if (o.type === "cartesian2d") {
                                                    var v = o.getAxis("x"),
                                                        y = o.getAxis("y"),
                                                        l = o.dimensions;
                                                    f(n.get(l[0], t)) ? e[0] = v.toGlobalCoord(v.getExtent()[i ? 0 : 1]) : f(n.get(l[1], t)) && (e[1] = y.toGlobalCoord(y.getExtent()[i ? 0 : 1]))
                                                }
                                                isNaN(h) || (e[0] = h);
                                                isNaN(c) || (e[1] = c)
                                            } else e = [h, c];
                                            n.setItemLayout(t, e)
                                        }

                                        function v(n, t, i) {
                                            var o, h;
                                            o = n ? r.map(n && n.dimensions, function(n) {
                                                var i = t.getData().getDimensionInfo(t.coordDimToDataDim(n)[0]) || {};
                                                return i.name = n, i
                                            }) : [{
                                                name: "value",
                                                type: "float"
                                            }];
                                            var c = new e(o, i),
                                                v = new e(o, i),
                                                s = new e([], i),
                                                f = r.map(i.get("data"), r.curry(l, t, n, i));
                                            return n && (f = r.filter(f, r.curry(a, n))), h = n ? u.dimValueGetter : function(n) {
                                                return n.value
                                            }, c.initData(r.map(f, function(n) {
                                                return n[0]
                                            }), null, h), v.initData(r.map(f, function(n) {
                                                return n[1]
                                            }), null, h), s.initData(r.map(f, function(n) {
                                                return n[2]
                                            })), s.hasItemOption = !0, {
                                                from: c,
                                                to: v,
                                                line: s
                                            }
                                        }
                                        var r = i(4),
                                            e = i(97),
                                            s = i(7),
                                            u = i(350),
                                            c = i(200),
                                            l = function(n, t, i, f) {
                                                var y = n.getData(),
                                                    o = f.type,
                                                    p, s, e, l, v;
                                                if (!r.isArray(f) && (o === "min" || o === "max" || o === "average" || f.xAxis != null || f.yAxis != null)) {
                                                    f.yAxis != null || f.xAxis != null ? (s = f.yAxis != null ? "y" : "x", p = t.getAxis(s), e = r.retrieve(f.yAxis, f.xAxis)) : (l = u.getAxisInfo(f, y, t, n), s = l.valueDataDim, p = l.valueAxis, e = u.numCalculate(y, s, o));
                                                    var a = s === "x" ? 0 : 1,
                                                        w = 1 - a,
                                                        h = r.clone(f),
                                                        c = {};
                                                    h.type = null;
                                                    h.coord = [];
                                                    c.coord = [];
                                                    h.coord[w] = -Infinity;
                                                    c.coord[w] = Infinity;
                                                    v = i.get("precision");
                                                    v >= 0 && typeof e == "number" && (e = +e.toFixed(v));
                                                    h.coord[a] = c.coord[a] = e;
                                                    f = [h, c, {
                                                        type: o,
                                                        valueIndex: f.valueIndex,
                                                        value: e
                                                    }]
                                                }
                                                return f = [u.dataTransform(n, f[0]), u.dataTransform(n, f[1]), r.extend({}, f[2])], f[2].type = f[2].type || "", r.merge(f[2], f[0]), r.merge(f[2], f[1]), f
                                            };
                                        i(351).extend({
                                            type: "markLine",
                                            updateLayout: function(n, t, i) {
                                                t.eachSeries(function(n) {
                                                    var t = n.markLineModel;
                                                    if (t) {
                                                        var u = t.getData(),
                                                            r = t.__from,
                                                            f = t.__to;
                                                        r.each(function(t) {
                                                            o(r, t, !0, n, i);
                                                            o(f, t, !1, n, i)
                                                        });
                                                        u.each(function(n) {
                                                            u.setItemLayout(n, [r.getItemLayout(n), f.getItemLayout(n)])
                                                        });
                                                        this.markerGroupMap[n.name].updateLayout()
                                                    }
                                                }, this)
                                            },
                                            renderSeries: function(n, t, i, u) {
                                                function b(t, i, r) {
                                                    var f = t.getItemModel(i);
                                                    o(t, i, r, n, u);
                                                    t.setItemVisual(i, {
                                                        symbolSize: f.get("symbolSize") || l[r ? 0 : 1],
                                                        symbol: f.get("symbol", !0) || h[r ? 0 : 1],
                                                        color: f.get("itemStyle.normal.color") || d.getVisual("color")
                                                    })
                                                }
                                                var k = n.coordinateSystem,
                                                    p = n.name,
                                                    d = n.getData(),
                                                    w = this.markerGroupMap,
                                                    e = w[p],
                                                    h, l;
                                                e || (e = w[p] = new c);
                                                this.group.add(e.group);
                                                var a = v(k, n, t),
                                                    s = a.from,
                                                    y = a.to,
                                                    f = a.line;
                                                t.__from = s;
                                                t.__to = y;
                                                t.setData(f);
                                                h = t.get("symbol");
                                                l = t.get("symbolSize");
                                                r.isArray(h) || (h = [h, h]);
                                                typeof l == "number" && (l = [l, l]);
                                                a.from.each(function(n) {
                                                    b(s, n, !0);
                                                    b(y, n, !1)
                                                });
                                                f.each(function(n) {
                                                    var t = f.getItemModel(n).get("lineStyle.normal.color");
                                                    f.setItemVisual(n, {
                                                        color: t || s.getItemVisual(n, "color")
                                                    });
                                                    f.setItemLayout(n, [s.getItemLayout(n), y.getItemLayout(n)]);
                                                    f.setItemVisual(n, {
                                                        fromSymbolSize: s.getItemVisual(n, "symbolSize"),
                                                        fromSymbol: s.getItemVisual(n, "symbol"),
                                                        toSymbolSize: y.getItemVisual(n, "symbolSize"),
                                                        toSymbol: y.getItemVisual(n, "symbol")
                                                    })
                                                });
                                                e.updateData(f);
                                                a.line.eachItemGraphicEl(function(n) {
                                                    n.traverse(function(n) {
                                                        n.dataModel = t
                                                    })
                                                });
                                                e.__keep = !0;
                                                e.group.silent = t.get("silent") || n.get("silent")
                                            }
                                        })
                                    }, function(n, t, i) {
                                        i(356);
                                        i(357);
                                        i(1).registerPreprocessor(function(n) {
                                            n.markArea = n.markArea || {}
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(348).extend({
                                            type: "markArea",
                                            defaultOption: {
                                                zlevel: 0,
                                                z: 1,
                                                tooltip: {
                                                    trigger: "item"
                                                },
                                                animation: !1,
                                                label: {
                                                    normal: {
                                                        show: !0,
                                                        position: "top"
                                                    },
                                                    emphasis: {
                                                        show: !0,
                                                        position: "top"
                                                    }
                                                },
                                                itemStyle: {
                                                    normal: {
                                                        borderWidth: 0
                                                    }
                                                }
                                            }
                                        })
                                    }, function(n, t, i) {
                                        function e(n) {
                                            return !isNaN(n) && !isFinite(n)
                                        }

                                        function h(n, t, i) {
                                            var r = 1 - n;
                                            return e(t[r]) && e(i[r])
                                        }

                                        function y(n, t) {
                                            var i = t.coord[0],
                                                r = t.coord[1];
                                            return n.type === "cartesian2d" && i && r && (h(1, i, r, n) || h(0, i, r, n)) ? !0 : f.dataFilter(n, {
                                                coord: i,
                                                x: t.x0,
                                                y: t.y0
                                            }) || f.dataFilter(n, {
                                                coord: r,
                                                x: t.x1,
                                                y: t.y1
                                            })
                                        }

                                        function c(n, t, i, r, u) {
                                            var o = r.coordinateSystem,
                                                v = n.getItemModel(t),
                                                f, h = s.parsePercent(v.get(i[0]), u.getWidth()),
                                                c = s.parsePercent(v.get(i[1]), u.getHeight()),
                                                l, a;
                                            if (isNaN(h) || isNaN(c)) {
                                                if (r.getMarkerPosition ? f = r.getMarkerPosition(n.getValues(i, t)) : (l = n.get(i[0], t), a = n.get(i[1], t), f = o.dataToPoint([l, a], !0)), o.type === "cartesian2d") {
                                                    var y = o.getAxis("x"),
                                                        p = o.getAxis("y"),
                                                        l = n.get(i[0], t),
                                                        a = n.get(i[1], t);
                                                    e(l) ? f[0] = y.toGlobalCoord(y.getExtent()[i[0] === "x0" ? 0 : 1]) : e(a) && (f[1] = p.toGlobalCoord(p.getExtent()[i[1] === "y0" ? 0 : 1]))
                                                }
                                                isNaN(h) || (f[0] = h);
                                                isNaN(c) || (f[1] = c)
                                            } else f = [h, c];
                                            return f
                                        }

                                        function p(n, t, i) {
                                            var f, u, e, s;
                                            return n ? (f = r.map(n && n.dimensions, function(n) {
                                                var i = t.getData().getDimensionInfo(t.coordDimToDataDim(n)[0]) || {};
                                                return i.name = n, i
                                            }), u = new o(r.map(["x0", "y0", "x1", "y1"], function(n, t) {
                                                return {
                                                    name: n,
                                                    type: f[t % 2].type
                                                }
                                            }), i)) : (f = [{
                                                name: "value",
                                                type: "float"
                                            }], u = new o(f, i)), e = r.map(i.get("data"), r.curry(v, t, n, i)), n && (e = r.filter(e, r.curry(y, n))), s = n ? function(n, t, i, r) {
                                                return n.coord[Math.floor(r / 2)][r % 2]
                                            } : function(n) {
                                                return n.value
                                            }, u.initData(e, null, s), u.hasItemOption = !0, u
                                        }
                                        var r = i(4),
                                            o = i(97),
                                            s = i(7),
                                            u = i(43),
                                            a = i(39),
                                            f = i(350),
                                            v = function(n, t, i, u) {
                                                var o = f.dataTransform(n, u[0]),
                                                    s = f.dataTransform(n, u[1]),
                                                    h = r.retrieve,
                                                    c = o.coord,
                                                    l = s.coord,
                                                    e;
                                                return c[0] = h(c[0], -Infinity), c[1] = h(c[1], -Infinity), l[0] = h(l[0], Infinity), l[1] = h(l[1], Infinity), e = r.mergeAll([{}, o, s]), e.coord = [o.coord, s.coord], e.x0 = o.x, e.y0 = o.y, e.x1 = s.x, e.y1 = s.y, e
                                            },
                                            l = [
                                                ["x0", "y0"],
                                                ["x1", "y0"],
                                                ["x1", "y1"],
                                                ["x0", "y1"]
                                            ];
                                        i(351).extend({
                                            type: "markArea",
                                            updateLayout: function(n, t, i) {
                                                t.eachSeries(function(n) {
                                                    var u = n.markAreaModel,
                                                        t;
                                                    u && (t = u.getData(), t.each(function(u) {
                                                        var f = r.map(l, function(r) {
                                                                return c(t, u, r, n, i)
                                                            }),
                                                            e;
                                                        t.setItemLayout(u, f);
                                                        e = t.getItemGraphicEl(u);
                                                        e.setShape("points", f)
                                                    }))
                                                }, this)
                                            },
                                            renderSeries: function(n, t, i, f) {
                                                var v = n.coordinateSystem,
                                                    s = n.name,
                                                    y = n.getData(),
                                                    h = this.markerGroupMap,
                                                    o = h[s],
                                                    e;
                                                o || (o = h[s] = {
                                                    group: new u.Group
                                                });
                                                this.group.add(o.group);
                                                o.__keep = !0;
                                                e = p(v, n, t);
                                                t.setData(e);
                                                e.each(function(t) {
                                                    e.setItemLayout(t, r.map(l, function(i) {
                                                        return c(e, t, i, n, f)
                                                    }));
                                                    e.setItemVisual(t, {
                                                        color: y.getVisual("color")
                                                    })
                                                });
                                                e.diff(o.__data).add(function(n) {
                                                    var t = new u.Polygon({
                                                        shape: {
                                                            points: e.getItemLayout(n)
                                                        }
                                                    });
                                                    e.setItemGraphicEl(n, t);
                                                    o.group.add(t)
                                                }).update(function(n, i) {
                                                    var r = o.__data.getItemGraphicEl(i);
                                                    u.updateProps(r, {
                                                        shape: {
                                                            points: e.getItemLayout(n)
                                                        }
                                                    }, t, n);
                                                    o.group.add(r);
                                                    e.setItemGraphicEl(n, r)
                                                }).remove(function(n) {
                                                    var t = o.__data.getItemGraphicEl(n);
                                                    o.group.remove(t)
                                                }).execute();
                                                e.eachItemGraphicEl(function(n, i) {
                                                    var f = e.getItemModel(i),
                                                        c = f.getModel("label.normal"),
                                                        l = f.getModel("label.emphasis"),
                                                        o = e.getItemVisual(i, "color"),
                                                        s, h;
                                                    n.useStyle(r.defaults(f.getModel("itemStyle.normal").getItemStyle(), {
                                                        fill: a.modifyAlpha(o, .4),
                                                        stroke: o
                                                    }));
                                                    n.hoverStyle = f.getModel("itemStyle.normal").getItemStyle();
                                                    s = e.getName(i) || "";
                                                    h = o || n.style.fill;
                                                    u.setText(n.style, c, h);
                                                    n.style.text = r.retrieve(t.getFormattedLabel(i, "normal"), s);
                                                    u.setText(n.hoverStyle, l, h);
                                                    n.hoverStyle.text = r.retrieve(t.getFormattedLabel(i, "emphasis"), s);
                                                    u.setHoverStyle(n, {});
                                                    n.dataModel = t
                                                });
                                                o.__data = e;
                                                o.group.silent = t.get("silent") || n.get("silent")
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(1);
                                        r.registerPreprocessor(i(359));
                                        i(360);
                                        i(361);
                                        i(362);
                                        i(364)
                                    }, function(n, t, i) {
                                        function e(n) {
                                            var i = n.type,
                                                e = {
                                                    number: "value",
                                                    time: "time"
                                                },
                                                t;
                                            e[i] && (n.axisType = e[i], delete n.type);
                                            f(n);
                                            r(n, "controlPosition") && (t = n.controlStyle || (n.controlStyle = {}), r(t, "position") || (t.position = n.controlPosition), t.position !== "none" || r(t, "show") || (t.show = !1, delete t.position), delete n.controlPosition);
                                            u.each(n.data || [], function(n) {
                                                u.isObject(n) && !u.isArray(n) && (!r(n, "value") && r(n, "name") && (n.value = n.name), f(n))
                                            })
                                        }

                                        function f(n) {
                                            var f = n.itemStyle || (n.itemStyle = {}),
                                                i = f.emphasis || (f.emphasis = {}),
                                                t = n.label || n.label || {},
                                                e = t.normal || (t.normal = {}),
                                                o = {
                                                    normal: 1,
                                                    emphasis: 1
                                                };
                                            u.each(t, function(n, t) {
                                                o[t] || r(e, t) || (e[t] = n)
                                            });
                                            i.label && !r(t, "emphasis") && (t.emphasis = i.label, delete i.label)
                                        }

                                        function r(n, t) {
                                            return n.hasOwnProperty(t)
                                        }
                                        var u = i(4);
                                        n.exports = function(n) {
                                            var t = n && n.timeline;
                                            u.isArray(t) || (t = t ? [t] : []);
                                            u.each(t, function(n) {
                                                n && e(n)
                                            })
                                        }
                                    }, function(n, t, i) {
                                        i(19).registerSubTypeDefaulter("timeline", function() {
                                            return "slider"
                                        })
                                    }, function(n, t, i) {
                                        var r = i(1),
                                            u = i(4);
                                        r.registerAction({
                                            type: "timelineChange",
                                            event: "timelineChanged",
                                            update: "prepareAndUpdate"
                                        }, function(n, t) {
                                            var i = t.getComponent("timeline");
                                            return i && n.currentIndex != null && (i.setCurrentIndex(n.currentIndex), !i.get("loop", !0) && i.isIndexMax() && i.setPlayState(!1)), t.resetOption("timeline"), u.defaults({
                                                currentIndex: i.option.currentIndex
                                            }, n)
                                        });
                                        r.registerAction({
                                            type: "timelinePlayChange",
                                            event: "timelinePlayChanged",
                                            update: "update"
                                        }, function(n, t) {
                                            var i = t.getComponent("timeline");
                                            i && n.playState != null && i.setPlayState(n.playState)
                                        })
                                    }, function(n, t, i) {
                                        var u = i(363),
                                            f = i(4),
                                            e = i(5),
                                            r = u.extend({
                                                type: "timeline.slider",
                                                defaultOption: {
                                                    backgroundColor: "rgba(0,0,0,0)",
                                                    borderColor: "#ccc",
                                                    borderWidth: 0,
                                                    orient: "horizontal",
                                                    inverse: !1,
                                                    tooltip: {
                                                        trigger: "item"
                                                    },
                                                    symbol: "emptyCircle",
                                                    symbolSize: 10,
                                                    lineStyle: {
                                                        show: !0,
                                                        width: 2,
                                                        color: "#304654"
                                                    },
                                                    label: {
                                                        position: "auto",
                                                        normal: {
                                                            show: !0,
                                                            interval: "auto",
                                                            rotate: 0,
                                                            textStyle: {
                                                                color: "#304654"
                                                            }
                                                        },
                                                        emphasis: {
                                                            show: !0,
                                                            textStyle: {
                                                                color: "#c23531"
                                                            }
                                                        }
                                                    },
                                                    itemStyle: {
                                                        normal: {
                                                            color: "#304654",
                                                            borderWidth: 1
                                                        },
                                                        emphasis: {
                                                            color: "#c23531"
                                                        }
                                                    },
                                                    checkpointStyle: {
                                                        symbol: "circle",
                                                        symbolSize: 13,
                                                        color: "#c23531",
                                                        borderWidth: 5,
                                                        borderColor: "rgba(194,53,49, 0.5)",
                                                        animation: !0,
                                                        animationDuration: 300,
                                                        animationEasing: "quinticInOut"
                                                    },
                                                    controlStyle: {
                                                        show: !0,
                                                        showPlayBtn: !0,
                                                        showPrevBtn: !0,
                                                        showNextBtn: !0,
                                                        itemSize: 22,
                                                        itemGap: 12,
                                                        position: "left",
                                                        playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
                                                        stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
                                                        nextIcon: "path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z",
                                                        prevIcon: "path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z",
                                                        normal: {
                                                            color: "#304654",
                                                            borderColor: "#304654",
                                                            borderWidth: 1
                                                        },
                                                        emphasis: {
                                                            color: "#c23531",
                                                            borderColor: "#c23531",
                                                            borderWidth: 2
                                                        }
                                                    },
                                                    data: []
                                                }
                                            });
                                        f.mixin(r, e.dataFormatMixin);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        var f = i(19),
                                            e = i(97),
                                            r = i(4),
                                            o = i(5),
                                            u = f.extend({
                                                type: "timeline",
                                                layoutMode: "box",
                                                defaultOption: {
                                                    zlevel: 0,
                                                    z: 4,
                                                    show: !0,
                                                    axisType: "time",
                                                    realtime: !0,
                                                    left: "20%",
                                                    top: null,
                                                    right: "20%",
                                                    bottom: 0,
                                                    width: null,
                                                    height: 40,
                                                    padding: 5,
                                                    controlPosition: "left",
                                                    autoPlay: !1,
                                                    rewind: !1,
                                                    loop: !0,
                                                    playInterval: 2e3,
                                                    currentIndex: 0,
                                                    itemStyle: {
                                                        normal: {},
                                                        emphasis: {}
                                                    },
                                                    label: {
                                                        normal: {
                                                            textStyle: {
                                                                color: "#000"
                                                            }
                                                        },
                                                        emphasis: {}
                                                    },
                                                    data: []
                                                },
                                                init: function(n, t, i) {
                                                    this._data;
                                                    this._names;
                                                    this.mergeDefaultAndTheme(n, i);
                                                    this._initData()
                                                },
                                                mergeOption: function() {
                                                    u.superApply(this, "mergeOption", arguments);
                                                    this._initData()
                                                },
                                                setCurrentIndex: function(n) {
                                                    n == null && (n = this.option.currentIndex);
                                                    var t = this._data.count();
                                                    this.option.loop ? n = (n % t + t) % t : (n >= t && (n = t - 1), n < 0 && (n = 0));
                                                    this.option.currentIndex = n
                                                },
                                                getCurrentIndex: function() {
                                                    return this.option.currentIndex
                                                },
                                                isIndexMax: function() {
                                                    return this.getCurrentIndex() >= this._data.count() - 1
                                                },
                                                setPlayState: function(n) {
                                                    this.option.autoPlay = !!n
                                                },
                                                getPlayState: function() {
                                                    return !!this.option.autoPlay
                                                },
                                                _initData: function() {
                                                    var i = this.option,
                                                        n = i.data || [],
                                                        u = i.axisType,
                                                        f = this._names = [],
                                                        t, s, h;
                                                    u === "category" && (t = [], r.each(n, function(n, i) {
                                                        var u = o.getDataItemValue(n),
                                                            e;
                                                        r.isObject(n) ? (e = r.clone(n), e.value = i) : e = i;
                                                        t.push(e);
                                                        !r.isString(u) && (u == null || isNaN(u)) && (u = "");
                                                        f.push(u + "")
                                                    }), n = t);
                                                    s = {
                                                        category: "ordinal",
                                                        time: "time"
                                                    }[u] || "number";
                                                    h = this._data = new e([{
                                                        name: "value",
                                                        type: s
                                                    }], this);
                                                    h.initData(n, f)
                                                },
                                                getData: function() {
                                                    return this._data
                                                },
                                                getCategories: function() {
                                                    if (this.get("axisType") === "category") return this._names.slice()
                                                }
                                            });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function g(n, t) {
                                            return v.getLayoutRect(n.getBoxLayoutParams(), {
                                                width: t.getWidth(),
                                                height: t.getHeight()
                                            }, n.get("padding"))
                                        }

                                        function nt(n, t, i, u) {
                                            return r.makePath(n.get(t).replace(/^path:\/\//, ""), f.clone(u || {}), new b(i[0], i[1], i[2], i[3]), "center")
                                        }

                                        function l(n, t, i, r, u, e) {
                                            var l = t.get("color"),
                                                a, v, s, h, c, y;
                                            return u ? (u.setColor(l), i.add(u), e && e.onUpdate(u)) : (a = n.get("symbol"), u = w.createSymbol(a, -1, -1, 2, 2, l), u.setStyle("strokeNoScale", !0), i.add(u), e && e.onCreate(u)), v = t.getItemStyle(["color", "symbol", "symbolSize"]), u.setStyle(v), r = f.merge({
                                                rectHover: !0,
                                                z2: 100
                                            }, r, !0), s = n.get("symbolSize"), s = s instanceof Array ? s.slice() : [+s, +s], s[0] /= 2, s[1] /= 2, r.scale = s, h = n.get("symbolOffset"), h && (c = r.position = r.position || [0, 0], c[0] += o.parsePercent(h[0], s[0]), c[1] += o.parsePercent(h[1], s[1])), y = n.get("symbolRotate"), r.rotation = (y || 0) * Math.PI / 180 || 0, u.attr(r), u.updateTransform(), u
                                        }

                                        function a(n, t, i, r, u) {
                                            if (!n.dragging) {
                                                var f = r.getModel("checkpointStyle"),
                                                    e = i.dataToCoord(r.getData().get(["value"], t));
                                                u || !f.get("animation", !0) ? n.attr({
                                                    position: [e, 0]
                                                }) : (n.stopAnimation(!0), n.animateTo({
                                                    position: [e, 0]
                                                }, f.get("animationDuration", !0), f.get("animationEasing", !0)))
                                            }
                                        }
                                        var f = i(4),
                                            r = i(43),
                                            v = i(21),
                                            y = i(365),
                                            p = i(366),
                                            w = i(106),
                                            c = i(114),
                                            b = i(9),
                                            e = i(11),
                                            o = i(7),
                                            k = i(6),
                                            d = k.encodeHTML,
                                            u = f.bind,
                                            s = f.each,
                                            h = Math.PI;
                                        n.exports = y.extend({
                                            type: "timeline.slider",
                                            init: function(n, t) {
                                                this.api = t;
                                                this._axis;
                                                this._viewRect;
                                                this._timer;
                                                this._currentPointer;
                                                this._mainGroup;
                                                this._labelGroup
                                            },
                                            render: function(n, t, i) {
                                                if (this.model = n, this.api = i, this.ecModel = t, this.group.removeAll(), n.get("show", !0)) {
                                                    var r = this._layout(n, i),
                                                        f = this._createGroup("mainGroup"),
                                                        e = this._createGroup("labelGroup"),
                                                        u = this._axis = this._createAxis(r, n);
                                                    n.formatTooltip = function(n) {
                                                        return d(u.scale.getLabel(n))
                                                    };
                                                    s(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(t) {
                                                        this["_render" + t](r, f, u, n)
                                                    }, this);
                                                    this._renderAxisLabel(r, e, u, n);
                                                    this._position(r, n)
                                                }
                                                this._doPlayStop()
                                            },
                                            remove: function() {
                                                this._clearTimer();
                                                this.group.removeAll()
                                            },
                                            dispose: function() {
                                                this._clearTimer()
                                            },
                                            _layout: function(n, t) {
                                                var i = n.get("label.normal.position"),
                                                    u = n.get("orient"),
                                                    f = g(n, t);
                                                i == null || i === "auto" ? i = u === "horizontal" ? f.y + f.height / 2 < t.getHeight() / 2 ? "-" : "+" : f.x + f.width / 2 < t.getWidth() / 2 ? "+" : "-" : isNaN(i) && (i = {
                                                    horizontal: {
                                                        top: "-",
                                                        bottom: "+"
                                                    },
                                                    vertical: {
                                                        left: "-",
                                                        right: "+"
                                                    }
                                                }[u][i]);
                                                var rt = {
                                                        horizontal: "center",
                                                        vertical: i >= 0 || i === "+" ? "left" : "right"
                                                    },
                                                    ut = {
                                                        horizontal: i >= 0 || i === "+" ? "top" : "bottom",
                                                        vertical: "middle"
                                                    },
                                                    ft = {
                                                        horizontal: 0,
                                                        vertical: h / 2
                                                    },
                                                    b = u === "vertical" ? f.height : f.width,
                                                    r = n.getModel("controlStyle"),
                                                    s = r.get("show"),
                                                    c = s ? r.get("itemSize") : 0,
                                                    k = s ? r.get("itemGap") : 0,
                                                    o = c + k,
                                                    a = n.get("label.normal.rotate") || 0;
                                                a = a * h / 180;
                                                var v, y, p, w, d = r.get("position", !0),
                                                    s = r.get("show", !0),
                                                    nt = s && r.get("showPlayBtn", !0),
                                                    tt = s && r.get("showPrevBtn", !0),
                                                    it = s && r.get("showNextBtn", !0),
                                                    l = 0,
                                                    e = b;
                                                return d === "left" || d === "bottom" ? (nt && (v = [0, 0], l += o), tt && (y = [l, 0], l += o), it && (p = [e - c, 0], e -= o)) : (nt && (v = [e - c, 0], e -= o), tt && (y = [0, 0], l += o), it && (p = [e - c, 0], e -= o)), w = [l, e], n.get("inverse") && w.reverse(), {
                                                    viewRect: f,
                                                    mainLength: b,
                                                    orient: u,
                                                    rotation: ft[u],
                                                    labelRotation: a,
                                                    labelPosOpt: i,
                                                    labelAlign: rt[u],
                                                    labelBaseline: ut[u],
                                                    playPosition: v,
                                                    prevBtnPosition: y,
                                                    nextBtnPosition: p,
                                                    axisExtent: w,
                                                    controlSize: c,
                                                    controlGap: k
                                                }
                                            },
                                            _position: function(n) {
                                                function b(n) {
                                                    var t = n.position;
                                                    n.origin = [r[0][0] - t[0], r[1][0] - t[1]]
                                                }

                                                function a(n) {
                                                    return [
                                                        [n.x, n.x + n.width],
                                                        [n.y, n.y + n.height]
                                                    ]
                                                }

                                                function v(n, t, i, r, u) {
                                                    n[r] += i[r][u] - t[r][u]
                                                }
                                                var u = this._mainGroup,
                                                    f = this._labelGroup,
                                                    t = n.viewRect,
                                                    s, c;
                                                if (n.orient === "vertical") {
                                                    var i = e.create(),
                                                        y = t.x,
                                                        p = t.y + t.height;
                                                    e.translate(i, i, [-y, -p]);
                                                    e.rotate(i, i, -h / 2);
                                                    e.translate(i, i, [y, p]);
                                                    t = t.clone();
                                                    t.applyTransform(i)
                                                }
                                                var r = a(t),
                                                    w = a(u.getBoundingRect()),
                                                    k = a(f.getBoundingRect()),
                                                    o = u.position,
                                                    l = f.position;
                                                l[0] = o[0] = r[0][0];
                                                s = n.labelPosOpt;
                                                isNaN(s) ? (c = s === "+" ? 0 : 1, v(o, w, r, 1, c), v(l, k, r, 1, 1 - c)) : (c = s >= 0 ? 0 : 1, v(o, w, r, 1, c), l[1] = o[1] + s);
                                                u.attr("position", o);
                                                f.attr("position", l);
                                                u.rotation = f.rotation = n.rotation;
                                                b(u);
                                                b(f)
                                            },
                                            _createAxis: function(n, t) {
                                                var u = t.getData(),
                                                    f = t.get("axisType"),
                                                    i = c.createScaleByModel(t, f),
                                                    e = u.getDataExtent("value"),
                                                    r;
                                                return i.setExtent(e[0], e[1]), this._customizeScale(i, u), i.niceTicks(), r = new p("value", i, n.axisExtent, f), r.model = t, r
                                            },
                                            _customizeScale: function(n, t) {
                                                n.getTicks = function() {
                                                    return t.mapArray(["value"], function(n) {
                                                        return n
                                                    })
                                                };
                                                n.getTicksLabels = function() {
                                                    return f.map(this.getTicks(), n.getLabel, n)
                                                }
                                            },
                                            _createGroup: function(n) {
                                                var t = this["_" + n] = new r.Group;
                                                return this.group.add(t), t
                                            },
                                            _renderAxisLine: function(n, t, i, u) {
                                                var e = i.getExtent();
                                                u.get("lineStyle.show") && t.add(new r.Line({
                                                    shape: {
                                                        x1: e[0],
                                                        y1: 0,
                                                        x2: e[1],
                                                        y2: 0
                                                    },
                                                    style: f.extend({
                                                        lineCap: "round"
                                                    }, u.getModel("lineStyle").getLineStyle()),
                                                    silent: !0,
                                                    z2: 1
                                                }))
                                            },
                                            _renderAxisTick: function(n, t, i, f) {
                                                var e = f.getData(),
                                                    o = i.scale.getTicks();
                                                s(o, function(n, o) {
                                                    var c = i.dataToCoord(n),
                                                        h = e.getItemModel(o),
                                                        a = h.getModel("itemStyle.normal"),
                                                        v = h.getModel("itemStyle.emphasis"),
                                                        y = {
                                                            position: [c, 0],
                                                            onclick: u(this._changeTimeline, this, o)
                                                        },
                                                        s = l(h, a, t, y);
                                                    r.setHoverStyle(s, v.getItemStyle());
                                                    h.get("tooltip") ? (s.dataIndex = o, s.dataModel = f) : s.dataIndex = s.dataModel = null
                                                }, this)
                                            },
                                            _renderAxisLabel: function(n, t, i, f) {
                                                var e = f.getModel("label.normal");
                                                if (e.get("show")) {
                                                    var o = f.getData(),
                                                        h = i.scale.getTicks(),
                                                        l = c.getFormattedLabels(i, e.get("formatter")),
                                                        a = i.getLabelInterval();
                                                    s(h, function(f, e) {
                                                        if (!i.isLabelIgnored(e, a)) {
                                                            var s = o.getItemModel(e),
                                                                h = s.getModel("label.normal.textStyle"),
                                                                v = s.getModel("label.emphasis.textStyle"),
                                                                y = i.dataToCoord(f),
                                                                c = new r.Text({
                                                                    style: {
                                                                        text: l[e],
                                                                        textAlign: n.labelAlign,
                                                                        textVerticalAlign: n.labelBaseline,
                                                                        textFont: h.getFont(),
                                                                        fill: h.getTextColor()
                                                                    },
                                                                    position: [y, 0],
                                                                    rotation: n.labelRotation - n.rotation,
                                                                    onclick: u(this._changeTimeline, this, e),
                                                                    silent: !1
                                                                });
                                                            t.add(c);
                                                            r.setHoverStyle(c, v.getItemStyle())
                                                        }
                                                    }, this)
                                                }
                                            },
                                            _renderControl: function(n, t, i, f) {
                                                function o(n, i, u, o) {
                                                    if (n) {
                                                        var h = {
                                                                position: n,
                                                                origin: [e / 2, 0],
                                                                rotation: o ? -c : 0,
                                                                rectHover: !0,
                                                                style: l,
                                                                onclick: u
                                                            },
                                                            s = nt(f, i, v, h);
                                                        t.add(s);
                                                        r.setHoverStyle(s, a)
                                                    }
                                                }
                                                var e = n.controlSize,
                                                    c = n.rotation,
                                                    l = f.getModel("controlStyle.normal").getItemStyle(),
                                                    a = f.getModel("controlStyle.emphasis").getItemStyle(),
                                                    v = [0, -e / 2, e, e],
                                                    s = f.getPlayState(),
                                                    h = f.get("inverse", !0);
                                                o(n.nextBtnPosition, "controlStyle.nextIcon", u(this._changeTimeline, this, h ? "-" : "+"));
                                                o(n.prevBtnPosition, "controlStyle.prevIcon", u(this._changeTimeline, this, h ? "+" : "-"));
                                                o(n.playPosition, "controlStyle." + (s ? "stopIcon" : "playIcon"), u(this._handlePlayClick, this, !s), !0)
                                            },
                                            _renderCurrentPointer: function(n, t, i, r) {
                                                var s = r.getData(),
                                                    e = r.getCurrentIndex(),
                                                    o = s.getItemModel(e).getModel("checkpointStyle"),
                                                    f = this,
                                                    h = {
                                                        onCreate: function(n) {
                                                            n.draggable = !0;
                                                            n.drift = u(f._handlePointerDrag, f);
                                                            n.ondragend = u(f._handlePointerDragend, f);
                                                            a(n, e, i, r, !0)
                                                        },
                                                        onUpdate: function(n) {
                                                            a(n, e, i, r)
                                                        }
                                                    };
                                                this._currentPointer = l(o, o, this._mainGroup, {}, this._currentPointer, h)
                                            },
                                            _handlePlayClick: function(n) {
                                                this._clearTimer();
                                                this.api.dispatchAction({
                                                    type: "timelinePlayChange",
                                                    playState: n,
                                                    from: this.uid
                                                })
                                            },
                                            _handlePointerDrag: function(n, t, i) {
                                                this._clearTimer();
                                                this._pointerChangeTimeline([i.offsetX, i.offsetY])
                                            },
                                            _handlePointerDragend: function(n) {
                                                this._pointerChangeTimeline([n.offsetX, n.offsetY], !0)
                                            },
                                            _pointerChangeTimeline: function(n, t) {
                                                var i = this._toAxisCoord(n)[0],
                                                    e = this._axis,
                                                    r = o.asc(e.getExtent().slice()),
                                                    u, f;
                                                i > r[1] && (i = r[1]);
                                                i < r[0] && (i = r[0]);
                                                this._currentPointer.position[0] = i;
                                                this._currentPointer.dirty();
                                                u = this._findNearestTick(i);
                                                f = this.model;
                                                (t || u !== f.getCurrentIndex() && f.get("realtime")) && this._changeTimeline(u)
                                            },
                                            _doPlayStop: function() {
                                                function n() {
                                                    var n = this.model;
                                                    this._changeTimeline(n.getCurrentIndex() + (n.get("rewind", !0) ? -1 : 1))
                                                }
                                                this._clearTimer();
                                                this.model.getPlayState() && (this._timer = setTimeout(u(n, this), this.model.get("playInterval")))
                                            },
                                            _toAxisCoord: function(n) {
                                                var t = this._mainGroup.getLocalTransform();
                                                return r.applyTransform(n, t, !0)
                                            },
                                            _findNearestTick: function(n) {
                                                var r = this.model.getData(),
                                                    t = Infinity,
                                                    i, u = this._axis;
                                                return r.each(["value"], function(r, f) {
                                                    var o = u.dataToCoord(r),
                                                        e = Math.abs(o - n);
                                                    e < t && (t = e, i = f)
                                                }), i
                                            },
                                            _clearTimer: function() {
                                                this._timer && (clearTimeout(this._timer), this._timer = null)
                                            },
                                            _changeTimeline: function(n) {
                                                var t = this.model.getCurrentIndex();
                                                n === "+" ? n = t + 1 : n === "-" && (n = t - 1);
                                                this.api.dispatchAction({
                                                    type: "timelineChange",
                                                    currentIndex: n,
                                                    from: this.uid
                                                })
                                            }
                                        })
                                    }, function(n, t, i) {
                                        var r = i(29);
                                        n.exports = r.extend({
                                            type: "timeline"
                                        })
                                    }, function(n, t, i) {
                                        var u = i(4),
                                            f = i(123),
                                            e = i(114),
                                            r = function(n, t, i, r) {
                                                f.call(this, n, t, i);
                                                this.type = r || "value";
                                                this._autoLabelInterval;
                                                this.model = null
                                            };
                                        r.prototype = {
                                            constructor: r,
                                            getLabelInterval: function() {
                                                var i = this.model,
                                                    t = i.getModel("label.normal"),
                                                    n = t.get("interval");
                                                return n != null && n != "auto" ? n : (n = this._autoLabelInterval, n || (n = this._autoLabelInterval = e.getAxisLabelInterval(u.map(this.scale.getTicks(), this.dataToCoord, this), e.getFormattedLabels(this, t.get("formatter")), t.getModel("textStyle").getFont(), i.get("orient") === "horizontal")), n)
                                            },
                                            isLabelIgnored: function(n) {
                                                if (this.type === "category") {
                                                    var t = this.getLabelInterval();
                                                    return typeof t == "function" && !t(n, this.scale.getLabel(n)) || n % (t + 1)
                                                }
                                            }
                                        };
                                        u.inherits(r, f);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        i(368);
                                        i(369);
                                        i(371);
                                        i(372);
                                        i(373);
                                        i(374);
                                        i(379)
                                    }, function(n, t, i) {
                                        var f = i(315),
                                            r = i(4),
                                            u = i(1).extendComponentModel({
                                                type: "toolbox",
                                                layoutMode: {
                                                    type: "box",
                                                    ignoreSize: !0
                                                },
                                                mergeDefaultAndTheme: function() {
                                                    u.superApply(this, "mergeDefaultAndTheme", arguments);
                                                    r.each(this.option.feature, function(n, t) {
                                                        var i = f.get(t);
                                                        i && r.merge(n, i.defaultOption)
                                                    })
                                                },
                                                defaultOption: {
                                                    show: !0,
                                                    z: 6,
                                                    zlevel: 0,
                                                    orient: "horizontal",
                                                    left: "right",
                                                    top: "top",
                                                    backgroundColor: "transparent",
                                                    borderColor: "#ccc",
                                                    borderWidth: 0,
                                                    padding: 5,
                                                    itemSize: 15,
                                                    itemGap: 8,
                                                    showTitle: !0,
                                                    iconStyle: {
                                                        normal: {
                                                            borderColor: "#666",
                                                            color: "none"
                                                        },
                                                        emphasis: {
                                                            borderColor: "#3E98C5"
                                                        }
                                                    }
                                                }
                                            });
                                        n.exports = u
                                    }, function(n, t, i) {
                                        (function() {
                                            function h(n) {
                                                return n.indexOf("my") === 0
                                            }
                                            var f = i(315),
                                                t = i(4),
                                                r = i(43),
                                                e = i(12),
                                                o = i(98),
                                                u = i(278),
                                                s = i(8);
                                            n.exports = i(1).extendComponentView({
                                                type: "toolbox",
                                                render: function(n, i, c, l) {
                                                    function p(t, r) {
                                                        var o = y[t],
                                                            a = y[r],
                                                            p = w[o],
                                                            s = new e(p, n, n.ecModel),
                                                            u, v;
                                                        if (o && !a) {
                                                            if (h(o)) u = {
                                                                model: s,
                                                                onclick: s.option.onclick,
                                                                featureName: o
                                                            };
                                                            else {
                                                                if (v = f.get(o), !v) return;
                                                                u = new v(s, i, c)
                                                            }
                                                            b[o] = u
                                                        } else {
                                                            if (u = b[a], !u) return;
                                                            u.model = s;
                                                            u.ecModel = i;
                                                            u.api = c
                                                        }
                                                        if (!o && a) {
                                                            u.dispose && u.dispose(i, c);
                                                            return
                                                        }
                                                        if (!s.get("show") || u.unusable) {
                                                            u.remove && u.remove(i, c);
                                                            return
                                                        }
                                                        k(s, u, o);
                                                        s.setIconStatus = function(n, t) {
                                                            var i = this.option,
                                                                r = this.iconPaths;
                                                            i.iconStatus = i.iconStatus || {};
                                                            i.iconStatus[n] = t;
                                                            r[n] && r[n].trigger(t)
                                                        };
                                                        u.render && u.render(s, i, c, l)
                                                    }

                                                    function k(u, f, e) {
                                                        var h = u.getModel("iconStyle"),
                                                            o = f.getIcons ? f.getIcons() : u.get("icon"),
                                                            s = u.get("title") || {},
                                                            l, y, p;
                                                        typeof o == "string" && (l = o, y = s, o = {}, s = {}, o[e] = l, s[e] = y);
                                                        p = u.iconPaths = {};
                                                        t.each(o, function(e, o) {
                                                            var w = h.getModel("normal").getItemStyle(),
                                                                b = h.getModel("emphasis").getItemStyle(),
                                                                y = {
                                                                    x: -v / 2,
                                                                    y: -v / 2,
                                                                    width: v,
                                                                    height: v
                                                                },
                                                                l = e.indexOf("image://") === 0 ? (y.image = e.slice(8), new r.Image({
                                                                    style: y
                                                                })) : r.makePath(e.replace("path://", ""), {
                                                                    style: w,
                                                                    hoverStyle: b,
                                                                    rectHover: !0
                                                                }, y, "center");
                                                            if (r.setHoverStyle(l), n.get("showTitle")) {
                                                                l.__title = s[o];
                                                                l.on("mouseover", function() {
                                                                    var n = h.getModel("emphasis").getItemStyle();
                                                                    l.setStyle({
                                                                        text: s[o],
                                                                        textPosition: n.textPosition || "bottom",
                                                                        textFill: n.fill || n.stroke || "#000",
                                                                        textAlign: n.textAlign || "center"
                                                                    })
                                                                }).on("mouseout", function() {
                                                                    l.setStyle({
                                                                        textFill: null
                                                                    })
                                                                })
                                                            }
                                                            l.trigger(u.get("iconStatus." + o) || "normal");
                                                            a.add(l);
                                                            l.on("click", t.bind(f.onclick, f, i, c, o));
                                                            p[o] = l
                                                        })
                                                    }
                                                    var a = this.group;
                                                    if (a.removeAll(), n.get("show")) {
                                                        var v = +n.get("itemSize"),
                                                            w = n.get("feature") || {},
                                                            b = this._features || (this._features = {}),
                                                            y = [];
                                                        t.each(w, function(n, t) {
                                                            y.push(t)
                                                        });
                                                        new o(this._featureNames || [], y).add(p).update(p).remove(t.curry(p, null)).execute();
                                                        this._featureNames = y;
                                                        u.layout(a, n, c);
                                                        u.addBackground(a, n);
                                                        a.eachChild(function(n) {
                                                            var u = n.__title,
                                                                t = n.hoverStyle,
                                                                r;
                                                            if (t && u) {
                                                                var i = s.getBoundingRect(u, t.font),
                                                                    f = n.position[0] + a.position[0],
                                                                    o = n.position[1] + a.position[1] + v,
                                                                    e = !1;
                                                                o + i.height > c.getHeight() && (t.textPosition = "top", e = !0);
                                                                r = e ? -5 - i.height : v + 8;
                                                                f + i.width / 2 > c.getWidth() ? (t.textPosition = ["100%", r], t.textAlign = "right") : f - i.width / 2 < 0 && (t.textPosition = [0, r], t.textAlign = "left")
                                                            }
                                                        })
                                                    }
                                                },
                                                updateView: function(n, i, r, u) {
                                                    t.each(this._features, function(n) {
                                                        n.updateView && n.updateView(n.model, i, r, u)
                                                    })
                                                },
                                                updateLayout: function(n, i, r, u) {
                                                    t.each(this._features, function(n) {
                                                        n.updateLayout && n.updateLayout(n.model, i, r, u)
                                                    })
                                                },
                                                remove: function(n, i) {
                                                    t.each(this._features, function(t) {
                                                        t.remove && t.remove(n, i)
                                                    });
                                                    this.group.removeAll()
                                                },
                                                dispose: function(n, i) {
                                                    t.each(this._features, function(t) {
                                                        t.dispose && t.dispose(n, i)
                                                    })
                                                }
                                            })
                                        }).call(t, i(370))
                                    }, function(n) {
                                        function l() {
                                            f && r && (f = !1, r.length ? i = r.concat(i) : o = -1, i.length && h())
                                        }

                                        function h() {
                                            var t, n;
                                            if (!f) {
                                                for (t = e(l), f = !0, n = i.length; n;) {
                                                    for (r = i, i = []; ++o < n;) r && r[o].run();
                                                    o = -1;
                                                    n = i.length
                                                }
                                                r = null;
                                                f = !1;
                                                s(t)
                                            }
                                        }

                                        function c(n, t) {
                                            this.fun = n;
                                            this.array = t
                                        }

                                        function u() {}
                                        var t = n.exports = {},
                                            e, s;
                                        (function() {
                                            try {
                                                e = setTimeout
                                            } catch (n) {
                                                e = function() {
                                                    throw new Error("setTimeout is not defined");
                                                }
                                            }
                                            try {
                                                s = clearTimeout
                                            } catch (n) {
                                                s = function() {
                                                    throw new Error("clearTimeout is not defined");
                                                }
                                            }
                                        })();
                                        var i = [],
                                            f = !1,
                                            r, o = -1;
                                        t.nextTick = function(n) {
                                            var r = new Array(arguments.length - 1),
                                                t;
                                            if (arguments.length > 1)
                                                for (t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
                                            i.push(new c(n, r));
                                            i.length !== 1 || f || e(h, 0)
                                        };
                                        c.prototype.run = function() {
                                            this.fun.apply(null, this.array)
                                        };
                                        t.title = "browser";
                                        t.browser = !0;
                                        t.env = {};
                                        t.argv = [];
                                        t.version = "";
                                        t.versions = {};
                                        t.on = u;
                                        t.addListener = u;
                                        t.once = u;
                                        t.off = u;
                                        t.removeListener = u;
                                        t.removeAllListeners = u;
                                        t.emit = u;
                                        t.binding = function() {
                                            throw new Error("process.binding is not supported");
                                        };
                                        t.cwd = function() {
                                            return "/"
                                        };
                                        t.chdir = function() {
                                            throw new Error("process.chdir is not supported");
                                        };
                                        t.umask = function() {
                                            return 0
                                        }
                                    }, function(n, t, i) {
                                        function r(n) {
                                            this.model = n
                                        }
                                        var f = i(2),
                                            u;
                                        r.defaultOption = {
                                            show: !0,
                                            icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
                                            title: "保存为图片",
                                            type: "png",
                                            name: "",
                                            excludeComponents: ["toolbox"],
                                            pixelRatio: 1,
                                            lang: ["右键另存为图片"]
                                        };
                                        r.prototype.unusable = !f.canvasSupported;
                                        u = r.prototype;
                                        u.onclick = function(n, t) {
                                            var i = this.model,
                                                s = i.get("name") || n.get("title.0.text") || "echarts",
                                                r = document.createElement("a"),
                                                f = i.get("type", !0) || "png",
                                                u, e;
                                            if (r.download = s + "." + f, r.target = "_blank", u = t.getConnectedDataURL({
                                                    type: f,
                                                    backgroundColor: i.get("backgroundColor", !0) || n.get("backgroundColor") || "#fff",
                                                    excludeComponents: i.get("excludeComponents"),
                                                    pixelRatio: i.get("pixelRatio")
                                                }), r.href = u, typeof MouseEvent == "function") e = new MouseEvent("click", {
                                                view: window,
                                                bubbles: !0,
                                                cancelable: !1
                                            }), r.dispatchEvent(e);
                                            else {
                                                var o = i.get("lang"),
                                                    h = '<body style="margin:0;"><img src="' + u + '" style="max-width:100%;" title="' + (o && o[0] || "") + '" /><\/body>',
                                                    c = window.open();
                                                c.document.write(h)
                                            }
                                        };
                                        i(315).register("saveAsImage", r);
                                        n.exports = r
                                    }, function(n, t, i) {
                                        "use strict";

                                        function u(n) {
                                            this.model = n
                                        }
                                        var r = i(4),
                                            f, e, o, s;
                                        u.defaultOption = {
                                            show: !0,
                                            type: [],
                                            icon: {
                                                line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
                                                bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
                                                stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z",
                                                tiled: "M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z"
                                            },
                                            title: {
                                                line: "切换为折线图",
                                                bar: "切换为柱状图",
                                                stack: "切换为堆叠",
                                                tiled: "切换为平铺"
                                            },
                                            option: {},
                                            seriesIndex: {}
                                        };
                                        f = u.prototype;
                                        f.getIcons = function() {
                                            var n = this.model,
                                                t = n.get("icon"),
                                                i = {};
                                            return r.each(n.get("type"), function(n) {
                                                t[n] && (i[n] = t[n])
                                            }), i
                                        };
                                        e = {
                                            line: function(n, t, i, u) {
                                                if (n === "bar") return r.merge({
                                                    id: t,
                                                    type: "line",
                                                    data: i.get("data"),
                                                    stack: i.get("stack"),
                                                    markPoint: i.get("markPoint"),
                                                    markLine: i.get("markLine")
                                                }, u.get("option.line") || {}, !0)
                                            },
                                            bar: function(n, t, i, u) {
                                                if (n === "line") return r.merge({
                                                    id: t,
                                                    type: "bar",
                                                    data: i.get("data"),
                                                    stack: i.get("stack"),
                                                    markPoint: i.get("markPoint"),
                                                    markLine: i.get("markLine")
                                                }, u.get("option.bar") || {}, !0)
                                            },
                                            stack: function(n, t, i, u) {
                                                if (n === "line" || n === "bar") return r.merge({
                                                    id: t,
                                                    stack: "__ec_magicType_stack__"
                                                }, u.get("option.stack") || {}, !0)
                                            },
                                            tiled: function(n, t, i, u) {
                                                if (n === "line" || n === "bar") return r.merge({
                                                    id: t,
                                                    stack: ""
                                                }, u.get("option.tiled") || {}, !0)
                                            }
                                        };
                                        o = [
                                            ["line", "bar"],
                                            ["stack", "tiled"]
                                        ];
                                        f.onclick = function(n, t, i) {
                                            var f = this.model,
                                                s = f.get("seriesIndex." + i),
                                                u, h;
                                            e[i] && (u = {
                                                series: []
                                            }, h = function(t) {
                                                var v = t.subType,
                                                    y = t.id,
                                                    c = e[i](v, y, t, f),
                                                    s, l, a;
                                                if (c && (r.defaults(c, t.option), u.series.push(c)), s = t.coordinateSystem, s && s.type === "cartesian2d" && (i === "line" || i === "bar") && (l = s.getAxesByScale("ordinal")[0], l)) {
                                                    var p = l.dim,
                                                        o = p + "Axis",
                                                        w = n.queryComponents({
                                                            mainType: o,
                                                            index: t.get(name + "Index"),
                                                            id: t.get(name + "Id")
                                                        })[0],
                                                        h = w.componentIndex;
                                                    for (u[o] = u[o] || [], a = 0; a <= h; a++) u[o][h] = u[o][h] || {};
                                                    u[o][h].boundaryGap = i === "bar" ? !0 : !1
                                                }
                                            }, r.each(o, function(n) {
                                                r.indexOf(n, i) >= 0 && r.each(n, function(n) {
                                                    f.setIconStatus(n, "normal")
                                                })
                                            }), f.setIconStatus(i, "emphasis"), n.eachComponent({
                                                mainType: "series",
                                                query: s == null ? null : {
                                                    seriesIndex: s
                                                }
                                            }, h), t.dispatchAction({
                                                type: "changeMagicType",
                                                currentType: i,
                                                newOption: u
                                            }))
                                        };
                                        s = i(1);
                                        s.registerAction({
                                            type: "changeMagicType",
                                            event: "magicTypeChanged",
                                            update: "prepareAndUpdate"
                                        }, function(n, t) {
                                            t.mergeOption(n.newOption)
                                        });
                                        i(315).register("magicType", u);
                                        n.exports = u
                                    }, function(n, t, i) {
                                        function c(n) {
                                            var t = {},
                                                i = [],
                                                r = [];
                                            return n.eachRawSeries(function(n) {
                                                var f = n.coordinateSystem,
                                                    u, e;
                                                f && (f.type === "cartesian2d" || f.type === "polar") ? (u = f.getBaseAxis(), u.type === "category" ? (e = u.dim + "_" + u.index, t[e] || (t[e] = {
                                                    categoryAxis: u,
                                                    valueAxis: f.getOtherAxis(u),
                                                    series: []
                                                }, r.push({
                                                    axisDim: u.dim,
                                                    axisIndex: u.index
                                                })), t[e].series.push(n)) : i.push(n)) : i.push(n)
                                            }), {
                                                seriesGroupByCategoryAxis: t,
                                                other: i,
                                                meta: r
                                            }
                                        }

                                        function l(n) {
                                            var t = [];
                                            return r.each(n, function(n) {
                                                var h = n.categoryAxis,
                                                    c = n.valueAxis,
                                                    l = c.dim,
                                                    a = [" "].concat(r.map(n.series, function(n) {
                                                        return n.name
                                                    })),
                                                    i = [h.model.getCategories()],
                                                    o, f, s, e;
                                                for (r.each(n.series, function(n) {
                                                        i.push(n.getRawData().mapArray(l, function(n) {
                                                            return n
                                                        }))
                                                    }), o = [a.join(u)], f = 0; f < i[0].length; f++) {
                                                    for (s = [], e = 0; e < i.length; e++) s.push(i[e][f]);
                                                    o.push(s.join(u))
                                                }
                                                t.push(o.join("\n"))
                                            }), t.join("\n\n" + o + "\n\n")
                                        }

                                        function a(n) {
                                            return r.map(n, function(n) {
                                                var t = n.getRawData(),
                                                    i = [n.name],
                                                    r = [];
                                                return t.each(t.dimensions, function() {
                                                    for (var f = arguments.length, o = arguments[f - 1], e = t.getName(o), n = 0; n < f - 1; n++) r[n] = arguments[n];
                                                    i.push((e ? e + u : "") + r.join(u))
                                                }), i.join("\n")
                                            }).join("\n\n" + o + "\n\n")
                                        }

                                        function v(n) {
                                            var t = c(n);
                                            return {
                                                value: r.filter([l(t.seriesGroupByCategoryAxis), a(t.other)], function(n) {
                                                    return n.replace(/[\n\t\s]/g, "")
                                                }).join("\n\n" + o + "\n\n"),
                                                meta: t.meta
                                            }
                                        }

                                        function s(n) {
                                            return n.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
                                        }

                                        function y(n) {
                                            var t = n.slice(0, n.indexOf("\n"));
                                            if (t.indexOf(u) >= 0) return !0
                                        }

                                        function p(n) {
                                            for (var u, t, f = n.split(/\n+/g), c = s(f.shift()).split(h), o = [], e = r.map(c, function(n) {
                                                    return {
                                                        name: n,
                                                        data: []
                                                    }
                                                }), i = 0; i < f.length; i++)
                                                for (u = s(f[i]).split(h), o.push(u.shift()), t = 0; t < u.length; t++) e[t] && (e[t].data[i] = u[t]);
                                            return {
                                                series: e,
                                                categories: o
                                            }
                                        }

                                        function w(n) {
                                            for (var f, e = n.split(/\n+/g), l = s(e.shift()), i = [], t = 0; t < e.length; t++) {
                                                var r = s(e[t]).split(h),
                                                    o = "",
                                                    u, c = !1;
                                                for (isNaN(r[0]) ? (c = !0, o = r[0], r = r.slice(1), i[t] = {
                                                        name: o,
                                                        value: []
                                                    }, u = i[t].value) : u = i[t] = [], f = 0; f < r.length; f++) u.push(+r[f]);
                                                u.length === 1 && (c ? i[t].value = u[0] : i[t] = u[0])
                                            }
                                            return {
                                                name: l,
                                                data: i
                                            }
                                        }

                                        function b(n, t) {
                                            var u = n.split(new RegExp("\n*" + o + "\n*", "g")),
                                                i = {
                                                    series: []
                                                };
                                            return r.each(u, function(n, r) {
                                                var u;
                                                if (y(n)) {
                                                    var u = p(n),
                                                        f = t[r],
                                                        e = f.axisDim + "Axis";
                                                    f && (i[e] = i[e] || [], i[e][f.axisIndex] = {
                                                        data: u.categories
                                                    }, i.series = i.series.concat(u.series))
                                                } else u = w(n), i.series.push(u)
                                            }), i
                                        }

                                        function f(n) {
                                            this._dom = null;
                                            this.model = n
                                        }

                                        function k(n, t) {
                                            return r.map(n, function(n, i) {
                                                var u = t && t[i];
                                                return r.isObject(u) && !r.isArray(u) ? (r.isObject(n) && !r.isArray(n) && (n = n.value), r.defaults({
                                                    value: n
                                                }, u)) : n
                                            })
                                        }
                                        var r = i(4),
                                            e = i(87),
                                            o = new Array(60).join("-"),
                                            u = "\t",
                                            h = new RegExp("[" + u + "]+", "g");
                                        f.defaultOption = {
                                            show: !0,
                                            readOnly: !1,
                                            optionToContent: null,
                                            contentToOption: null,
                                            icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
                                            title: "数据视图",
                                            lang: ["数据视图", "关闭", "刷新"],
                                            backgroundColor: "#fff",
                                            textColor: "#000",
                                            textareaColor: "#fff",
                                            textareaBorderColor: "#333",
                                            buttonColor: "#c23531",
                                            buttonTextColor: "#fff"
                                        };
                                        f.prototype.onclick = function(n, t) {
                                            function d() {
                                                a.removeChild(o);
                                                rt._dom = null
                                            }
                                            var a = t.getDom(),
                                                i = this.model,
                                                o, h, y, s, f, c, it, l, rt;
                                            this._dom && a.removeChild(this._dom);
                                            o = document.createElement("div");
                                            o.style.cssText = "position:absolute;left:5px;top:5px;bottom:5px;right:5px;";
                                            o.style.backgroundColor = i.get("backgroundColor") || "#fff";
                                            h = document.createElement("h4");
                                            y = i.get("lang") || [];
                                            h.innerHTML = y[0] || i.get("title");
                                            h.style.cssText = "margin: 10px 20px;";
                                            h.style.color = i.get("textColor");
                                            s = document.createElement("div");
                                            f = document.createElement("textarea");
                                            s.style.cssText = "display:block;width:100%;overflow:hidden;";
                                            var g = i.get("optionToContent"),
                                                nt = i.get("contentToOption"),
                                                tt = v(n);
                                            typeof g == "function" ? (c = g(t.getOption()), typeof c == "string" ? s.innerHTML = c : r.isDom(c) && s.appendChild(c)) : (s.appendChild(f), f.readOnly = i.get("readOnly"), f.style.cssText = "width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;", f.style.color = i.get("textColor"), f.style.borderColor = i.get("textareaBorderColor"), f.style.backgroundColor = i.get("textareaColor"), f.value = tt.value);
                                            it = tt.meta;
                                            l = document.createElement("div");
                                            l.style.cssText = "position:absolute;bottom:0;left:0;right:0;";
                                            var p = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px",
                                                w = document.createElement("div"),
                                                k = document.createElement("div");
                                            p += ";background-color:" + i.get("buttonColor");
                                            p += ";color:" + i.get("buttonTextColor");
                                            rt = this;
                                            e.addEventListener(w, "click", d);
                                            e.addEventListener(k, "click", function() {
                                                var n;
                                                try {
                                                    n = typeof nt == "function" ? nt(s, t.getOption()) : b(f.value, it)
                                                } catch (i) {
                                                    d();
                                                    throw new Error("Data view format error " + i);
                                                }
                                                n && t.dispatchAction({
                                                    type: "changeDataView",
                                                    newOption: n
                                                });
                                                d()
                                            });
                                            w.innerHTML = y[1];
                                            k.innerHTML = y[2];
                                            k.style.cssText = p;
                                            w.style.cssText = p;
                                            i.get("readOnly") || l.appendChild(k);
                                            l.appendChild(w);
                                            e.addEventListener(f, "keydown", function(n) {
                                                if ((n.keyCode || n.which) === 9) {
                                                    var t = this.value,
                                                        i = this.selectionStart,
                                                        r = this.selectionEnd;
                                                    this.value = t.substring(0, i) + u + t.substring(r);
                                                    this.selectionStart = this.selectionEnd = i + 1;
                                                    e.stop(n)
                                                }
                                            });
                                            o.appendChild(h);
                                            o.appendChild(s);
                                            o.appendChild(l);
                                            s.style.height = a.clientHeight - 80 + "px";
                                            a.appendChild(o);
                                            this._dom = o
                                        };
                                        f.prototype.remove = function(n, t) {
                                            this._dom && t.getDom().removeChild(this._dom)
                                        };
                                        f.prototype.dispose = function(n, t) {
                                            this.remove(n, t)
                                        };
                                        i(315).register("dataView", f);
                                        i(1).registerAction({
                                            type: "changeDataView",
                                            event: "dataViewChanged",
                                            update: "prepareAndUpdate"
                                        }, function(n, t) {
                                            var i = [];
                                            r.each(n.newOption.series, function(n) {
                                                var u = t.getSeriesByName(n.name)[0],
                                                    f;
                                                u ? (f = u.get("data"), i.push({
                                                    name: n.name,
                                                    data: k(n.data, f)
                                                })) : i.push(r.extend({
                                                    type: "scatter"
                                                }, n))
                                            });
                                            t.mergeOption(r.defaults({
                                                series: i
                                            }, n.newOption))
                                        });
                                        n.exports = f
                                    }, function(n, t, i) {
                                        "use strict";

                                        function e(n, t, i) {
                                            (this._brushController = new a(i.getZr())).on("brush", r.bind(this._onBrush, this)).mount();
                                            this._isZoomActive
                                        }

                                        function l(n) {
                                            var t = {};
                                            return r.each(["xAxisIndex", "yAxisIndex"], function(i) {
                                                t[i] = n[i];
                                                t[i] == null && (t[i] = "all");
                                                (t[i] === !1 || t[i] === "none") && (t[i] = [])
                                            }), t
                                        }

                                        function v(n, t) {
                                            n.setIconStatus("back", o.count(t) > 1 ? "emphasis" : "normal")
                                        }

                                        function y(n, t, i, r) {
                                            var e = i._isZoomActive,
                                                u, o;
                                            r && r.type === "takeGlobalCursor" && (e = r.key === "dataZoomSelect" ? r.dataZoomSelectActive : !1);
                                            i._isZoomActive = e;
                                            n.setIconStatus("zoom", e ? "emphasis" : "normal");
                                            u = f.makeCoordInfoList(l(n.option), t);
                                            o = u.xAxisHas && !u.yAxisHas ? "lineX" : !u.xAxisHas && u.yAxisHas ? "lineY" : "rect";
                                            i._brushController.setPanels(f.makePanelOpts(u)).enableBrush(e ? {
                                                brushType: o,
                                                brushStyle: {
                                                    lineWidth: 0,
                                                    fill: "rgba(0,0,0,0.2)"
                                                }
                                            } : !1)
                                        }
                                        var r = i(4),
                                            a = i(234),
                                            f = i(310),
                                            o = i(375),
                                            s = r.each,
                                            h, u, c;
                                        i(376);
                                        h = '\0_ec_\0toolbox-dataZoom_';
                                        e.defaultOption = {
                                            show: !0,
                                            icon: {
                                                zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
                                                back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
                                            },
                                            title: {
                                                zoom: "区域缩放",
                                                back: "区域缩放还原"
                                            }
                                        };
                                        u = e.prototype;
                                        u.render = function(n, t, i, r) {
                                            this.model = n;
                                            this.ecModel = t;
                                            this.api = i;
                                            y(n, t, this, r);
                                            v(n, t)
                                        };
                                        u.onclick = function(n, t, i) {
                                            c[i].call(this)
                                        };
                                        u.remove = function() {
                                            this._brushController.unmount()
                                        };
                                        u.dispose = function() {
                                            this._brushController.dispose()
                                        };
                                        c = {
                                            zoom: function() {
                                                var n = !this._isZoomActive;
                                                this.api.dispatchAction({
                                                    type: "takeGlobalCursor",
                                                    key: "dataZoomSelect",
                                                    dataZoomSelectActive: n
                                                })
                                            },
                                            back: function() {
                                                this._dispatchZoomAction(o.pop(this.ecModel))
                                            }
                                        };
                                        u._onBrush = function(n, t) {
                                            function h(n, t, u) {
                                                var f = p(n, u[n], i);
                                                f && (r[f.id] = {
                                                    dataZoomId: f.id,
                                                    startValue: t[0],
                                                    endValue: t[1]
                                                })
                                            }

                                            function p(n, t, i) {
                                                var r;
                                                return i.eachComponent({
                                                    mainType: "dataZoom",
                                                    subType: "select"
                                                }, function(u) {
                                                    var f = u.get(n + "Index");
                                                    f != null && i.getComponent(n, f) === t && (r = u)
                                                }), r
                                            }
                                            var r, i, c, s, y;
                                            if (t.isEnd && n.length) {
                                                r = {};
                                                i = this.ecModel;
                                                this._brushController.updateCovers([]);
                                                c = f.makeCoordInfoList(l(this.model.option), i);
                                                s = [];
                                                f.parseOutputRanges(n, c, i, s);
                                                var a = n[0],
                                                    u = s[0],
                                                    e = a.coordRange,
                                                    v = a.brushType;
                                                u && e && (v === "rect" ? (h("xAxis", e[0], u), h("yAxis", e[1], u)) : (y = {
                                                    lineX: "xAxis",
                                                    lineY: "yAxis"
                                                }, h(y[v], e, u)));
                                                o.push(i, r);
                                                this._dispatchZoomAction(r)
                                            }
                                        };
                                        u._dispatchZoomAction = function(n) {
                                            var t = [];
                                            s(n, function(n) {
                                                t.push(r.clone(n))
                                            });
                                            t.length && this.api.dispatchAction({
                                                type: "dataZoom",
                                                from: this.uid,
                                                batch: t
                                            })
                                        };
                                        i(315).register("dataZoom", e);
                                        i(1).registerPreprocessor(function(n) {
                                            function f(n, t) {
                                                if (t) {
                                                    var f = n + "Index",
                                                        u = t[f];
                                                    u == null || u == "all" || r.isArray(u) || (u = u === !1 || u === "none" ? [] : [u]);
                                                    e(n, function(t, e) {
                                                        if (u == null || u == "all" || r.indexOf(u, e) !== -1) {
                                                            var o = {
                                                                type: "select",
                                                                $fromToolbox: !0,
                                                                id: h + n + e
                                                            };
                                                            o[f] = e;
                                                            i.push(o)
                                                        }
                                                    })
                                                }
                                            }

                                            function e(t, i) {
                                                var u = n[t];
                                                r.isArray(u) || (u = u ? [u] : []);
                                                s(u, i)
                                            }
                                            var i, t, u;
                                            n && (i = n.dataZoom || (n.dataZoom = []), r.isArray(i) || (n.dataZoom = i = [i]), t = n.toolbox, t && (r.isArray(t) && (t = t[0]), t && t.feature && (u = t.feature.dataZoom, f("xAxis", u), f("yAxis", u))))
                                        });
                                        n.exports = e
                                    }, function(n, t, i) {
                                        function u(n) {
                                            var t = n[r];
                                            return t || (t = n[r] = [{}]), t
                                        }
                                        var e = i(4),
                                            f = e.each,
                                            r = '\0_ec_hist_store',
                                            o = {
                                                push: function(n, t) {
                                                    var i = u(n);
                                                    f(t, function(t, r) {
                                                        for (var u = i.length - 1, o, f, e; u >= 0; u--)
                                                            if (o = i[u], o[r]) break;
                                                        u < 0 && (f = n.queryComponents({
                                                            mainType: "dataZoom",
                                                            subType: "select",
                                                            id: r
                                                        })[0], f && (e = f.getPercentRange(), i[0][r] = {
                                                            dataZoomId: r,
                                                            start: e[0],
                                                            end: e[1]
                                                        }))
                                                    });
                                                    i.push(t)
                                                },
                                                pop: function(n) {
                                                    var t = u(n),
                                                        r = t[t.length - 1],
                                                        i;
                                                    return t.length > 1 && t.pop(), i = {}, f(r, function(n, r) {
                                                        for (var n, u = t.length - 1; u >= 0; u--)
                                                            if (n = t[u][r], n) {
                                                                i[r] = n;
                                                                break
                                                            }
                                                    }), i
                                                },
                                                clear: function(n) {
                                                    n[r] = null
                                                },
                                                count: function(n) {
                                                    return u(n).length
                                                }
                                            };
                                        n.exports = o
                                    }, function(n, t, i) {
                                        i(318);
                                        i(319);
                                        i(322);
                                        i(377);
                                        i(378);
                                        i(329);
                                        i(330)
                                    }, function(n, t, i) {
                                        var r = i(319);
                                        n.exports = r.extend({
                                            type: "dataZoom.select"
                                        })
                                    }, function(n, t, i) {
                                        n.exports = i(322).extend({
                                            type: "dataZoom.select"
                                        })
                                    }, function(n, t, i) {
                                        "use strict";

                                        function r(n) {
                                            this.model = n
                                        }
                                        var f = i(375),
                                            u;
                                        r.defaultOption = {
                                            show: !0,
                                            icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
                                            title: "还原"
                                        };
                                        u = r.prototype;
                                        u.onclick = function(n, t) {
                                            f.clear(n);
                                            t.dispatchAction({
                                                type: "restore",
                                                from: this.uid
                                            })
                                        };
                                        i(315).register("restore", r);
                                        i(1).registerAction({
                                            type: "restore",
                                            event: "restore",
                                            update: "prepareAndUpdate"
                                        }, function(n, t) {
                                            t.resetOption("recreate")
                                        });
                                        n.exports = r
                                    }, function(n, t, i) {
                                        i(381);
                                        i(81).registerPainter("vml", i(383))
                                    }, function(n, t, i) {
                                        var wt, d, g;
                                        if (!i(2).canvasSupported) {
                                            var kt = i(10),
                                                dt = i(9),
                                                a = i(49).CMD,
                                                ct = i(39),
                                                nt = i(8),
                                                gt = i(48),
                                                ni = i(46),
                                                p = i(62),
                                                w = i(64),
                                                b = i(45),
                                                tt = i(61),
                                                c = i(382),
                                                r = Math.round,
                                                v = Math.sqrt,
                                                ti = Math.abs,
                                                lt = Math.cos,
                                                at = Math.sin,
                                                it = Math.max,
                                                s = kt.applyTransform,
                                                f = ",",
                                                rt = "progid:DXImageTransform.Microsoft",
                                                u = 21600,
                                                e = u / 2,
                                                ii = 1e5,
                                                ri = 1e3,
                                                ut = function(n) {
                                                    n.style.cssText = "position:absolute;left:0;top:0;width:1px;height:1px;";
                                                    n.coordsize = u + "," + u;
                                                    n.coordorigin = "0,0"
                                                },
                                                ui = function(n) {
                                                    return String(n).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
                                                },
                                                vt = function(n, t, i) {
                                                    return "rgb(" + [n, t, i].join(",") + ")"
                                                },
                                                h = function(n, t) {
                                                    t && n && t.parentNode !== n && n.appendChild(t)
                                                },
                                                y = function(n, t) {
                                                    t && n && t.parentNode === n && n.removeChild(t)
                                                },
                                                ft = function(n, t, i) {
                                                    return (parseFloat(n) || 0) * ii + (parseFloat(t) || 0) * ri + i
                                                },
                                                yt = function(n, t) {
                                                    return typeof n == "string" ? n.lastIndexOf("%") >= 0 ? parseFloat(n) / 100 * t : parseFloat(n) : n
                                                },
                                                pt = function(n, t, i) {
                                                    var r = ct.parse(t);
                                                    i = +i;
                                                    isNaN(i) && (i = 1);
                                                    r && (n.color = vt(r[0], r[1], r[2]), n.opacity = i * r[3])
                                                },
                                                fi = function(n) {
                                                    var t = ct.parse(n);
                                                    return [vt(t[0], t[1], t[2]), t[3]]
                                                },
                                                ei = function(n, t, i) {
                                                    var r = t.fill,
                                                        ot, st, g, w, o, rt, ut;
                                                    if (r != null)
                                                        if (r instanceof tt) {
                                                            var l, e = 0,
                                                                ft = [0, 0],
                                                                b = 0,
                                                                et = 1,
                                                                a = i.getBoundingRect(),
                                                                v = a.width,
                                                                y = a.height;
                                                            if (r.type === "linear") {
                                                                l = "gradient";
                                                                var h = i.transform,
                                                                    f = [r.x * v, r.y * y],
                                                                    p = [r.x2 * v, r.y2 * y];
                                                                h && (s(f, f, h), s(p, p, h));
                                                                ot = p[0] - f[0];
                                                                st = p[1] - f[1];
                                                                e = Math.atan2(ot, st) * 180 / Math.PI;
                                                                e < 0 && (e += 360);
                                                                e < 1e-6 && (e = 0)
                                                            } else {
                                                                l = "gradientradial";
                                                                var f = [r.x * v, r.y * y],
                                                                    h = i.transform,
                                                                    ht = i.scale,
                                                                    k = v,
                                                                    d = y;
                                                                ft = [(f[0] - a.x) / k, (f[1] - a.y) / d];
                                                                h && s(f, f, h);
                                                                k /= ht[0] * u;
                                                                d /= ht[1] * u;
                                                                g = it(k, d);
                                                                b = 0 / g;
                                                                et = 2 * r.r / g - b
                                                            }
                                                            w = r.colorStops.slice();
                                                            w.sort(function(n, t) {
                                                                return n.offset - t.offset
                                                            });
                                                            var nt = w.length,
                                                                c = [],
                                                                ct = [];
                                                            for (o = 0; o < nt; o++) rt = w[o], ut = fi(rt.color), ct.push(rt.offset * et + b + " " + ut[0]), (o === 0 || o === nt - 1) && c.push(ut);
                                                            if (nt >= 2) {
                                                                var lt = c[0][0],
                                                                    at = c[1][0],
                                                                    vt = c[0][1] * t.opacity,
                                                                    yt = c[1][1] * t.opacity;
                                                                n.type = l;
                                                                n.method = "none";
                                                                n.focus = "100%";
                                                                n.angle = e;
                                                                n.color = lt;
                                                                n.color2 = at;
                                                                n.colors = ct.join(",");
                                                                n.opacity = yt;
                                                                n.opacity2 = vt
                                                            }
                                                            l === "radial" && (n.focusposition = ft.join(","))
                                                        } else pt(n, r, t.opacity)
                                                },
                                                oi = function(n, t) {
                                                    t.lineDash != null && (n.dashstyle = t.lineDash.join(" "));
                                                    t.stroke == null || t.stroke instanceof tt || pt(n, t.stroke, t.opacity)
                                                },
                                                k = function(n, t, i, r) {
                                                    var f = t == "fill",
                                                        u = n.getElementsByTagName(t)[0];
                                                    i[t] != null && i[t] !== "none" && (f || !f && i.lineWidth) ? (n[f ? "filled" : "stroked"] = "true", i[t] instanceof tt && y(n, u), u || (u = c.createNode(t)), f ? ei(u, i, r) : oi(u, i), h(n, u)) : (n[f ? "filled" : "stroked"] = "false", y(n, u))
                                                },
                                                o = [
                                                    [],
                                                    [],
                                                    []
                                                ],
                                                si = function(n, t) {
                                                    for (var ii = a.M, ri = a.C, ui = a.L, fi = a.A, ti = a.Q, d = [], p, rt, dt, w, b, h, c, ot, st, i = 0; i < n.length;) {
                                                        dt = n[i++];
                                                        rt = "";
                                                        p = 0;
                                                        switch (dt) {
                                                            case ii:
                                                                rt = " m ";
                                                                p = 1;
                                                                w = n[i++];
                                                                b = n[i++];
                                                                o[0][0] = w;
                                                                o[0][1] = b;
                                                                break;
                                                            case ui:
                                                                rt = " l ";
                                                                p = 1;
                                                                w = n[i++];
                                                                b = n[i++];
                                                                o[0][0] = w;
                                                                o[0][1] = b;
                                                                break;
                                                            case ti:
                                                            case ri:
                                                                rt = " c ";
                                                                p = 3;
                                                                var l = n[i++],
                                                                    y = n[i++],
                                                                    ht = n[i++],
                                                                    ct = n[i++],
                                                                    vt, yt;
                                                                dt === ti ? (vt = ht, yt = ct, ht = (ht + 2 * l) / 3, ct = (ct + 2 * y) / 3, l = (w + 2 * l) / 3, y = (b + 2 * y) / 3) : (vt = n[i++], yt = n[i++]);
                                                                o[0][0] = l;
                                                                o[0][1] = y;
                                                                o[1][0] = ht;
                                                                o[1][1] = ct;
                                                                o[2][0] = vt;
                                                                o[2][1] = yt;
                                                                w = vt;
                                                                b = yt;
                                                                break;
                                                            case fi:
                                                                var ut = 0,
                                                                    ft = 0,
                                                                    g = 1,
                                                                    nt = 1,
                                                                    gt = 0;
                                                                t && (ut = t[4], ft = t[5], g = v(t[0] * t[0] + t[1] * t[1]), nt = v(t[2] * t[2] + t[3] * t[3]), gt = Math.atan2(-t[1] / nt, t[0] / g));
                                                                var tt = n[i++],
                                                                    k = n[i++],
                                                                    pt = n[i++],
                                                                    wt = n[i++],
                                                                    bt = n[i++] + gt,
                                                                    ni = n[i++] + bt + gt;
                                                                i++;
                                                                var it = n[i++],
                                                                    et = tt + lt(bt) * pt,
                                                                    kt = k + at(bt) * wt,
                                                                    l = tt + lt(ni) * pt,
                                                                    y = k + at(ni) * wt,
                                                                    ei = it ? " wa " : " at ";
                                                                Math.abs(et - l) < 1e-10 && (Math.abs(ni - bt) > .01 ? it && (et += 270 / u) : Math.abs(kt - k) < 1e-10 ? it && et < tt || !it && et > tt ? y -= 270 / u : y += 270 / u : it && kt < k || !it && kt > k ? l += 270 / u : l -= 270 / u);
                                                                d.push(ei, r(((tt - pt) * g + ut) * u - e), f, r(((k - wt) * nt + ft) * u - e), f, r(((tt + pt) * g + ut) * u - e), f, r(((k + wt) * nt + ft) * u - e), f, r((et * g + ut) * u - e), f, r((kt * nt + ft) * u - e), f, r((l * g + ut) * u - e), f, r((y * nt + ft) * u - e));
                                                                w = l;
                                                                b = y;
                                                                break;
                                                            case a.R:
                                                                h = o[0];
                                                                c = o[1];
                                                                h[0] = n[i++];
                                                                h[1] = n[i++];
                                                                c[0] = h[0] + n[i++];
                                                                c[1] = h[1] + n[i++];
                                                                t && (s(h, h, t), s(c, c, t));
                                                                h[0] = r(h[0] * u - e);
                                                                c[0] = r(c[0] * u - e);
                                                                h[1] = r(h[1] * u - e);
                                                                c[1] = r(c[1] * u - e);
                                                                d.push(" m ", h[0], f, h[1], " l ", c[0], f, h[1], " l ", c[0], f, c[1], " l ", h[0], f, c[1]);
                                                                break;
                                                            case a.Z:
                                                                d.push(" x ")
                                                        }
                                                        if (p > 0)
                                                            for (d.push(rt), ot = 0; ot < p; ot++) st = o[ot], t && s(st, st, t), d.push(r(st[0] * u - e), f, r(st[1] * u - e), ot < p - 1 ? f : "")
                                                    }
                                                    return d.join("")
                                                };
                                            b.prototype.brushVML = function(n) {
                                                var i = this.style,
                                                    t = this._vmlEl,
                                                    f, o, u;
                                                t || (t = c.createNode("shape"), ut(t), this._vmlEl = t);
                                                k(t, "fill", i, this);
                                                k(t, "stroke", i, this);
                                                var r = this.transform,
                                                    s = r != null,
                                                    e = t.getElementsByTagName("stroke")[0];
                                                e && (f = i.lineWidth, s && !i.strokeNoScale && (o = r[0] * r[3] - r[1] * r[2], f *= v(ti(o))), e.weight = f + "px");
                                                u = this.path;
                                                this.__dirtyPath && (u.beginPath(), this.buildPath(u, this.shape), u.toStatic(), this.__dirtyPath = !1);
                                                t.path = si(u.data, this.transform);
                                                t.style.zIndex = ft(this.zlevel, this.z, this.z2);
                                                h(n, t);
                                                i.text ? this.drawRectText(n, this.getBoundingRect()) : this.removeRectText(n)
                                            };
                                            b.prototype.onRemove = function(n) {
                                                y(n, this._vmlEl);
                                                this.removeRectText(n)
                                            };
                                            b.prototype.onAdd = function(n) {
                                                h(n, this._vmlEl);
                                                this.appendRectText(n)
                                            };
                                            wt = function(n) {
                                                return typeof n == "object" && n.tagName && n.tagName.toUpperCase() === "IMG"
                                            };
                                            p.prototype.brushVML = function(n) {
                                                var u = this.style,
                                                    e = u.image,
                                                    y, p, ct, g, i, nt, et, pt, bt, kt, dt;
                                                if (wt(e)) {
                                                    if (ct = e.src, ct === this._imageSrc) y = this._imageWidth, p = this._imageHeight;
                                                    else {
                                                        var tt = e.runtimeStyle,
                                                            ri = tt.width,
                                                            ui = tt.height;
                                                        tt.width = "auto";
                                                        tt.height = "auto";
                                                        y = e.width;
                                                        p = e.height;
                                                        tt.width = ri;
                                                        tt.height = ui;
                                                        this._imageSrc = ct;
                                                        this._imageWidth = y;
                                                        this._imageHeight = p
                                                    }
                                                    e = ct
                                                } else e === this._imageSrc && (y = this._imageWidth, p = this._imageHeight);
                                                if (e) {
                                                    var w = u.x || 0,
                                                        b = u.y || 0,
                                                        k = u.width,
                                                        d = u.height,
                                                        ot = u.sWidth,
                                                        st = u.sHeight,
                                                        gt = u.sx || 0,
                                                        ni = u.sy || 0,
                                                        fi = ot && st,
                                                        o = this._vmlEl;
                                                    o || (o = c.doc.createElement("div"), ut(o), this._vmlEl = o);
                                                    var ht = o.style,
                                                        ti = !1,
                                                        t, l = 1,
                                                        a = 1;
                                                    if (this.transform && (t = this.transform, l = v(t[0] * t[0] + t[1] * t[1]), a = v(t[2] * t[2] + t[3] * t[3]), ti = t[1] || t[2]), ti) {
                                                        var lt = [w, b],
                                                            at = [w + k, b],
                                                            vt = [w, b + d],
                                                            yt = [w + k, b + d];
                                                        s(lt, lt, t);
                                                        s(at, at, t);
                                                        s(vt, vt, t);
                                                        s(yt, yt, t);
                                                        var ei = it(lt[0], at[0], vt[0], yt[0]),
                                                            oi = it(lt[1], at[1], vt[1], yt[1]),
                                                            ii = [];
                                                        ii.push("M11=", t[0] / l, f, "M12=", t[2] / a, f, "M21=", t[1] / l, f, "M22=", t[3] / a, f, "Dx=", r(w * l + t[4]), f, "Dy=", r(b * a + t[5]));
                                                        ht.padding = "0 " + r(ei) + "px " + r(oi) + "px 0";
                                                        ht.filter = rt + ".Matrix(" + ii.join("") + ", SizingMethod=clip)"
                                                    } else t && (w = w * l + t[4], b = b * a + t[5]), ht.filter = "", ht.left = r(w) + "px", ht.top = r(b) + "px";
                                                    g = this._imageEl;
                                                    i = this._cropEl;
                                                    g || (g = c.doc.createElement("div"), this._imageEl = g);
                                                    nt = g.style;
                                                    fi ? (y && p ? (nt.width = r(l * y * k / ot) + "px", nt.height = r(a * p * d / st) + "px") : (et = new Image, pt = this, et.onload = function() {
                                                        et.onload = null;
                                                        y = et.width;
                                                        p = et.height;
                                                        nt.width = r(l * y * k / ot) + "px";
                                                        nt.height = r(a * p * d / st) + "px";
                                                        pt._imageWidth = y;
                                                        pt._imageHeight = p;
                                                        pt._imageSrc = e
                                                    }, et.src = e), i || (i = c.doc.createElement("div"), i.style.overflow = "hidden", this._cropEl = i), bt = i.style, bt.width = r((k + gt * k / ot) * l), bt.height = r((d + ni * d / st) * a), bt.filter = rt + ".Matrix(Dx=" + -gt * k / ot * l + ",Dy=" + -ni * d / st * a + ")", i.parentNode || o.appendChild(i), g.parentNode != i && i.appendChild(g)) : (nt.width = r(l * k) + "px", nt.height = r(a * d) + "px", o.appendChild(g), i && i.parentNode && (o.removeChild(i), this._cropEl = null));
                                                    kt = "";
                                                    dt = u.opacity;
                                                    dt < 1 && (kt += ".Alpha(opacity=" + r(dt * 100) + ") ");
                                                    kt += rt + ".AlphaImageLoader(src=" + e + ", SizingMethod=scale)";
                                                    nt.filter = kt;
                                                    o.style.zIndex = ft(this.zlevel, this.z, this.z2);
                                                    h(n, o);
                                                    u.text && this.drawRectText(n, this.getBoundingRect())
                                                }
                                            };
                                            p.prototype.onRemove = function(n) {
                                                y(n, this._vmlEl);
                                                this._vmlEl = null;
                                                this._cropEl = null;
                                                this._imageEl = null;
                                                this.removeRectText(n)
                                            };
                                            p.prototype.onAdd = function(n) {
                                                h(n, this._vmlEl);
                                                this.appendRectText(n)
                                            };
                                            var et = "normal",
                                                ot = {},
                                                st = 0,
                                                hi = 100,
                                                ci = document.createElement("div"),
                                                li = function(n) {
                                                    var i = ot[n],
                                                        t, r;
                                                    if (!i) {
                                                        st > hi && (st = 0, ot = {});
                                                        t = ci.style;
                                                        try {
                                                            t.font = n;
                                                            r = t.fontFamily.split(",")[0]
                                                        } catch (u) {}
                                                        i = {
                                                            style: t.fontStyle || et,
                                                            variant: t.fontVariant || et,
                                                            weight: t.fontWeight || et,
                                                            size: parseFloat(t.fontSize || 12) | 0,
                                                            family: r || "Microsoft YaHei"
                                                        };
                                                        ot[n] = i;
                                                        st++
                                                    }
                                                    return i
                                                },
                                                l;
                                            nt.measureText = function(n, t) {
                                                var i = c.doc;
                                                l || (l = i.createElement("div"), l.style.cssText = "position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;", c.doc.body.appendChild(l));
                                                try {
                                                    l.style.font = t
                                                } catch (r) {}
                                                return l.innerHTML = "", l.appendChild(i.createTextNode(n)), {
                                                    width: l.offsetWidth
                                                }
                                            };
                                            var ht = new dt,
                                                ai = function(n, t, i, u) {
                                                    var o = this.style,
                                                        st = o.text,
                                                        a, g, vt, tt, ct, it, e, rt, w, v, et, ot;
                                                    if (st) {
                                                        var y, l, b = o.textAlign,
                                                            d = li(o.textFont),
                                                            lt = d.style + " " + d.variant + " " + d.weight + " " + d.size + 'px "' + d.family + '"',
                                                            p = o.textBaseline,
                                                            at = o.textVerticalAlign;
                                                        if (i = i || nt.getBoundingRect(st, lt, b, p), a = this.transform, a && !u && (ht.copy(t), ht.applyTransform(a), t = ht), u ? (y = t.x, l = t.y) : (g = o.textPosition, vt = o.textDistance, g instanceof Array ? (y = t.x + yt(g[0], t.width), l = t.y + yt(g[1], t.height), b = b || "left", p = p || "top") : (tt = nt.adjustTextPositionOnRect(g, t, i, vt), y = tt.x, l = tt.y, b = b || tt.textAlign, p = p || tt.textBaseline)), at) {
                                                            switch (at) {
                                                                case "middle":
                                                                    l -= i.height / 2;
                                                                    break;
                                                                case "bottom":
                                                                    l -= i.height
                                                            }
                                                            p = "top"
                                                        }
                                                        ct = d.size;
                                                        switch (p) {
                                                            case "hanging":
                                                            case "top":
                                                                l += ct / 1.75;
                                                                break;
                                                            case "middle":
                                                                break;
                                                            default:
                                                                l -= ct / 2.25
                                                        }
                                                        switch (b) {
                                                            case "center":
                                                                y -= i.width / 2;
                                                                break;
                                                            case "right":
                                                                y -= i.width
                                                        }
                                                        it = c.createNode;
                                                        e = this._textVmlEl;
                                                        e ? (v = e.firstChild, rt = v.nextSibling, w = rt.nextSibling) : (e = it("line"), rt = it("path"), w = it("textpath"), v = it("skew"), w.style["v-text-align"] = "left", ut(e), rt.textpathok = !0, w.on = !0, e.from = "0 0", e.to = "1000 0.05", h(e, v), h(e, rt), h(e, w), this._textVmlEl = e);
                                                        et = [y, l];
                                                        ot = e.style;
                                                        a && u ? (s(et, et, a), v.on = !0, v.matrix = a[0].toFixed(3) + f + a[2].toFixed(3) + f + a[1].toFixed(3) + f + a[3].toFixed(3) + ",0,0", v.offset = (r(et[0]) || 0) + "," + (r(et[1]) || 0), v.origin = "0 0", ot.left = "0px", ot.top = "0px") : (v.on = !1, ot.left = r(y) + "px", ot.top = r(l) + "px");
                                                        w.string = ui(st);
                                                        try {
                                                            w.style.font = lt
                                                        } catch (pt) {}
                                                        k(e, "fill", {
                                                            fill: u ? o.fill : o.textFill,
                                                            opacity: o.opacity
                                                        }, this);
                                                        k(e, "stroke", {
                                                            stroke: u ? o.stroke : o.textStroke,
                                                            opacity: o.opacity,
                                                            lineDash: o.lineDash
                                                        }, this);
                                                        e.style.zIndex = ft(this.zlevel, this.z, this.z2);
                                                        h(n, e)
                                                    }
                                                },
                                                vi = function(n) {
                                                    y(n, this._textVmlEl);
                                                    this._textVmlEl = null
                                                },
                                                yi = function(n) {
                                                    h(n, this._textVmlEl)
                                                },
                                                bt = [gt, ni, p, b, w];
                                            for (d = 0; d < bt.length; d++) g = bt[d].prototype, g.drawRectText = ai, g.removeRectText = vi, g.appendRectText = yi;
                                            w.prototype.brushVML = function(n) {
                                                var t = this.style;
                                                t.text ? this.drawRectText(n, {
                                                    x: t.x || 0,
                                                    y: t.y || 0,
                                                    width: 0,
                                                    height: 0
                                                }, this.getBoundingRect(), !0) : this.removeRectText(n)
                                            };
                                            w.prototype.onRemove = function(n) {
                                                this.removeRectText(n)
                                            };
                                            w.prototype.onAdd = function(n) {
                                                this.appendRectText(n)
                                            }
                                        }
                                    }, function(n, t, i) {
                                        var o;
                                        if (!i(2).canvasSupported) {
                                            var f = "urn:schemas-microsoft-com:vml",
                                                u, s = window,
                                                r = s.document,
                                                e = !1;
                                            try {
                                                r.namespaces.zrvml || r.namespaces.add("zrvml", f);
                                                u = function(n) {
                                                    return r.createElement("<zrvml:" + n + ' class="zrvml">')
                                                }
                                            } catch (h) {
                                                u = function(n) {
                                                    return r.createElement("<" + n + ' xmlns="' + f + '" class="zrvml">')
                                                }
                                            }
                                            o = function() {
                                                if (!e) {
                                                    e = !0;
                                                    var n = r.styleSheets;
                                                    n.length < 31 ? r.createStyleSheet().addRule(".zrvml", "behavior:url(#default#VML)") : n[0].addRule(".zrvml", "behavior:url(#default#VML)")
                                                }
                                            };
                                            n.exports = {
                                                doc: r,
                                                initVML: o,
                                                createNode: u
                                            }
                                        }
                                    }, function(n, t, i) {
                                        function r(n) {
                                            return parseInt(n, 10)
                                        }

                                        function u(n, t) {
                                            var r, i, u, f;
                                            h.initVML();
                                            this.root = n;
                                            this.storage = t;
                                            r = document.createElement("div");
                                            i = document.createElement("div");
                                            r.style.cssText = "display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;";
                                            i.style.cssText = "position:absolute;left:0;top:0;";
                                            n.appendChild(r);
                                            this._vmlRoot = i;
                                            this._vmlViewport = r;
                                            this.resize();
                                            u = t.delFromMap;
                                            f = t.addToMap;
                                            t.delFromMap = function(n) {
                                                var r = t.get(n);
                                                u.call(t, n);
                                                r && r.onRemove && r.onRemove(i)
                                            };
                                            t.addToMap = function(n) {
                                                n.onAdd && n.onAdd(i);
                                                f.call(t, n)
                                            };
                                            this._firstPaint = !0
                                        }

                                        function c(n) {
                                            return function() {
                                                s('In IE8.0 VML mode painter not support method "' + n + '"')
                                            }
                                        }
                                        var s = i(40),
                                            h = i(382),
                                            e, f, o;
                                        for (u.prototype = {
                                                constructor: u,
                                                getViewportRoot: function() {
                                                    return this._vmlViewport
                                                },
                                                refresh: function() {
                                                    var n = this.storage.getDisplayList(!0, !0);
                                                    this._paintList(n)
                                                },
                                                _paintList: function(n) {
                                                    for (var t, i = this._vmlRoot, r = 0; r < n.length; r++) {
                                                        if (t = n[r], t.invisible || t.ignore) {
                                                            if (!t.__alreadyNotVisible) t.onRemove(i);
                                                            t.__alreadyNotVisible = !0
                                                        } else {
                                                            if (t.__alreadyNotVisible) t.onAdd(i);
                                                            t.__alreadyNotVisible = !1;
                                                            t.__dirty && (t.beforeBrush && t.beforeBrush(), (t.brushVML || t.brush).call(t, i), t.afterBrush && t.afterBrush())
                                                        }
                                                        t.__dirty = !1
                                                    }
                                                    this._firstPaint && (this._vmlViewport.appendChild(i), this._firstPaint = !1)
                                                },
                                                resize: function(n, t) {
                                                    var n = n == null ? this._getWidth() : n,
                                                        t = t == null ? this._getHeight() : t,
                                                        i;
                                                    (this._width != n || this._height != t) && (this._width = n, this._height = t, i = this._vmlViewport.style, i.width = n + "px", i.height = t + "px")
                                                },
                                                dispose: function() {
                                                    this.root.innerHTML = "";
                                                    this._vmlRoot = this._vmlViewport = this.storage = null
                                                },
                                                getWidth: function() {
                                                    return this._width
                                                },
                                                getHeight: function() {
                                                    return this._height
                                                },
                                                clear: function() {
                                                    this._vmlViewport && this.root.removeChild(this._vmlViewport)
                                                },
                                                _getWidth: function() {
                                                    var t = this.root,
                                                        n = t.currentStyle;
                                                    return (t.clientWidth || r(n.width)) - r(n.paddingLeft) - r(n.paddingRight) | 0
                                                },
                                                _getHeight: function() {
                                                    var t = this.root,
                                                        n = t.currentStyle;
                                                    return (t.clientHeight || r(n.height)) - r(n.paddingTop) - r(n.paddingBottom) | 0
                                                }
                                            }, e = ["getLayer", "insertLayer", "eachLayer", "eachBuildinLayer", "eachOtherLayer", "getLayers", "modLayer", "delLayer", "clearLayer", "toDataURL", "pathToImage"], f = 0; f < e.length; f++) o = e[f], u.prototype[o] = c(o);
                                        n.exports = u
                                    }])
                            });